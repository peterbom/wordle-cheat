var Ir=Object.defineProperty;var Tr=(s,e,a)=>e in s?Ir(s,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):s[e]=a;var Ka=(s,e,a)=>(Tr(s,typeof e!="symbol"?e+"":e,a),a);import{r as sr,s as Br,n as zs,x as Rr}from"../chunks/scheduler.BRlKLB1Y.js";import{t as Nr,S as Mr,i as Fr,m as _s,j as G,g as A,e as N,s as J,c as M,d as X,h as Z,y as ma,o as L,k as I,z as Ur,A as he,b as xe,f as ze,B as We,l as ms}from"../chunks/index.C1FW_f2Y.js";function me(s){return(s==null?void 0:s.length)!==void 0?s:Array.from(s)}function ga(s,e){s.d(1),e.delete(s.key)}function ba(s,e,a,r,t,o,n,i,l,h,c,d){let u=s.length,p=o.length,m=u;const y={};for(;m--;)y[s[m].key]=m;const b=[],f=new Map,g=new Map,v=[];for(m=p;m--;){const k=d(t,o,m),P=a(k);let w=n.get(P);w?r&&v.push(()=>w.p(k,e)):(w=h(P,k),w.c()),f.set(P,b[m]=w),P in y&&g.set(P,Math.abs(m-y[P]))}const x=new Set,_=new Set;function z(k){Nr(k,1),k.m(i,c),n.set(k.key,k),c=k.first,p--}for(;u&&p;){const k=b[p-1],P=s[u-1],w=k.key,K=P.key;k===P?(c=k.first,u--,p--):f.has(K)?!n.has(w)||x.has(w)?z(k):_.has(K)?u--:g.get(w)>g.get(K)?(_.add(w),z(k)):(x.add(K),u--):(l(P,n),u--)}for(;u--;){const k=s[u];f.has(k.key)||l(k,n)}for(;p;)z(b[p-1]);return sr(v),b}const C=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,B=Object.keys,$=Array.isArray;function Y(s,e){return typeof e!="object"||B(e).forEach(function(a){s[a]=e[a]}),s}typeof Promise>"u"||C.Promise||(C.Promise=Promise);const Je=Object.getPrototypeOf,Lr={}.hasOwnProperty;function ee(s,e){return Lr.call(s,e)}function Ne(s,e){typeof e=="function"&&(e=e(Je(s))),(typeof Reflect>"u"?B:Reflect.ownKeys)(e).forEach(a=>{le(s,a,e[a])})}const ar=Object.defineProperty;function le(s,e,a,r){ar(s,e,Y(a&&ee(a,"get")&&typeof a.get=="function"?{get:a.get,set:a.set,configurable:!0}:{value:a,configurable:!0,writable:!0},r))}function Te(s){return{from:function(e){return s.prototype=Object.create(e.prototype),le(s.prototype,"constructor",s),{extend:Ne.bind(null,s.prototype)}}}}const $r=Object.getOwnPropertyDescriptor;function fa(s,e){let a;return $r(s,e)||(a=Je(s))&&fa(a,e)}const Vr=[].slice;function js(s,e,a){return Vr.call(s,e,a)}function rr(s,e){return e(s)}function $e(s){if(!s)throw new Error("Assertion Failed")}function tr(s){C.setImmediate?setImmediate(s):setTimeout(s,0)}function or(s,e){return s.reduce((a,r,t)=>{var o=e(r,t);return o&&(a[o[0]]=o[1]),a},{})}function ue(s,e){if(typeof e=="string"&&ee(s,e))return s[e];if(!e)return s;if(typeof e!="string"){for(var a=[],r=0,t=e.length;r<t;++r){var o=ue(s,e[r]);a.push(o)}return a}var n=e.indexOf(".");if(n!==-1){var i=s[e.substr(0,n)];return i==null?void 0:ue(i,e.substr(n+1))}}function se(s,e,a){if(s&&e!==void 0&&(!("isFrozen"in Object)||!Object.isFrozen(s)))if(typeof e!="string"&&"length"in e){$e(typeof a!="string"&&"length"in a);for(var r=0,t=e.length;r<t;++r)se(s,e[r],a[r])}else{var o=e.indexOf(".");if(o!==-1){var n=e.substr(0,o),i=e.substr(o+1);if(i==="")a===void 0?$(s)&&!isNaN(parseInt(n))?s.splice(n,1):delete s[n]:s[n]=a;else{var l=s[n];l&&ee(s,n)||(l=s[n]={}),se(l,i,a)}}else a===void 0?$(s)&&!isNaN(parseInt(e))?s.splice(e,1):delete s[e]:s[e]=a}}function nr(s){var e={};for(var a in s)ee(s,a)&&(e[a]=s[a]);return e}const Wr=[].concat;function ir(s){return Wr.apply([],s)}const lr="BigUint64Array,BigInt64Array,Array,Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey".split(",").concat(ir([8,16,32,64].map(s=>["Int","Uint","Float"].map(e=>e+s+"Array")))).filter(s=>C[s]),Gr=lr.map(s=>C[s]);or(lr,s=>[s,!0]);let pe=null;function os(s){pe=typeof WeakMap<"u"&&new WeakMap;const e=Ls(s);return pe=null,e}function Ls(s){if(!s||typeof s!="object")return s;let e=pe&&pe.get(s);if(e)return e;if($(s)){e=[],pe&&pe.set(s,e);for(var a=0,r=s.length;a<r;++a)e.push(Ls(s[a]))}else if(Gr.indexOf(s.constructor)>=0)e=s;else{const o=Je(s);for(var t in e=o===Object.prototype?{}:Object.create(o),pe&&pe.set(s,e),s)ee(s,t)&&(e[t]=Ls(s[t]))}return e}const{toString:Yr}={};function $s(s){return Yr.call(s).slice(8,-1)}const Vs=typeof Symbol<"u"?Symbol.iterator:"@@iterator",Hr=typeof Vs=="symbol"?function(s){var e;return s!=null&&(e=s[Vs])&&e.apply(s)}:function(){return null},Ie={};function ne(s){var e,a,r,t;if(arguments.length===1){if($(s))return s.slice();if(this===Ie&&typeof s=="string")return[s];if(t=Hr(s)){for(a=[];!(r=t.next()).done;)a.push(r.value);return a}if(s==null)return[s];if(typeof(e=s.length)=="number"){for(a=new Array(e);e--;)a[e]=s[e];return a}return[s]}for(e=arguments.length,a=new Array(e);e--;)a[e]=arguments[e];return a}const ka=typeof Symbol<"u"?s=>s[Symbol.toStringTag]==="AsyncFunction":()=>!1;var re=typeof location<"u"&&/^(http|https):\/\/(localhost|127\.0\.0\.1)/.test(location.href);function ur(s,e){re=s,cr=e}var cr=()=>!0;const Qr=!new Error("").stack;function Ae(){if(Qr)try{throw Ae.arguments,new Error}catch(s){return s}return new Error}function Ws(s,e){var a=s.stack;return a?(e=e||0,a.indexOf(s.name)===0&&(e+=(s.name+s.message).split(`
`).length),a.split(`
`).slice(e).filter(cr).map(r=>`
`+r).join("")):""}var dr=["Unknown","Constraint","Data","TransactionInactive","ReadOnly","Version","NotFound","InvalidState","InvalidAccess","Abort","Timeout","QuotaExceeded","Syntax","DataClone"],wa=["Modify","Bulk","OpenFailed","VersionChange","Schema","Upgrade","InvalidTable","MissingAPI","NoSuchDatabase","InvalidArgument","SubTransaction","Unsupported","Internal","DatabaseClosed","PrematureCommit","ForeignAwait"].concat(dr),Xr={VersionChanged:"Database version changed by other database connection",DatabaseClosed:"Database has been closed",Abort:"Transaction aborted",TransactionInactive:"Transaction has already completed or failed",MissingAPI:"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb"};function Be(s,e){this._e=Ae(),this.name=s,this.message=e}function hr(s,e){return s+". Errors: "+Object.keys(e).map(a=>e[a].toString()).filter((a,r,t)=>t.indexOf(a)===r).join(`
`)}function qs(s,e,a,r){this._e=Ae(),this.failures=e,this.failedKeys=r,this.successCount=a,this.message=hr(s,e)}function Ge(s,e){this._e=Ae(),this.name="BulkError",this.failures=Object.keys(e).map(a=>e[a]),this.failuresByPos=e,this.message=hr(s,e)}Te(Be).from(Error).extend({stack:{get:function(){return this._stack||(this._stack=this.name+": "+this.message+Ws(this._e,2))}},toString:function(){return this.name+": "+this.message}}),Te(qs).from(Be),Te(Ge).from(Be);var va=wa.reduce((s,e)=>(s[e]=e+"Error",s),{});const Jr=Be;var E=wa.reduce((s,e)=>{var a=e+"Error";function r(t,o){this._e=Ae(),this.name=a,t?typeof t=="string"?(this.message=`${t}${o?`
 `+o:""}`,this.inner=o||null):typeof t=="object"&&(this.message=`${t.name} ${t.message}`,this.inner=t):(this.message=Xr[e]||a,this.inner=null)}return Te(r).from(Jr),s[e]=r,s},{});E.Syntax=SyntaxError,E.Type=TypeError,E.Range=RangeError;var Oa=dr.reduce((s,e)=>(s[e+"Error"]=E[e],s),{}),gs=wa.reduce((s,e)=>(["Syntax","Type","Range"].indexOf(e)===-1&&(s[e+"Error"]=E[e]),s),{});function O(){}function Ze(s){return s}function Zr(s,e){return s==null||s===Ze?e:function(a){return e(s(a))}}function Pe(s,e){return function(){s.apply(this,arguments),e.apply(this,arguments)}}function et(s,e){return s===O?e:function(){var a=s.apply(this,arguments);a!==void 0&&(arguments[0]=a);var r=this.onsuccess,t=this.onerror;this.onsuccess=null,this.onerror=null;var o=e.apply(this,arguments);return r&&(this.onsuccess=this.onsuccess?Pe(r,this.onsuccess):r),t&&(this.onerror=this.onerror?Pe(t,this.onerror):t),o!==void 0?o:a}}function st(s,e){return s===O?e:function(){s.apply(this,arguments);var a=this.onsuccess,r=this.onerror;this.onsuccess=this.onerror=null,e.apply(this,arguments),a&&(this.onsuccess=this.onsuccess?Pe(a,this.onsuccess):a),r&&(this.onerror=this.onerror?Pe(r,this.onerror):r)}}function at(s,e){return s===O?e:function(a){var r=s.apply(this,arguments);Y(a,r);var t=this.onsuccess,o=this.onerror;this.onsuccess=null,this.onerror=null;var n=e.apply(this,arguments);return t&&(this.onsuccess=this.onsuccess?Pe(t,this.onsuccess):t),o&&(this.onerror=this.onerror?Pe(o,this.onerror):o),r===void 0?n===void 0?void 0:n:Y(r,n)}}function rt(s,e){return s===O?e:function(){return e.apply(this,arguments)!==!1&&s.apply(this,arguments)}}function xa(s,e){return s===O?e:function(){var a=s.apply(this,arguments);if(a&&typeof a.then=="function"){for(var r=this,t=arguments.length,o=new Array(t);t--;)o[t]=arguments[t];return a.then(function(){return e.apply(r,o)})}return e.apply(this,arguments)}}gs.ModifyError=qs,gs.DexieError=Be,gs.BulkError=Ge;var es={};const pr=100,[Gs,Es,Ys]=typeof Promise>"u"?[]:(()=>{let s=Promise.resolve();if(typeof crypto>"u"||!crypto.subtle)return[s,Je(s),s];const e=crypto.subtle.digest("SHA-512",new Uint8Array([0]));return[e,Je(e),s]})(),yr=Es&&Es.then,bs=Gs&&Gs.constructor,za=!!Ys;var Hs=!1,tt=Ys?()=>{Ys.then(ls)}:C.setImmediate?setImmediate.bind(null,ls):C.MutationObserver?()=>{var s=document.createElement("div");new MutationObserver(()=>{ls(),s=null}).observe(s,{attributes:!0}),s.setAttribute("i","1")}:()=>{setTimeout(ls,0)},Ye=function(s,e){Ve.push([s,e]),Ps&&(tt(),Ps=!1)},Qs=!0,Ps=!0,_e=[],fs=[],Xs=null,Js=Ze,Re={id:"global",global:!0,ref:0,unhandleds:[],onunhandled:Ia,pgp:!1,env:{},finalize:function(){this.unhandleds.forEach(s=>{try{Ia(s[0],s[1])}catch{}})}},q=Re,Ve=[],je=0,ks=[];function j(s){if(typeof this!="object")throw new TypeError("Promises must be constructed via new");this._listeners=[],this.onuncatched=O,this._lib=!1;var e=this._PSD=q;if(re&&(this._stackHolder=Ae(),this._prev=null,this._numPrev=0),typeof s!="function"){if(s!==es)throw new TypeError("Not a function");return this._state=arguments[1],this._value=arguments[2],void(this._state===!1&&ea(this,this._value))}this._state=null,this._value=null,++e.ref,gr(this,s)}const Zs={get:function(){var s=q,e=Ss;function a(r,t){var o=!s.global&&(s!==q||e!==Ss);const n=o&&!ce();var i=new j((l,h)=>{_a(this,new mr(As(r,s,o,n),As(t,s,o,n),l,h,s))});return re&&kr(i,this),i}return a.prototype=es,a},set:function(s){le(this,"then",s&&s.prototype===es?Zs:{get:function(){return s},set:Zs.set})}};function mr(s,e,a,r,t){this.onFulfilled=typeof s=="function"?s:null,this.onRejected=typeof e=="function"?e:null,this.resolve=a,this.reject=r,this.psd=t}function gr(s,e){try{e(a=>{if(s._state===null){if(a===s)throw new TypeError("A promise cannot be resolved with itself.");var r=s._lib&&ns();a&&typeof a.then=="function"?gr(s,(t,o)=>{a instanceof j?a._then(t,o):a.then(t,o)}):(s._state=!0,s._value=a,br(s)),r&&is()}},ea.bind(null,s))}catch(a){ea(s,a)}}function ea(s,e){if(fs.push(e),s._state===null){var a=s._lib&&ns();e=Js(e),s._state=!1,s._value=e,re&&e!==null&&typeof e=="object"&&!e._promise&&function(r,t,o){try{r.apply(null,o)}catch(n){t&&t(n)}}(()=>{var r=fa(e,"stack");e._promise=s,le(e,"stack",{get:()=>Hs?r&&(r.get?r.get.apply(e):r.value):s.stack})}),function(r){_e.some(t=>t._value===r._value)||_e.push(r)}(s),br(s),a&&is()}}function br(s){var e=s._listeners;s._listeners=[];for(var a=0,r=e.length;a<r;++a)_a(s,e[a]);var t=s._PSD;--t.ref||t.finalize(),je===0&&(++je,Ye(()=>{--je==0&&ja()},[]))}function _a(s,e){if(s._state!==null){var a=s._state?e.onFulfilled:e.onRejected;if(a===null)return(s._state?e.resolve:e.reject)(s._value);++e.psd.ref,++je,Ye(ot,[a,s,e])}else s._listeners.push(e)}function ot(s,e,a){try{Xs=e;var r,t=e._value;e._state?r=s(t):(fs.length&&(fs=[]),r=s(t),fs.indexOf(t)===-1&&function(o){for(var n=_e.length;n;)if(_e[--n]._value===o._value)return void _e.splice(n,1)}(e)),a.resolve(r)}catch(o){a.reject(o)}finally{Xs=null,--je==0&&ja(),--a.psd.ref||a.psd.finalize()}}function fr(s,e,a){if(e.length===a)return e;var r="";if(s._state===!1){var t,o,n=s._value;n!=null?(t=n.name||"Error",o=n.message||n,r=Ws(n,0)):(t=n,o=""),e.push(t+(o?": "+o:"")+r)}return re&&((r=Ws(s._stackHolder,2))&&e.indexOf(r)===-1&&e.push(r),s._prev&&fr(s._prev,e,a)),e}function kr(s,e){var a=e?e._numPrev+1:0;a<100&&(s._prev=e,s._numPrev=a)}function ls(){ns()&&is()}function ns(){var s=Qs;return Qs=!1,Ps=!1,s}function is(){var s,e,a;do for(;Ve.length>0;)for(s=Ve,Ve=[],a=s.length,e=0;e<a;++e){var r=s[e];r[0].apply(null,r[1])}while(Ve.length>0);Qs=!0,Ps=!0}function ja(){var s=_e;_e=[],s.forEach(r=>{r._PSD.onunhandled.call(null,r._value,r)});for(var e=ks.slice(0),a=e.length;a;)e[--a]()}function us(s){return new j(es,!1,s)}function D(s,e){var a=q;return function(){var r=ns(),t=q;try{return be(a,!0),s.apply(this,arguments)}catch(o){e&&e(o)}finally{be(t,!1),r&&is()}}}Ne(j.prototype,{then:Zs,_then:function(s,e){_a(this,new mr(null,null,s,e,q))},catch:function(s){if(arguments.length===1)return this.then(null,s);var e=arguments[0],a=arguments[1];return typeof e=="function"?this.then(null,r=>r instanceof e?a(r):us(r)):this.then(null,r=>r&&r.name===e?a(r):us(r))},finally:function(s){return this.then(e=>(s(),e),e=>(s(),us(e)))},stack:{get:function(){if(this._stack)return this._stack;try{Hs=!0;var s=fr(this,[],20).join(`
From previous: `);return this._state!==null&&(this._stack=s),s}finally{Hs=!1}}},timeout:function(s,e){return s<1/0?new j((a,r)=>{var t=setTimeout(()=>r(new E.Timeout(e)),s);this.then(a,r).finally(clearTimeout.bind(null,t))}):this}}),typeof Symbol<"u"&&Symbol.toStringTag&&le(j.prototype,Symbol.toStringTag,"Dexie.Promise"),Re.env=wr(),Ne(j,{all:function(){var s=ne.apply(null,arguments).map(cs);return new j(function(e,a){s.length===0&&e([]);var r=s.length;s.forEach((t,o)=>j.resolve(t).then(n=>{s[o]=n,--r||e(s)},a))})},resolve:s=>{if(s instanceof j)return s;if(s&&typeof s.then=="function")return new j((a,r)=>{s.then(a,r)});var e=new j(es,!0,s);return kr(e,Xs),e},reject:us,race:function(){var s=ne.apply(null,arguments).map(cs);return new j((e,a)=>{s.map(r=>j.resolve(r).then(e,a))})},PSD:{get:()=>q,set:s=>q=s},totalEchoes:{get:()=>Ss},newPSD:ge,usePSD:Fe,scheduler:{get:()=>Ye,set:s=>{Ye=s}},rejectionMapper:{get:()=>Js,set:s=>{Js=s}},follow:(s,e)=>new j((a,r)=>ge((t,o)=>{var n=q;n.unhandleds=[],n.onunhandled=o,n.finalize=Pe(function(){(function(i){function l(){i(),ks.splice(ks.indexOf(l),1)}ks.push(l),++je,Ye(()=>{--je==0&&ja()},[])})(()=>{this.unhandleds.length===0?t():o(this.unhandleds[0])})},n.finalize),s()},e,a,r))}),bs&&(bs.allSettled&&le(j,"allSettled",function(){const s=ne.apply(null,arguments).map(cs);return new j(e=>{s.length===0&&e([]);let a=s.length;const r=new Array(a);s.forEach((t,o)=>j.resolve(t).then(n=>r[o]={status:"fulfilled",value:n},n=>r[o]={status:"rejected",reason:n}).then(()=>--a||e(r)))})}),bs.any&&typeof AggregateError<"u"&&le(j,"any",function(){const s=ne.apply(null,arguments).map(cs);return new j((e,a)=>{s.length===0&&a(new AggregateError([]));let r=s.length;const t=new Array(r);s.forEach((o,n)=>j.resolve(o).then(i=>e(i),i=>{t[n]=i,--r||a(new AggregateError(t))}))})}));const U={awaits:0,echoes:0,id:0};var nt=0,ws=[],Ts=0,Ss=0,it=0;function ge(s,e,a,r){var t=q,o=Object.create(t);o.parent=t,o.ref=0,o.global=!1,o.id=++it;var n=Re.env;o.env=za?{Promise:j,PromiseProp:{value:j,configurable:!0,writable:!0},all:j.all,race:j.race,allSettled:j.allSettled,any:j.any,resolve:j.resolve,reject:j.reject,nthen:Ca(n.nthen,o),gthen:Ca(n.gthen,o)}:{},e&&Y(o,e),++t.ref,o.finalize=function(){--this.parent.ref||this.parent.finalize()};var i=Fe(o,s,a,r);return o.ref===0&&o.finalize(),i}function Me(){return U.id||(U.id=++nt),++U.awaits,U.echoes+=pr,U.id}function ce(){return!!U.awaits&&(--U.awaits==0&&(U.id=0),U.echoes=U.awaits*pr,!0)}function cs(s){return U.echoes&&s&&s.constructor===bs?(Me(),s.then(e=>(ce(),e),e=>(ce(),R(e)))):s}function lt(s){++Ss,U.echoes&&--U.echoes!=0||(U.echoes=U.id=0),ws.push(q),be(s,!0)}function ut(){var s=ws[ws.length-1];ws.pop(),be(s,!1)}function be(s,e){var a=q;if((e?!U.echoes||Ts++&&s===q:!Ts||--Ts&&s===q)||vr(e?lt.bind(null,s):ut),s!==q&&(q=s,a===Re&&(Re.env=wr()),za)){var r=Re.env.Promise,t=s.env;Es.then=t.nthen,r.prototype.then=t.gthen,(a.global||s.global)&&(Object.defineProperty(C,"Promise",t.PromiseProp),r.all=t.all,r.race=t.race,r.resolve=t.resolve,r.reject=t.reject,t.allSettled&&(r.allSettled=t.allSettled),t.any&&(r.any=t.any))}}function wr(){var s=C.Promise;return za?{Promise:s,PromiseProp:Object.getOwnPropertyDescriptor(C,"Promise"),all:s.all,race:s.race,allSettled:s.allSettled,any:s.any,resolve:s.resolve,reject:s.reject,nthen:Es.then,gthen:s.prototype.then}:{}}function Fe(s,e,a,r,t){var o=q;try{return be(s,!0),e(a,r,t)}finally{be(o,!1)}}function vr(s){yr.call(Gs,s)}function As(s,e,a,r){return typeof s!="function"?s:function(){var t=q;a&&Me(),be(e,!0);try{return s.apply(this,arguments)}finally{be(t,!1),r&&vr(ce)}}}function Ca(s,e){return function(a,r){return s.call(this,As(a,e),As(r,e))}}(""+yr).indexOf("[native code]")===-1&&(Me=ce=O);const Da="unhandledrejection";function Ia(s,e){var a;try{a=e.onuncatched(s)}catch{}if(a!==!1)try{var r,t={promise:e,reason:s};if(C.document&&document.createEvent?((r=document.createEvent("Event")).initEvent(Da,!0,!0),Y(r,t)):C.CustomEvent&&Y(r=new CustomEvent(Da,{detail:t}),t),r&&C.dispatchEvent&&(dispatchEvent(r),!C.PromiseRejectionEvent&&C.onunhandledrejection))try{C.onunhandledrejection(r)}catch{}re&&r&&!r.defaultPrevented&&console.warn(`Unhandled rejection: ${s.stack||s}`)}catch{}}var R=j.reject;function sa(s,e,a,r){if(s.idbdb&&(s._state.openComplete||q.letThrough||s._vip)){var t=s._createTransaction(e,a,s._dbSchema);try{t.create(),s._state.PR1398_maxLoop=3}catch(o){return o.name===va.InvalidState&&s.isOpen()&&--s._state.PR1398_maxLoop>0?(console.warn("Dexie: Need to reopen db"),s._close(),s.open().then(()=>sa(s,e,a,r))):R(o)}return t._promise(e,(o,n)=>ge(()=>(q.trans=t,r(o,n,t)))).then(o=>t._completion.then(()=>o))}if(s._state.openComplete)return R(new E.DatabaseClosed(s._state.dbOpenError));if(!s._state.isBeingOpened){if(!s._options.autoOpen)return R(new E.DatabaseClosed);s.open().catch(O)}return s._state.dbReadyPromise.then(()=>sa(s,e,a,r))}const Ta="3.2.6",ve="￿",aa=-1/0,te="Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.",xr="String expected.",He=[],Cs=typeof navigator<"u"&&/(MSIE|Trident|Edge)/.test(navigator.userAgent),ct=Cs,dt=Cs,zr=s=>!/(dexie\.js|dexie\.min\.js)/.test(s),Ds="__dbnames",Bs="readonly",Rs="readwrite";function Se(s,e){return s?e?function(){return s.apply(this,arguments)&&e.apply(this,arguments)}:s:e}const _r={type:3,lower:-1/0,lowerOpen:!1,upper:[[]],upperOpen:!1};function ds(s){return typeof s!="string"||/\./.test(s)?e=>e:e=>(e[s]===void 0&&s in e&&delete(e=os(e))[s],e)}class ht{_trans(e,a,r){const t=this._tx||q.trans,o=this.name;function n(l,h,c){if(!c.schema[o])throw new E.NotFound("Table "+o+" not part of transaction");return a(c.idbtrans,c)}const i=ns();try{return t&&t.db===this.db?t===q.trans?t._promise(e,n,r):ge(()=>t._promise(e,n,r),{trans:t,transless:q.transless||q}):sa(this.db,e,[this.name],n)}finally{i&&is()}}get(e,a){return e&&e.constructor===Object?this.where(e).first(a):this._trans("readonly",r=>this.core.get({trans:r,key:e}).then(t=>this.hook.reading.fire(t))).then(a)}where(e){if(typeof e=="string")return new this.db.WhereClause(this,e);if($(e))return new this.db.WhereClause(this,`[${e.join("+")}]`);const a=B(e);if(a.length===1)return this.where(a[0]).equals(e[a[0]]);const r=this.schema.indexes.concat(this.schema.primKey).filter(h=>{if(h.compound&&a.every(c=>h.keyPath.indexOf(c)>=0)){for(let c=0;c<a.length;++c)if(a.indexOf(h.keyPath[c])===-1)return!1;return!0}return!1}).sort((h,c)=>h.keyPath.length-c.keyPath.length)[0];if(r&&this.db._maxKey!==ve){const h=r.keyPath.slice(0,a.length);return this.where(h).equals(h.map(c=>e[c]))}!r&&re&&console.warn(`The query ${JSON.stringify(e)} on ${this.name} would benefit of a compound index [${a.join("+")}]`);const{idxByName:t}=this.schema,o=this.db._deps.indexedDB;function n(h,c){try{return o.cmp(h,c)===0}catch{return!1}}const[i,l]=a.reduce(([h,c],d)=>{const u=t[d],p=e[d];return[h||u,h||!u?Se(c,u&&u.multi?m=>{const y=ue(m,d);return $(y)&&y.some(b=>n(p,b))}:m=>n(p,ue(m,d))):c]},[null,null]);return i?this.where(i.name).equals(e[i.keyPath]).filter(l):r?this.filter(l):this.where(a).equals("")}filter(e){return this.toCollection().and(e)}count(e){return this.toCollection().count(e)}offset(e){return this.toCollection().offset(e)}limit(e){return this.toCollection().limit(e)}each(e){return this.toCollection().each(e)}toArray(e){return this.toCollection().toArray(e)}toCollection(){return new this.db.Collection(new this.db.WhereClause(this))}orderBy(e){return new this.db.Collection(new this.db.WhereClause(this,$(e)?`[${e.join("+")}]`:e))}reverse(){return this.toCollection().reverse()}mapToClass(e){this.schema.mappedClass=e;const a=r=>{if(!r)return r;const t=Object.create(e.prototype);for(var o in r)if(ee(r,o))try{t[o]=r[o]}catch{}return t};return this.schema.readHook&&this.hook.reading.unsubscribe(this.schema.readHook),this.schema.readHook=a,this.hook("reading",a),e}defineClass(){return this.mapToClass(function(e){Y(this,e)})}add(e,a){const{auto:r,keyPath:t}=this.schema.primKey;let o=e;return t&&r&&(o=ds(t)(e)),this._trans("readwrite",n=>this.core.mutate({trans:n,type:"add",keys:a!=null?[a]:null,values:[o]})).then(n=>n.numFailures?j.reject(n.failures[0]):n.lastResult).then(n=>{if(t)try{se(e,t,n)}catch{}return n})}update(e,a){if(typeof e!="object"||$(e))return this.where(":id").equals(e).modify(a);{const r=ue(e,this.schema.primKey.keyPath);if(r===void 0)return R(new E.InvalidArgument("Given object does not contain its primary key"));try{typeof a!="function"?B(a).forEach(t=>{se(e,t,a[t])}):a(e,{value:e,primKey:r})}catch{}return this.where(":id").equals(r).modify(a)}}put(e,a){const{auto:r,keyPath:t}=this.schema.primKey;let o=e;return t&&r&&(o=ds(t)(e)),this._trans("readwrite",n=>this.core.mutate({trans:n,type:"put",values:[o],keys:a!=null?[a]:null})).then(n=>n.numFailures?j.reject(n.failures[0]):n.lastResult).then(n=>{if(t)try{se(e,t,n)}catch{}return n})}delete(e){return this._trans("readwrite",a=>this.core.mutate({trans:a,type:"delete",keys:[e]})).then(a=>a.numFailures?j.reject(a.failures[0]):void 0)}clear(){return this._trans("readwrite",e=>this.core.mutate({trans:e,type:"deleteRange",range:_r})).then(e=>e.numFailures?j.reject(e.failures[0]):void 0)}bulkGet(e){return this._trans("readonly",a=>this.core.getMany({keys:e,trans:a}).then(r=>r.map(t=>this.hook.reading.fire(t))))}bulkAdd(e,a,r){const t=Array.isArray(a)?a:void 0,o=(r=r||(t?void 0:a))?r.allKeys:void 0;return this._trans("readwrite",n=>{const{auto:i,keyPath:l}=this.schema.primKey;if(l&&t)throw new E.InvalidArgument("bulkAdd(): keys argument invalid on tables with inbound keys");if(t&&t.length!==e.length)throw new E.InvalidArgument("Arguments objects and keys must have the same length");const h=e.length;let c=l&&i?e.map(ds(l)):e;return this.core.mutate({trans:n,type:"add",keys:t,values:c,wantResults:o}).then(({numFailures:d,results:u,lastResult:p,failures:m})=>{if(d===0)return o?u:p;throw new Ge(`${this.name}.bulkAdd(): ${d} of ${h} operations failed`,m)})})}bulkPut(e,a,r){const t=Array.isArray(a)?a:void 0,o=(r=r||(t?void 0:a))?r.allKeys:void 0;return this._trans("readwrite",n=>{const{auto:i,keyPath:l}=this.schema.primKey;if(l&&t)throw new E.InvalidArgument("bulkPut(): keys argument invalid on tables with inbound keys");if(t&&t.length!==e.length)throw new E.InvalidArgument("Arguments objects and keys must have the same length");const h=e.length;let c=l&&i?e.map(ds(l)):e;return this.core.mutate({trans:n,type:"put",keys:t,values:c,wantResults:o}).then(({numFailures:d,results:u,lastResult:p,failures:m})=>{if(d===0)return o?u:p;throw new Ge(`${this.name}.bulkPut(): ${d} of ${h} operations failed`,m)})})}bulkDelete(e){const a=e.length;return this._trans("readwrite",r=>this.core.mutate({trans:r,type:"delete",keys:e})).then(({numFailures:r,lastResult:t,failures:o})=>{if(r===0)return t;throw new Ge(`${this.name}.bulkDelete(): ${r} of ${a} operations failed`,o)})}}function Qe(s){var e={},a=function(n,i){if(i){for(var l=arguments.length,h=new Array(l-1);--l;)h[l-1]=arguments[l];return e[n].subscribe.apply(null,h),s}if(typeof n=="string")return e[n]};a.addEventType=o;for(var r=1,t=arguments.length;r<t;++r)o(arguments[r]);return a;function o(n,i,l){if(typeof n!="object"){var h;i||(i=rt),l||(l=O);var c={subscribers:[],fire:l,subscribe:function(d){c.subscribers.indexOf(d)===-1&&(c.subscribers.push(d),c.fire=i(c.fire,d))},unsubscribe:function(d){c.subscribers=c.subscribers.filter(function(u){return u!==d}),c.fire=c.subscribers.reduce(i,l)}};return e[n]=a[n]=c,c}B(h=n).forEach(function(d){var u=h[d];if($(u))o(d,h[d][0],h[d][1]);else{if(u!=="asap")throw new E.InvalidArgument("Invalid event config");var p=o(d,Ze,function(){for(var m=arguments.length,y=new Array(m);m--;)y[m]=arguments[m];p.subscribers.forEach(function(b){tr(function(){b.apply(null,y)})})})}})}}function Le(s,e){return Te(e).from({prototype:s}),e}function Ce(s,e){return!(s.filter||s.algorithm||s.or)&&(e?s.justLimit:!s.replayFilter)}function Ns(s,e){s.filter=Se(s.filter,e)}function Ms(s,e,a){var r=s.replayFilter;s.replayFilter=r?()=>Se(r(),e()):e,s.justLimit=a&&!r}function vs(s,e){if(s.isPrimKey)return e.primaryKey;const a=e.getIndexByKeyPath(s.index);if(!a)throw new E.Schema("KeyPath "+s.index+" on object store "+e.name+" is not indexed");return a}function Ba(s,e,a){const r=vs(s,e.schema);return e.openCursor({trans:a,values:!s.keysOnly,reverse:s.dir==="prev",unique:!!s.unique,query:{index:r,range:s.range}})}function hs(s,e,a,r){const t=s.replayFilter?Se(s.filter,s.replayFilter()):s.filter;if(s.or){const o={},n=(i,l,h)=>{if(!t||t(l,h,u=>l.stop(u),u=>l.fail(u))){var c=l.primaryKey,d=""+c;d==="[object ArrayBuffer]"&&(d=""+new Uint8Array(c)),ee(o,d)||(o[d]=!0,e(i,l,h))}};return Promise.all([s.or._iterate(n,a),Ra(Ba(s,r,a),s.algorithm,n,!s.keysOnly&&s.valueMapper)])}return Ra(Ba(s,r,a),Se(s.algorithm,t),e,!s.keysOnly&&s.valueMapper)}function Ra(s,e,a,r){var t=D(r?(o,n,i)=>a(r(o),n,i):a);return s.then(o=>{if(o)return o.start(()=>{var n=()=>o.continue();e&&!e(o,i=>n=i,i=>{o.stop(i),n=O},i=>{o.fail(i),n=O})||t(o.value,o,i=>n=i),n()})})}function W(s,e){try{const a=Na(s),r=Na(e);if(a!==r)return a==="Array"?1:r==="Array"?-1:a==="binary"?1:r==="binary"?-1:a==="string"?1:r==="string"?-1:a==="Date"?1:r!=="Date"?NaN:-1;switch(a){case"number":case"Date":case"string":return s>e?1:s<e?-1:0;case"binary":return function(t,o){const n=t.length,i=o.length,l=n<i?n:i;for(let h=0;h<l;++h)if(t[h]!==o[h])return t[h]<o[h]?-1:1;return n===i?0:n<i?-1:1}(Ma(s),Ma(e));case"Array":return function(t,o){const n=t.length,i=o.length,l=n<i?n:i;for(let h=0;h<l;++h){const c=W(t[h],o[h]);if(c!==0)return c}return n===i?0:n<i?-1:1}(s,e)}}catch{}return NaN}function Na(s){const e=typeof s;if(e!=="object")return e;if(ArrayBuffer.isView(s))return"binary";const a=$s(s);return a==="ArrayBuffer"?"binary":a}function Ma(s){return s instanceof Uint8Array?s:ArrayBuffer.isView(s)?new Uint8Array(s.buffer,s.byteOffset,s.byteLength):new Uint8Array(s)}class pt{_read(e,a){var r=this._ctx;return r.error?r.table._trans(null,R.bind(null,r.error)):r.table._trans("readonly",e).then(a)}_write(e){var a=this._ctx;return a.error?a.table._trans(null,R.bind(null,a.error)):a.table._trans("readwrite",e,"locked")}_addAlgorithm(e){var a=this._ctx;a.algorithm=Se(a.algorithm,e)}_iterate(e,a){return hs(this._ctx,e,a,this._ctx.table.core)}clone(e){var a=Object.create(this.constructor.prototype),r=Object.create(this._ctx);return e&&Y(r,e),a._ctx=r,a}raw(){return this._ctx.valueMapper=null,this}each(e){var a=this._ctx;return this._read(r=>hs(a,e,r,a.table.core))}count(e){return this._read(a=>{const r=this._ctx,t=r.table.core;if(Ce(r,!0))return t.count({trans:a,query:{index:vs(r,t.schema),range:r.range}}).then(n=>Math.min(n,r.limit));var o=0;return hs(r,()=>(++o,!1),a,t).then(()=>o)}).then(e)}sortBy(e,a){const r=e.split(".").reverse(),t=r[0],o=r.length-1;function n(h,c){return c?n(h[r[c]],c-1):h[t]}var i=this._ctx.dir==="next"?1:-1;function l(h,c){var d=n(h,o),u=n(c,o);return d<u?-i:d>u?i:0}return this.toArray(function(h){return h.sort(l)}).then(a)}toArray(e){return this._read(a=>{var r=this._ctx;if(r.dir==="next"&&Ce(r,!0)&&r.limit>0){const{valueMapper:t}=r,o=vs(r,r.table.core.schema);return r.table.core.query({trans:a,limit:r.limit,values:!0,query:{index:o,range:r.range}}).then(({result:n})=>t?n.map(t):n)}{const t=[];return hs(r,o=>t.push(o),a,r.table.core).then(()=>t)}},e)}offset(e){var a=this._ctx;return e<=0||(a.offset+=e,Ce(a)?Ms(a,()=>{var r=e;return(t,o)=>r===0||(r===1?(--r,!1):(o(()=>{t.advance(r),r=0}),!1))}):Ms(a,()=>{var r=e;return()=>--r<0})),this}limit(e){return this._ctx.limit=Math.min(this._ctx.limit,e),Ms(this._ctx,()=>{var a=e;return function(r,t,o){return--a<=0&&t(o),a>=0}},!0),this}until(e,a){return Ns(this._ctx,function(r,t,o){return!e(r.value)||(t(o),a)}),this}first(e){return this.limit(1).toArray(function(a){return a[0]}).then(e)}last(e){return this.reverse().first(e)}filter(e){var a,r;return Ns(this._ctx,function(t){return e(t.value)}),a=this._ctx,r=e,a.isMatch=Se(a.isMatch,r),this}and(e){return this.filter(e)}or(e){return new this.db.WhereClause(this._ctx.table,e,this)}reverse(){return this._ctx.dir=this._ctx.dir==="prev"?"next":"prev",this._ondirectionchange&&this._ondirectionchange(this._ctx.dir),this}desc(){return this.reverse()}eachKey(e){var a=this._ctx;return a.keysOnly=!a.isMatch,this.each(function(r,t){e(t.key,t)})}eachUniqueKey(e){return this._ctx.unique="unique",this.eachKey(e)}eachPrimaryKey(e){var a=this._ctx;return a.keysOnly=!a.isMatch,this.each(function(r,t){e(t.primaryKey,t)})}keys(e){var a=this._ctx;a.keysOnly=!a.isMatch;var r=[];return this.each(function(t,o){r.push(o.key)}).then(function(){return r}).then(e)}primaryKeys(e){var a=this._ctx;if(a.dir==="next"&&Ce(a,!0)&&a.limit>0)return this._read(t=>{var o=vs(a,a.table.core.schema);return a.table.core.query({trans:t,values:!1,limit:a.limit,query:{index:o,range:a.range}})}).then(({result:t})=>t).then(e);a.keysOnly=!a.isMatch;var r=[];return this.each(function(t,o){r.push(o.primaryKey)}).then(function(){return r}).then(e)}uniqueKeys(e){return this._ctx.unique="unique",this.keys(e)}firstKey(e){return this.limit(1).keys(function(a){return a[0]}).then(e)}lastKey(e){return this.reverse().firstKey(e)}distinct(){var e=this._ctx,a=e.index&&e.table.schema.idxByName[e.index];if(!a||!a.multi)return this;var r={};return Ns(this._ctx,function(t){var o=t.primaryKey.toString(),n=ee(r,o);return r[o]=!0,!n}),this}modify(e){var a=this._ctx;return this._write(r=>{var t;if(typeof e=="function")t=e;else{var o=B(e),n=o.length;t=function(y){for(var b=!1,f=0;f<n;++f){var g=o[f],v=e[g];ue(y,g)!==v&&(se(y,g,v),b=!0)}return b}}const i=a.table.core,{outbound:l,extractKey:h}=i.schema.primaryKey,c=this.db._options.modifyChunkSize||200,d=[];let u=0;const p=[],m=(y,b)=>{const{failures:f,numFailures:g}=b;u+=y-g;for(let v of B(f))d.push(f[v])};return this.clone().primaryKeys().then(y=>{const b=f=>{const g=Math.min(c,y.length-f);return i.getMany({trans:r,keys:y.slice(f,f+g),cache:"immutable"}).then(v=>{const x=[],_=[],z=l?[]:null,k=[];for(let w=0;w<g;++w){const K=v[w],S={value:os(K),primKey:y[f+w]};t.call(S,S.value,S)!==!1&&(S.value==null?k.push(y[f+w]):l||W(h(K),h(S.value))===0?(_.push(S.value),l&&z.push(y[f+w])):(k.push(y[f+w]),x.push(S.value)))}const P=Ce(a)&&a.limit===1/0&&(typeof e!="function"||e===Fs)&&{index:a.index,range:a.range};return Promise.resolve(x.length>0&&i.mutate({trans:r,type:"add",values:x}).then(w=>{for(let K in w.failures)k.splice(parseInt(K),1);m(x.length,w)})).then(()=>(_.length>0||P&&typeof e=="object")&&i.mutate({trans:r,type:"put",keys:z,values:_,criteria:P,changeSpec:typeof e!="function"&&e}).then(w=>m(_.length,w))).then(()=>(k.length>0||P&&e===Fs)&&i.mutate({trans:r,type:"delete",keys:k,criteria:P}).then(w=>m(k.length,w))).then(()=>y.length>f+g&&b(f+c))})};return b(0).then(()=>{if(d.length>0)throw new qs("Error modifying one or more objects",d,u,p);return y.length})})})}delete(){var e=this._ctx,a=e.range;return Ce(e)&&(e.isPrimKey&&!dt||a.type===3)?this._write(r=>{const{primaryKey:t}=e.table.core.schema,o=a;return e.table.core.count({trans:r,query:{index:t,range:o}}).then(n=>e.table.core.mutate({trans:r,type:"deleteRange",range:o}).then(({failures:i,lastResult:l,results:h,numFailures:c})=>{if(c)throw new qs("Could not delete some values",Object.keys(i).map(d=>i[d]),n-c);return n-c}))}):this.modify(Fs)}}const Fs=(s,e)=>e.value=null;function yt(s,e){return s<e?-1:s===e?0:1}function mt(s,e){return s>e?-1:s===e?0:1}function Q(s,e,a){var r=s instanceof qr?new s.Collection(s):s;return r._ctx.error=a?new a(e):new TypeError(e),r}function De(s){return new s.Collection(s,()=>jr("")).limit(0)}function gt(s,e,a,r,t,o){for(var n=Math.min(s.length,r.length),i=-1,l=0;l<n;++l){var h=e[l];if(h!==r[l])return t(s[l],a[l])<0?s.substr(0,l)+a[l]+a.substr(l+1):t(s[l],r[l])<0?s.substr(0,l)+r[l]+a.substr(l+1):i>=0?s.substr(0,i)+e[i]+a.substr(i+1):null;t(s[l],h)<0&&(i=l)}return n<r.length&&o==="next"?s+a.substr(s.length):n<s.length&&o==="prev"?s.substr(0,a.length):i<0?null:s.substr(0,i)+r[i]+a.substr(i+1)}function ps(s,e,a,r){var t,o,n,i,l,h,c,d=a.length;if(!a.every(y=>typeof y=="string"))return Q(s,xr);function u(y){t=function(f){return f==="next"?g=>g.toUpperCase():g=>g.toLowerCase()}(y),o=function(f){return f==="next"?g=>g.toLowerCase():g=>g.toUpperCase()}(y),n=y==="next"?yt:mt;var b=a.map(function(f){return{lower:o(f),upper:t(f)}}).sort(function(f,g){return n(f.lower,g.lower)});i=b.map(function(f){return f.upper}),l=b.map(function(f){return f.lower}),h=y,c=y==="next"?"":r}u("next");var p=new s.Collection(s,()=>de(i[0],l[d-1]+r));p._ondirectionchange=function(y){u(y)};var m=0;return p._addAlgorithm(function(y,b,f){var g=y.key;if(typeof g!="string")return!1;var v=o(g);if(e(v,l,m))return!0;for(var x=null,_=m;_<d;++_){var z=gt(g,v,i[_],l[_],n,h);z===null&&x===null?m=_+1:(x===null||n(x,z)>0)&&(x=z)}return b(x!==null?function(){y.continue(x+c)}:f),!1}),p}function de(s,e,a,r){return{type:2,lower:s,upper:e,lowerOpen:a,upperOpen:r}}function jr(s){return{type:1,lower:s,upper:s}}class qr{get Collection(){return this._ctx.table.db.Collection}between(e,a,r,t){r=r!==!1,t=t===!0;try{return this._cmp(e,a)>0||this._cmp(e,a)===0&&(r||t)&&(!r||!t)?De(this):new this.Collection(this,()=>de(e,a,!r,!t))}catch{return Q(this,te)}}equals(e){return e==null?Q(this,te):new this.Collection(this,()=>jr(e))}above(e){return e==null?Q(this,te):new this.Collection(this,()=>de(e,void 0,!0))}aboveOrEqual(e){return e==null?Q(this,te):new this.Collection(this,()=>de(e,void 0,!1))}below(e){return e==null?Q(this,te):new this.Collection(this,()=>de(void 0,e,!1,!0))}belowOrEqual(e){return e==null?Q(this,te):new this.Collection(this,()=>de(void 0,e))}startsWith(e){return typeof e!="string"?Q(this,xr):this.between(e,e+ve,!0,!0)}startsWithIgnoreCase(e){return e===""?this.startsWith(e):ps(this,(a,r)=>a.indexOf(r[0])===0,[e],ve)}equalsIgnoreCase(e){return ps(this,(a,r)=>a===r[0],[e],"")}anyOfIgnoreCase(){var e=ne.apply(Ie,arguments);return e.length===0?De(this):ps(this,(a,r)=>r.indexOf(a)!==-1,e,"")}startsWithAnyOfIgnoreCase(){var e=ne.apply(Ie,arguments);return e.length===0?De(this):ps(this,(a,r)=>r.some(t=>a.indexOf(t)===0),e,ve)}anyOf(){const e=ne.apply(Ie,arguments);let a=this._cmp;try{e.sort(a)}catch{return Q(this,te)}if(e.length===0)return De(this);const r=new this.Collection(this,()=>de(e[0],e[e.length-1]));r._ondirectionchange=o=>{a=o==="next"?this._ascending:this._descending,e.sort(a)};let t=0;return r._addAlgorithm((o,n,i)=>{const l=o.key;for(;a(l,e[t])>0;)if(++t,t===e.length)return n(i),!1;return a(l,e[t])===0||(n(()=>{o.continue(e[t])}),!1)}),r}notEqual(e){return this.inAnyRange([[aa,e],[e,this.db._maxKey]],{includeLowers:!1,includeUppers:!1})}noneOf(){const e=ne.apply(Ie,arguments);if(e.length===0)return new this.Collection(this);try{e.sort(this._ascending)}catch{return Q(this,te)}const a=e.reduce((r,t)=>r?r.concat([[r[r.length-1][1],t]]):[[aa,t]],null);return a.push([e[e.length-1],this.db._maxKey]),this.inAnyRange(a,{includeLowers:!1,includeUppers:!1})}inAnyRange(e,a){const r=this._cmp,t=this._ascending,o=this._descending,n=this._min,i=this._max;if(e.length===0)return De(this);if(!e.every(g=>g[0]!==void 0&&g[1]!==void 0&&t(g[0],g[1])<=0))return Q(this,"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower",E.InvalidArgument);const l=!a||a.includeLowers!==!1,h=a&&a.includeUppers===!0;let c,d=t;function u(g,v){return d(g[0],v[0])}try{c=e.reduce(function(g,v){let x=0,_=g.length;for(;x<_;++x){const z=g[x];if(r(v[0],z[1])<0&&r(v[1],z[0])>0){z[0]=n(z[0],v[0]),z[1]=i(z[1],v[1]);break}}return x===_&&g.push(v),g},[]),c.sort(u)}catch{return Q(this,te)}let p=0;const m=h?g=>t(g,c[p][1])>0:g=>t(g,c[p][1])>=0,y=l?g=>o(g,c[p][0])>0:g=>o(g,c[p][0])>=0;let b=m;const f=new this.Collection(this,()=>de(c[0][0],c[c.length-1][1],!l,!h));return f._ondirectionchange=g=>{g==="next"?(b=m,d=t):(b=y,d=o),c.sort(u)},f._addAlgorithm((g,v,x)=>{for(var _=g.key;b(_);)if(++p,p===c.length)return v(x),!1;return!!function(z){return!m(z)&&!y(z)}(_)||(this._cmp(_,c[p][1])===0||this._cmp(_,c[p][0])===0||v(()=>{d===t?g.continue(c[p][0]):g.continue(c[p][1])}),!1)}),f}startsWithAnyOf(){const e=ne.apply(Ie,arguments);return e.every(a=>typeof a=="string")?e.length===0?De(this):this.inAnyRange(e.map(a=>[a,a+ve])):Q(this,"startsWithAnyOf() only works with strings")}}function ae(s){return D(function(e){return ss(e),s(e.target.error),!1})}function ss(s){s.stopPropagation&&s.stopPropagation(),s.preventDefault&&s.preventDefault()}const as="storagemutated",ye="x-storagemutated-1",fe=Qe(null,as);class bt{_lock(){return $e(!q.global),++this._reculock,this._reculock!==1||q.global||(q.lockOwnerFor=this),this}_unlock(){if($e(!q.global),--this._reculock==0)for(q.global||(q.lockOwnerFor=null);this._blockedFuncs.length>0&&!this._locked();){var e=this._blockedFuncs.shift();try{Fe(e[1],e[0])}catch{}}return this}_locked(){return this._reculock&&q.lockOwnerFor!==this}create(e){if(!this.mode)return this;const a=this.db.idbdb,r=this.db._state.dbOpenError;if($e(!this.idbtrans),!e&&!a)switch(r&&r.name){case"DatabaseClosedError":throw new E.DatabaseClosed(r);case"MissingAPIError":throw new E.MissingAPI(r.message,r);default:throw new E.OpenFailed(r)}if(!this.active)throw new E.TransactionInactive;return $e(this._completion._state===null),(e=this.idbtrans=e||(this.db.core?this.db.core.transaction(this.storeNames,this.mode,{durability:this.chromeTransactionDurability}):a.transaction(this.storeNames,this.mode,{durability:this.chromeTransactionDurability}))).onerror=D(t=>{ss(t),this._reject(e.error)}),e.onabort=D(t=>{ss(t),this.active&&this._reject(new E.Abort(e.error)),this.active=!1,this.on("abort").fire(t)}),e.oncomplete=D(()=>{this.active=!1,this._resolve(),"mutatedParts"in e&&fe.storagemutated.fire(e.mutatedParts)}),this}_promise(e,a,r){if(e==="readwrite"&&this.mode!=="readwrite")return R(new E.ReadOnly("Transaction is readonly"));if(!this.active)return R(new E.TransactionInactive);if(this._locked())return new j((o,n)=>{this._blockedFuncs.push([()=>{this._promise(e,a,r).then(o,n)},q])});if(r)return ge(()=>{var o=new j((n,i)=>{this._lock();const l=a(n,i,this);l&&l.then&&l.then(n,i)});return o.finally(()=>this._unlock()),o._lib=!0,o});var t=new j((o,n)=>{var i=a(o,n,this);i&&i.then&&i.then(o,n)});return t._lib=!0,t}_root(){return this.parent?this.parent._root():this}waitFor(e){var a=this._root();const r=j.resolve(e);if(a._waitingFor)a._waitingFor=a._waitingFor.then(()=>r);else{a._waitingFor=r,a._waitingQueue=[];var t=a.idbtrans.objectStore(a.storeNames[0]);(function n(){for(++a._spinCount;a._waitingQueue.length;)a._waitingQueue.shift()();a._waitingFor&&(t.get(-1/0).onsuccess=n)})()}var o=a._waitingFor;return new j((n,i)=>{r.then(l=>a._waitingQueue.push(D(n.bind(null,l))),l=>a._waitingQueue.push(D(i.bind(null,l)))).finally(()=>{a._waitingFor===o&&(a._waitingFor=null)})})}abort(){this.active&&(this.active=!1,this.idbtrans&&this.idbtrans.abort(),this._reject(new E.Abort))}table(e){const a=this._memoizedTables||(this._memoizedTables={});if(ee(a,e))return a[e];const r=this.schema[e];if(!r)throw new E.NotFound("Table "+e+" not part of transaction");const t=new this.db.Table(e,r,this);return t.core=this.db.core.table(e),a[e]=t,t}}function ra(s,e,a,r,t,o,n){return{name:s,keyPath:e,unique:a,multi:r,auto:t,compound:o,src:(a&&!n?"&":"")+(r?"*":"")+(t?"++":"")+Er(e)}}function Er(s){return typeof s=="string"?s:s?"["+[].join.call(s,"+")+"]":""}function Pr(s,e,a){return{name:s,primKey:e,indexes:a,mappedClass:null,idxByName:or(a,r=>[r.name,r])}}let rs=s=>{try{return s.only([[]]),rs=()=>[[]],[[]]}catch{return rs=()=>ve,ve}};function ta(s){return s==null?()=>{}:typeof s=="string"?function(e){return e.split(".").length===1?r=>r[e]:r=>ue(r,e)}(s):e=>ue(e,s)}function Fa(s){return[].slice.call(s)}let ft=0;function Xe(s){return s==null?":id":typeof s=="string"?s:`[${s.join("+")}]`}function kt(s,e,a){function r(l){if(l.type===3)return null;if(l.type===4)throw new Error("Cannot convert never type to IDBKeyRange");const{lower:h,upper:c,lowerOpen:d,upperOpen:u}=l;return h===void 0?c===void 0?null:e.upperBound(c,!!u):c===void 0?e.lowerBound(h,!!d):e.bound(h,c,!!d,!!u)}const{schema:t,hasGetAll:o}=function(l,h){const c=Fa(l.objectStoreNames);return{schema:{name:l.name,tables:c.map(d=>h.objectStore(d)).map(d=>{const{keyPath:u,autoIncrement:p}=d,m=$(u),y=u==null,b={},f={name:d.name,primaryKey:{name:null,isPrimaryKey:!0,outbound:y,compound:m,keyPath:u,autoIncrement:p,unique:!0,extractKey:ta(u)},indexes:Fa(d.indexNames).map(g=>d.index(g)).map(g=>{const{name:v,unique:x,multiEntry:_,keyPath:z}=g,k={name:v,compound:$(z),keyPath:z,unique:x,multiEntry:_,extractKey:ta(z)};return b[Xe(z)]=k,k}),getIndexByKeyPath:g=>b[Xe(g)]};return b[":id"]=f.primaryKey,u!=null&&(b[Xe(u)]=f.primaryKey),f})},hasGetAll:c.length>0&&"getAll"in h.objectStore(c[0])&&!(typeof navigator<"u"&&/Safari/.test(navigator.userAgent)&&!/(Chrome\/|Edge\/)/.test(navigator.userAgent)&&[].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1]<604)}}(s,a),n=t.tables.map(l=>function(h){const c=h.name;return{name:c,schema:h,mutate:function({trans:d,type:u,keys:p,values:m,range:y}){return new Promise((b,f)=>{b=D(b);const g=d.objectStore(c),v=g.keyPath==null,x=u==="put"||u==="add";if(!x&&u!=="delete"&&u!=="deleteRange")throw new Error("Invalid operation type: "+u);const{length:_}=p||m||{length:1};if(p&&m&&p.length!==m.length)throw new Error("Given keys array must have same length as given values array.");if(_===0)return b({numFailures:0,failures:{},results:[],lastResult:void 0});let z;const k=[],P=[];let w=0;const K=V=>{++w,ss(V)};if(u==="deleteRange"){if(y.type===4)return b({numFailures:w,failures:P,results:[],lastResult:void 0});y.type===3?k.push(z=g.clear()):k.push(z=g.delete(r(y)))}else{const[V,F]=x?v?[m,p]:[m,null]:[p,null];if(x)for(let T=0;T<_;++T)k.push(z=F&&F[T]!==void 0?g[u](V[T],F[T]):g[u](V[T])),z.onerror=K;else for(let T=0;T<_;++T)k.push(z=g[u](V[T])),z.onerror=K}const S=V=>{const F=V.target.result;k.forEach((T,Ke)=>T.error!=null&&(P[Ke]=T.error)),b({numFailures:w,failures:P,results:u==="delete"?p:k.map(T=>T.result),lastResult:F})};z.onerror=V=>{K(V),S(V)},z.onsuccess=S})},getMany:({trans:d,keys:u})=>new Promise((p,m)=>{p=D(p);const y=d.objectStore(c),b=u.length,f=new Array(b);let g,v=0,x=0;const _=k=>{const P=k.target;f[P._pos]=P.result,++x===v&&p(f)},z=ae(m);for(let k=0;k<b;++k)u[k]!=null&&(g=y.get(u[k]),g._pos=k,g.onsuccess=_,g.onerror=z,++v);v===0&&p(f)}),get:({trans:d,key:u})=>new Promise((p,m)=>{p=D(p);const y=d.objectStore(c).get(u);y.onsuccess=b=>p(b.target.result),y.onerror=ae(m)}),query:function(d){return u=>new Promise((p,m)=>{p=D(p);const{trans:y,values:b,limit:f,query:g}=u,v=f===1/0?void 0:f,{index:x,range:_}=g,z=y.objectStore(c),k=x.isPrimaryKey?z:z.index(x.name),P=r(_);if(f===0)return p({result:[]});if(d){const w=b?k.getAll(P,v):k.getAllKeys(P,v);w.onsuccess=K=>p({result:K.target.result}),w.onerror=ae(m)}else{let w=0;const K=b||!("openKeyCursor"in k)?k.openCursor(P):k.openKeyCursor(P),S=[];K.onsuccess=V=>{const F=K.result;return F?(S.push(b?F.value:F.primaryKey),++w===f?p({result:S}):void F.continue()):p({result:S})},K.onerror=ae(m)}})}(o),openCursor:function({trans:d,values:u,query:p,reverse:m,unique:y}){return new Promise((b,f)=>{b=D(b);const{index:g,range:v}=p,x=d.objectStore(c),_=g.isPrimaryKey?x:x.index(g.name),z=m?y?"prevunique":"prev":y?"nextunique":"next",k=u||!("openKeyCursor"in _)?_.openCursor(r(v),z):_.openKeyCursor(r(v),z);k.onerror=ae(f),k.onsuccess=D(P=>{const w=k.result;if(!w)return void b(null);w.___id=++ft,w.done=!1;const K=w.continue.bind(w);let S=w.continuePrimaryKey;S&&(S=S.bind(w));const V=w.advance.bind(w),F=()=>{throw new Error("Cursor not stopped")};w.trans=d,w.stop=w.continue=w.continuePrimaryKey=w.advance=()=>{throw new Error("Cursor not started")},w.fail=D(f),w.next=function(){let T=1;return this.start(()=>T--?this.continue():this.stop()).then(()=>this)},w.start=T=>{const Ke=new Promise((H,ke)=>{H=D(H),k.onerror=ae(ke),w.fail=ke,w.stop=Ue=>{w.stop=w.continue=w.continuePrimaryKey=w.advance=F,H(Ue)}}),Oe=()=>{if(k.result)try{T()}catch(H){w.fail(H)}else w.done=!0,w.start=()=>{throw new Error("Cursor behind last entry")},w.stop()};return k.onsuccess=D(H=>{k.onsuccess=Oe,Oe()}),w.continue=K,w.continuePrimaryKey=S,w.advance=V,Oe(),Ke},b(w)},f)})},count({query:d,trans:u}){const{index:p,range:m}=d;return new Promise((y,b)=>{const f=u.objectStore(c),g=p.isPrimaryKey?f:f.index(p.name),v=r(m),x=v?g.count(v):g.count();x.onsuccess=D(_=>y(_.target.result)),x.onerror=ae(b)})}}}(l)),i={};return n.forEach(l=>i[l.name]=l),{stack:"dbcore",transaction:s.transaction.bind(s),table(l){if(!i[l])throw new Error(`Table '${l}' not found`);return i[l]},MIN_KEY:-1/0,MAX_KEY:rs(e),schema:t}}function oa({_novip:s},e){const a=e.db,r=function(t,o,{IDBKeyRange:n,indexedDB:i},l){return{dbcore:function(c,d){return d.reduce((u,{create:p})=>({...u,...p(u)}),c)}(kt(o,n,l),t.dbcore)}}(s._middlewares,a,s._deps,e);s.core=r.dbcore,s.tables.forEach(t=>{const o=t.name;s.core.schema.tables.some(n=>n.name===o)&&(t.core=s.core.table(o),s[o]instanceof s.Table&&(s[o].core=t.core))})}function Ks({_novip:s},e,a,r){a.forEach(t=>{const o=r[t];e.forEach(n=>{const i=fa(n,t);(!i||"value"in i&&i.value===void 0)&&(n===s.Transaction.prototype||n instanceof s.Transaction?le(n,t,{get(){return this.table(t)},set(l){ar(this,t,{value:l,writable:!0,configurable:!0,enumerable:!0})}}):n[t]=new s.Table(t,o))})})}function na({_novip:s},e){e.forEach(a=>{for(let r in a)a[r]instanceof s.Table&&delete a[r]})}function wt(s,e){return s._cfg.version-e._cfg.version}function vt(s,e,a,r){const t=s._dbSchema,o=s._createTransaction("readwrite",s._storeNames,t);o.create(a),o._completion.catch(r);const n=o._reject.bind(o),i=q.transless||q;ge(()=>{q.trans=o,q.transless=i,e===0?(B(t).forEach(l=>{Us(a,l,t[l].primKey,t[l].indexes)}),oa(s,a),j.follow(()=>s.on.populate.fire(o)).catch(n)):function({_novip:l},h,c,d){const u=[],p=l._versions;let m=l._dbSchema=la(l,l.idbdb,d),y=!1;const b=p.filter(g=>g._cfg.version>=h);function f(){return u.length?j.resolve(u.shift()(c.idbtrans)).then(f):j.resolve()}return b.forEach(g=>{u.push(()=>{const v=m,x=g._cfg.dbschema;ua(l,v,d),ua(l,x,d),m=l._dbSchema=x;const _=Sr(v,x);_.add.forEach(k=>{Us(d,k[0],k[1].primKey,k[1].indexes)}),_.change.forEach(k=>{if(k.recreate)throw new E.Upgrade("Not yet support for changing primary key");{const P=d.objectStore(k.name);k.add.forEach(w=>ia(P,w)),k.change.forEach(w=>{P.deleteIndex(w.name),ia(P,w)}),k.del.forEach(w=>P.deleteIndex(w))}});const z=g._cfg.contentUpgrade;if(z&&g._cfg.version>h){oa(l,d),c._memoizedTables={},y=!0;let k=nr(x);_.del.forEach(S=>{k[S]=v[S]}),na(l,[l.Transaction.prototype]),Ks(l,[l.Transaction.prototype],B(k),k),c.schema=k;const P=ka(z);let w;P&&Me();const K=j.follow(()=>{if(w=z(c),w&&P){var S=ce.bind(null,null);w.then(S,S)}});return w&&typeof w.then=="function"?j.resolve(w):K.then(()=>w)}}),u.push(v=>{(!y||!ct)&&function(x,_){[].slice.call(_.db.objectStoreNames).forEach(z=>x[z]==null&&_.db.deleteObjectStore(z))}(g._cfg.dbschema,v),na(l,[l.Transaction.prototype]),Ks(l,[l.Transaction.prototype],l._storeNames,l._dbSchema),c.schema=l._dbSchema})}),f().then(()=>{var g,v;v=d,B(g=m).forEach(x=>{v.db.objectStoreNames.contains(x)||Us(v,x,g[x].primKey,g[x].indexes)})})}(s,e,o,a).catch(n)})}function Sr(s,e){const a={del:[],add:[],change:[]};let r;for(r in s)e[r]||a.del.push(r);for(r in e){const t=s[r],o=e[r];if(t){const n={name:r,def:o,recreate:!1,del:[],add:[],change:[]};if(""+(t.primKey.keyPath||"")!=""+(o.primKey.keyPath||"")||t.primKey.auto!==o.primKey.auto&&!Cs)n.recreate=!0,a.change.push(n);else{const i=t.idxByName,l=o.idxByName;let h;for(h in i)l[h]||n.del.push(h);for(h in l){const c=i[h],d=l[h];c?c.src!==d.src&&n.change.push(d):n.add.push(d)}(n.del.length>0||n.add.length>0||n.change.length>0)&&a.change.push(n)}}else a.add.push([r,o])}return a}function Us(s,e,a,r){const t=s.db.createObjectStore(e,a.keyPath?{keyPath:a.keyPath,autoIncrement:a.auto}:{autoIncrement:a.auto});return r.forEach(o=>ia(t,o)),t}function ia(s,e){s.createIndex(e.name,e.keyPath,{unique:e.unique,multiEntry:e.multi})}function la(s,e,a){const r={};return js(e.objectStoreNames,0).forEach(t=>{const o=a.objectStore(t);let n=o.keyPath;const i=ra(Er(n),n||"",!1,!1,!!o.autoIncrement,n&&typeof n!="string",!0),l=[];for(let c=0;c<o.indexNames.length;++c){const d=o.index(o.indexNames[c]);n=d.keyPath;var h=ra(d.name,n,!!d.unique,!!d.multiEntry,!1,n&&typeof n!="string",!1);l.push(h)}r[t]=Pr(t,i,l)}),r}function ua({_novip:s},e,a){const r=a.db.objectStoreNames;for(let t=0;t<r.length;++t){const o=r[t],n=a.objectStore(o);s._hasGetAll="getAll"in n;for(let i=0;i<n.indexNames.length;++i){const l=n.indexNames[i],h=n.index(l).keyPath,c=typeof h=="string"?h:"["+js(h).join("+")+"]";if(e[o]){const d=e[o].idxByName[c];d&&(d.name=l,delete e[o].idxByName[c],e[o].idxByName[l]=d)}}}typeof navigator<"u"&&/Safari/.test(navigator.userAgent)&&!/(Chrome\/|Edge\/)/.test(navigator.userAgent)&&C.WorkerGlobalScope&&C instanceof C.WorkerGlobalScope&&[].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1]<604&&(s._hasGetAll=!1)}class xt{_parseStoresSpec(e,a){B(e).forEach(r=>{if(e[r]!==null){var t=e[r].split(",").map((n,i)=>{const l=(n=n.trim()).replace(/([&*]|\+\+)/g,""),h=/^\[/.test(l)?l.match(/^\[(.*)\]$/)[1].split("+"):l;return ra(l,h||null,/\&/.test(n),/\*/.test(n),/\+\+/.test(n),$(h),i===0)}),o=t.shift();if(o.multi)throw new E.Schema("Primary key cannot be multi-valued");t.forEach(n=>{if(n.auto)throw new E.Schema("Only primary key can be marked as autoIncrement (++)");if(!n.keyPath)throw new E.Schema("Index must have a name and cannot be an empty string")}),a[r]=Pr(r,o,t)}})}stores(e){const a=this.db;this._cfg.storesSource=this._cfg.storesSource?Y(this._cfg.storesSource,e):e;const r=a._versions,t={};let o={};return r.forEach(n=>{Y(t,n._cfg.storesSource),o=n._cfg.dbschema={},n._parseStoresSpec(t,o)}),a._dbSchema=o,na(a,[a._allTables,a,a.Transaction.prototype]),Ks(a,[a._allTables,a,a.Transaction.prototype,this._cfg.tables],B(o),o),a._storeNames=B(o),this}upgrade(e){return this._cfg.contentUpgrade=xa(this._cfg.contentUpgrade||O,e),this}}function qa(s,e){let a=s._dbNamesDB;return a||(a=s._dbNamesDB=new qe(Ds,{addons:[],indexedDB:s,IDBKeyRange:e}),a.version(1).stores({dbnames:"name"})),a.table("dbnames")}function Ea(s){return s&&typeof s.databases=="function"}function ca(s){return ge(function(){return q.letThrough=!0,s()})}function zt(){var s;return!navigator.userAgentData&&/Safari\//.test(navigator.userAgent)&&!/Chrom(e|ium)\//.test(navigator.userAgent)&&indexedDB.databases?new Promise(function(e){var a=function(){return indexedDB.databases().finally(e)};s=setInterval(a,100),a()}).finally(function(){return clearInterval(s)}):Promise.resolve()}function _t(s){const e=s._state,{indexedDB:a}=s._deps;if(e.isBeingOpened||s.idbdb)return e.dbReadyPromise.then(()=>e.dbOpenError?R(e.dbOpenError):s);re&&(e.openCanceller._stackHolder=Ae()),e.isBeingOpened=!0,e.dbOpenError=null,e.openComplete=!1;const r=e.openCanceller;function t(){if(e.openCanceller!==r)throw new E.DatabaseClosed("db.open() was cancelled")}let o=e.dbReadyResolve,n=null,i=!1;const l=()=>new j((h,c)=>{if(t(),!a)throw new E.MissingAPI;const d=s.name,u=e.autoSchema?a.open(d):a.open(d,Math.round(10*s.verno));if(!u)throw new E.MissingAPI;u.onerror=ae(c),u.onblocked=D(s._fireOnBlocked),u.onupgradeneeded=D(p=>{if(n=u.transaction,e.autoSchema&&!s._options.allowEmptyDB){u.onerror=ss,n.abort(),u.result.close();const y=a.deleteDatabase(d);y.onsuccess=y.onerror=D(()=>{c(new E.NoSuchDatabase(`Database ${d} doesnt exist`))})}else{n.onerror=ae(c);var m=p.oldVersion>Math.pow(2,62)?0:p.oldVersion;i=m<1,s._novip.idbdb=u.result,vt(s,m/10,n,c)}},c),u.onsuccess=D(()=>{n=null;const p=s._novip.idbdb=u.result,m=js(p.objectStoreNames);if(m.length>0)try{const b=p.transaction((y=m).length===1?y[0]:y,"readonly");e.autoSchema?function({_novip:f},g,v){f.verno=g.version/10;const x=f._dbSchema=la(0,g,v);f._storeNames=js(g.objectStoreNames,0),Ks(f,[f._allTables],B(x),x)}(s,p,b):(ua(s,s._dbSchema,b),function(f,g){const v=Sr(la(0,f.idbdb,g),f._dbSchema);return!(v.add.length||v.change.some(x=>x.add.length||x.change.length))}(s,b)||console.warn("Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.")),oa(s,b)}catch{}var y;He.push(s),p.onversionchange=D(b=>{e.vcFired=!0,s.on("versionchange").fire(b)}),p.onclose=D(b=>{s.on("close").fire(b)}),i&&function({indexedDB:b,IDBKeyRange:f},g){!Ea(b)&&g!==Ds&&qa(b,f).put({name:g}).catch(O)}(s._deps,d),h()},c)}).catch(h=>h&&h.name==="UnknownError"&&e.PR1398_maxLoop>0?(e.PR1398_maxLoop--,console.warn("Dexie: Workaround for Chrome UnknownError on open()"),l()):j.reject(h));return j.race([r,(typeof navigator>"u"?j.resolve():zt()).then(l)]).then(()=>(t(),e.onReadyBeingFired=[],j.resolve(ca(()=>s.on.ready.fire(s.vip))).then(function h(){if(e.onReadyBeingFired.length>0){let c=e.onReadyBeingFired.reduce(xa,O);return e.onReadyBeingFired=[],j.resolve(ca(()=>c(s.vip))).then(h)}}))).finally(()=>{e.onReadyBeingFired=null,e.isBeingOpened=!1}).then(()=>s).catch(h=>{e.dbOpenError=h;try{n&&n.abort()}catch{}return r===e.openCanceller&&s._close(),R(h)}).finally(()=>{e.openComplete=!0,o()})}function da(s){var e=o=>s.next(o),a=t(e),r=t(o=>s.throw(o));function t(o){return n=>{var i=o(n),l=i.value;return i.done?l:l&&typeof l.then=="function"?l.then(a,r):$(l)?Promise.all(l).then(a,r):a(l)}}return t(e)()}function jt(s,e,a){var r=arguments.length;if(r<2)throw new E.InvalidArgument("Too few arguments");for(var t=new Array(r-1);--r;)t[r-1]=arguments[r];return a=t.pop(),[s,ir(t),a]}function Ar(s,e,a,r,t){return j.resolve().then(()=>{const o=q.transless||q,n=s._createTransaction(e,a,s._dbSchema,r),i={trans:n,transless:o};if(r)n.idbtrans=r.idbtrans;else try{n.create(),s._state.PR1398_maxLoop=3}catch(d){return d.name===va.InvalidState&&s.isOpen()&&--s._state.PR1398_maxLoop>0?(console.warn("Dexie: Need to reopen db"),s._close(),s.open().then(()=>Ar(s,e,a,null,t))):R(d)}const l=ka(t);let h;l&&Me();const c=j.follow(()=>{if(h=t.call(n,n),h)if(l){var d=ce.bind(null,null);h.then(d,d)}else typeof h.next=="function"&&typeof h.throw=="function"&&(h=da(h))},i);return(h&&typeof h.then=="function"?j.resolve(h).then(d=>n.active?d:R(new E.PrematureCommit("Transaction committed too early. See http://bit.ly/2kdckMn"))):c.then(()=>h)).then(d=>(r&&n._resolve(),n._completion.then(()=>d))).catch(d=>(n._reject(d),R(d)))})}function ys(s,e,a){const r=$(s)?s.slice():[s];for(let t=0;t<a;++t)r.push(e);return r}const qt={stack:"dbcore",name:"VirtualIndexMiddleware",level:1,create:function(s){return{...s,table(e){const a=s.table(e),{schema:r}=a,t={},o=[];function n(c,d,u){const p=Xe(c),m=t[p]=t[p]||[],y=c==null?0:typeof c=="string"?1:c.length,b=d>0,f={...u,isVirtual:b,keyTail:d,keyLength:y,extractKey:ta(c),unique:!b&&u.unique};return m.push(f),f.isPrimaryKey||o.push(f),y>1&&n(y===2?c[0]:c.slice(0,y-1),d+1,u),m.sort((g,v)=>g.keyTail-v.keyTail),f}const i=n(r.primaryKey.keyPath,0,r.primaryKey);t[":id"]=[i];for(const c of r.indexes)n(c.keyPath,0,c);function l(c){const d=c.query.index;return d.isVirtual?{...c,query:{index:d,range:(u=c.query.range,p=d.keyTail,{type:u.type===1?2:u.type,lower:ys(u.lower,u.lowerOpen?s.MAX_KEY:s.MIN_KEY,p),lowerOpen:!0,upper:ys(u.upper,u.upperOpen?s.MIN_KEY:s.MAX_KEY,p),upperOpen:!0})}}:c;var u,p}return{...a,schema:{...r,primaryKey:i,indexes:o,getIndexByKeyPath:function(c){const d=t[Xe(c)];return d&&d[0]}},count:c=>a.count(l(c)),query:c=>a.query(l(c)),openCursor(c){const{keyTail:d,isVirtual:u,keyLength:p}=c.query.index;return u?a.openCursor(l(c)).then(m=>m&&function(y){return Object.create(y,{continue:{value:function(f){f!=null?y.continue(ys(f,c.reverse?s.MAX_KEY:s.MIN_KEY,d)):c.unique?y.continue(y.key.slice(0,p).concat(c.reverse?s.MIN_KEY:s.MAX_KEY,d)):y.continue()}},continuePrimaryKey:{value(f,g){y.continuePrimaryKey(ys(f,s.MAX_KEY,d),g)}},primaryKey:{get:()=>y.primaryKey},key:{get(){const f=y.key;return p===1?f[0]:f.slice(0,p)}},value:{get:()=>y.value}})}(m)):a.openCursor(c)}}}}}};function Pa(s,e,a,r){return a=a||{},r=r||"",B(s).forEach(t=>{if(ee(e,t)){var o=s[t],n=e[t];if(typeof o=="object"&&typeof n=="object"&&o&&n){const i=$s(o);i!==$s(n)?a[r+t]=e[t]:i==="Object"?Pa(o,n,a,r+t+"."):o!==n&&(a[r+t]=e[t])}else o!==n&&(a[r+t]=e[t])}else a[r+t]=void 0}),B(e).forEach(t=>{ee(s,t)||(a[r+t]=e[t])}),a}const Et={stack:"dbcore",name:"HooksMiddleware",level:2,create:s=>({...s,table(e){const a=s.table(e),{primaryKey:r}=a.schema;return{...a,mutate(o){const n=q.trans,{deleting:i,creating:l,updating:h}=n.table(e).hook;switch(o.type){case"add":if(l.fire===O)break;return n._promise("readwrite",()=>c(o),!0);case"put":if(l.fire===O&&h.fire===O)break;return n._promise("readwrite",()=>c(o),!0);case"delete":if(i.fire===O)break;return n._promise("readwrite",()=>c(o),!0);case"deleteRange":if(i.fire===O)break;return n._promise("readwrite",()=>function(u){return d(u.trans,u.range,1e4)}(o),!0)}return a.mutate(o);function c(u){const p=q.trans,m=u.keys||function(y,b){return b.type==="delete"?b.keys:b.keys||b.values.map(y.extractKey)}(r,u);if(!m)throw new Error("Keys missing");return(u=u.type==="add"||u.type==="put"?{...u,keys:m}:{...u}).type!=="delete"&&(u.values=[...u.values]),u.keys&&(u.keys=[...u.keys]),function(y,b,f){return b.type==="add"?Promise.resolve([]):y.getMany({trans:b.trans,keys:f,cache:"immutable"})}(a,u,m).then(y=>{const b=m.map((f,g)=>{const v=y[g],x={onerror:null,onsuccess:null};if(u.type==="delete")i.fire.call(x,f,v,p);else if(u.type==="add"||v===void 0){const _=l.fire.call(x,f,u.values[g],p);f==null&&_!=null&&(f=_,u.keys[g]=f,r.outbound||se(u.values[g],r.keyPath,f))}else{const _=Pa(v,u.values[g]),z=h.fire.call(x,_,f,v,p);if(z){const k=u.values[g];Object.keys(z).forEach(P=>{ee(k,P)?k[P]=z[P]:se(k,P,z[P])})}}return x});return a.mutate(u).then(({failures:f,results:g,numFailures:v,lastResult:x})=>{for(let _=0;_<m.length;++_){const z=g?g[_]:m[_],k=b[_];z==null?k.onerror&&k.onerror(f[_]):k.onsuccess&&k.onsuccess(u.type==="put"&&y[_]?u.values[_]:z)}return{failures:f,results:g,numFailures:v,lastResult:x}}).catch(f=>(b.forEach(g=>g.onerror&&g.onerror(f)),Promise.reject(f)))})}function d(u,p,m){return a.query({trans:u,values:!1,query:{index:r,range:p},limit:m}).then(({result:y})=>c({type:"delete",keys:y,trans:u}).then(b=>b.numFailures>0?Promise.reject(b.failures[0]):y.length<m?{failures:[],numFailures:0,lastResult:void 0}:d(u,{...p,lower:y[y.length-1],lowerOpen:!0},m)))}}}}})};function Kr(s,e,a){try{if(!e||e.keys.length<s.length)return null;const r=[];for(let t=0,o=0;t<e.keys.length&&o<s.length;++t)W(e.keys[t],s[o])===0&&(r.push(a?os(e.values[t]):e.values[t]),++o);return r.length===s.length?r:null}catch{return null}}const Pt={stack:"dbcore",level:-1,create:s=>({table:e=>{const a=s.table(e);return{...a,getMany:r=>{if(!r.cache)return a.getMany(r);const t=Kr(r.keys,r.trans._cache,r.cache==="clone");return t?j.resolve(t):a.getMany(r).then(o=>(r.trans._cache={keys:r.keys,values:r.cache==="clone"?os(o):o},o))},mutate:r=>(r.type!=="add"&&(r.trans._cache=null),a.mutate(r))}}})};function Sa(s){return!("from"in s)}const oe=function(s,e){if(!this){const a=new oe;return s&&"d"in s&&Y(a,s),a}Y(this,arguments.length?{d:1,from:s,to:arguments.length>1?e:s}:{d:0})};function ts(s,e,a){const r=W(e,a);if(isNaN(r))return;if(r>0)throw RangeError();if(Sa(s))return Y(s,{from:e,to:a,d:1});const t=s.l,o=s.r;if(W(a,s.from)<0)return t?ts(t,e,a):s.l={from:e,to:a,d:1,l:null,r:null},Ua(s);if(W(e,s.to)>0)return o?ts(o,e,a):s.r={from:e,to:a,d:1,l:null,r:null},Ua(s);W(e,s.from)<0&&(s.from=e,s.l=null,s.d=o?o.d+1:1),W(a,s.to)>0&&(s.to=a,s.r=null,s.d=s.l?s.l.d+1:1);const n=!s.r;t&&!s.l&&Os(s,t),o&&n&&Os(s,o)}function Os(s,e){Sa(e)||function a(r,{from:t,to:o,l:n,r:i}){ts(r,t,o),n&&a(r,n),i&&a(r,i)}(s,e)}function St(s,e){const a=ha(e);let r=a.next();if(r.done)return!1;let t=r.value;const o=ha(s);let n=o.next(t.from),i=n.value;for(;!r.done&&!n.done;){if(W(i.from,t.to)<=0&&W(i.to,t.from)>=0)return!0;W(t.from,i.from)<0?t=(r=a.next(i.from)).value:i=(n=o.next(t.from)).value}return!1}function ha(s){let e=Sa(s)?null:{s:0,n:s};return{next(a){const r=arguments.length>0;for(;e;)switch(e.s){case 0:if(e.s=1,r)for(;e.n.l&&W(a,e.n.from)<0;)e={up:e,n:e.n.l,s:1};else for(;e.n.l;)e={up:e,n:e.n.l,s:1};case 1:if(e.s=2,!r||W(a,e.n.to)<=0)return{value:e.n,done:!1};case 2:if(e.n.r){e.s=3,e={up:e,n:e.n.r,s:0};continue}case 3:e=e.up}return{done:!0}}}}function Ua(s){var e,a;const r=(((e=s.r)===null||e===void 0?void 0:e.d)||0)-(((a=s.l)===null||a===void 0?void 0:a.d)||0),t=r>1?"r":r<-1?"l":"";if(t){const o=t==="r"?"l":"r",n={...s},i=s[t];s.from=i.from,s.to=i.to,s[t]=i[t],n[t]=i[o],s[o]=n,n.d=La(n)}s.d=La(s)}function La({r:s,l:e}){return(s?e?Math.max(s.d,e.d):s.d:e?e.d:0)+1}Ne(oe.prototype,{add(s){return Os(this,s),this},addKey(s){return ts(this,s,s),this},addKeys(s){return s.forEach(e=>ts(this,e,e)),this},[Vs](){return ha(this)}});const At={stack:"dbcore",level:0,create:s=>{const e=s.schema.name,a=new oe(s.MIN_KEY,s.MAX_KEY);return{...s,table:r=>{const t=s.table(r),{schema:o}=t,{primaryKey:n}=o,{extractKey:i,outbound:l}=n,h={...t,mutate:u=>{const p=u.trans,m=p.mutatedParts||(p.mutatedParts={}),y=z=>{const k=`idb://${e}/${r}/${z}`;return m[k]||(m[k]=new oe)},b=y(""),f=y(":dels"),{type:g}=u;let[v,x]=u.type==="deleteRange"?[u.range]:u.type==="delete"?[u.keys]:u.values.length<50?[[],u.values]:[];const _=u.trans._cache;return t.mutate(u).then(z=>{if($(v)){g!=="delete"&&(v=z.results),b.addKeys(v);const k=Kr(v,_);k||g==="add"||f.addKeys(v),(k||x)&&function(P,w,K,S){function V(F){const T=P(F.name||"");function Ke(H){return H!=null?F.extractKey(H):null}const Oe=H=>F.multiEntry&&$(H)?H.forEach(ke=>T.addKey(ke)):T.addKey(H);(K||S).forEach((H,ke)=>{const Ue=K&&Ke(K[ke]),Is=S&&Ke(S[ke]);W(Ue,Is)!==0&&(Ue!=null&&Oe(Ue),Is!=null&&Oe(Is))})}w.indexes.forEach(V)}(y,o,k,x)}else if(v){const k={from:v.lower,to:v.upper};f.add(k),b.add(k)}else b.add(a),f.add(a),o.indexes.forEach(k=>y(k.name).add(a));return z})}},c=({query:{index:u,range:p}})=>{var m,y;return[u,new oe((m=p.lower)!==null&&m!==void 0?m:s.MIN_KEY,(y=p.upper)!==null&&y!==void 0?y:s.MAX_KEY)]},d={get:u=>[n,new oe(u.key)],getMany:u=>[n,new oe().addKeys(u.keys)],count:c,query:c,openCursor:c};return B(d).forEach(u=>{h[u]=function(p){const{subscr:m}=q;if(m){const y=x=>{const _=`idb://${e}/${r}/${x}`;return m[_]||(m[_]=new oe)},b=y(""),f=y(":dels"),[g,v]=d[u](p);if(y(g.name||"").add(v),!g.isPrimaryKey){if(u!=="count"){const x=u==="query"&&l&&p.values&&t.query({...p,values:!1});return t[u].apply(this,arguments).then(_=>{if(u==="query"){if(l&&p.values)return x.then(({result:k})=>(b.addKeys(k),_));const z=p.values?_.result.map(i):_.result;p.values?b.addKeys(z):f.addKeys(z)}else if(u==="openCursor"){const z=_,k=p.values;return z&&Object.create(z,{key:{get:()=>(f.addKey(z.primaryKey),z.key)},primaryKey:{get(){const P=z.primaryKey;return f.addKey(P),P}},value:{get:()=>(k&&b.addKey(z.primaryKey),z.value)}})}return _})}f.add(a)}}return t[u].apply(this,arguments)}}),h}}}};class qe{constructor(e,a){this._middlewares={},this.verno=0;const r=qe.dependencies;this._options=a={addons:qe.addons,autoOpen:!0,indexedDB:r.indexedDB,IDBKeyRange:r.IDBKeyRange,...a},this._deps={indexedDB:a.indexedDB,IDBKeyRange:a.IDBKeyRange};const{addons:t}=a;this._dbSchema={},this._versions=[],this._storeNames=[],this._allTables={},this.idbdb=null,this._novip=this;const o={dbOpenError:null,isBeingOpened:!1,onReadyBeingFired:null,openComplete:!1,dbReadyResolve:O,dbReadyPromise:null,cancelOpen:O,openCanceller:null,autoSchema:!0,PR1398_maxLoop:3};var n;o.dbReadyPromise=new j(i=>{o.dbReadyResolve=i}),o.openCanceller=new j((i,l)=>{o.cancelOpen=l}),this._state=o,this.name=e,this.on=Qe(this,"populate","blocked","versionchange","close",{ready:[xa,O]}),this.on.ready.subscribe=rr(this.on.ready.subscribe,i=>(l,h)=>{qe.vip(()=>{const c=this._state;if(c.openComplete)c.dbOpenError||j.resolve().then(l),h&&i(l);else if(c.onReadyBeingFired)c.onReadyBeingFired.push(l),h&&i(l);else{i(l);const d=this;h||i(function u(){d.on.ready.unsubscribe(l),d.on.ready.unsubscribe(u)})}})}),this.Collection=(n=this,Le(pt.prototype,function(i,l){this.db=n;let h=_r,c=null;if(l)try{h=l()}catch(m){c=m}const d=i._ctx,u=d.table,p=u.hook.reading.fire;this._ctx={table:u,index:d.index,isPrimKey:!d.index||u.schema.primKey.keyPath&&d.index===u.schema.primKey.name,range:h,keysOnly:!1,dir:"next",unique:"",algorithm:null,filter:null,replayFilter:null,justLimit:!0,isMatch:null,offset:0,limit:1/0,error:c,or:d.or,valueMapper:p!==Ze?p:null}})),this.Table=function(i){return Le(ht.prototype,function(l,h,c){this.db=i,this._tx=c,this.name=l,this.schema=h,this.hook=i._allTables[l]?i._allTables[l].hook:Qe(null,{creating:[et,O],reading:[Zr,Ze],updating:[at,O],deleting:[st,O]})})}(this),this.Transaction=function(i){return Le(bt.prototype,function(l,h,c,d,u){this.db=i,this.mode=l,this.storeNames=h,this.schema=c,this.chromeTransactionDurability=d,this.idbtrans=null,this.on=Qe(this,"complete","error","abort"),this.parent=u||null,this.active=!0,this._reculock=0,this._blockedFuncs=[],this._resolve=null,this._reject=null,this._waitingFor=null,this._waitingQueue=null,this._spinCount=0,this._completion=new j((p,m)=>{this._resolve=p,this._reject=m}),this._completion.then(()=>{this.active=!1,this.on.complete.fire()},p=>{var m=this.active;return this.active=!1,this.on.error.fire(p),this.parent?this.parent._reject(p):m&&this.idbtrans&&this.idbtrans.abort(),R(p)})})}(this),this.Version=function(i){return Le(xt.prototype,function(l){this.db=i,this._cfg={version:l,storesSource:null,dbschema:{},tables:{},contentUpgrade:null}})}(this),this.WhereClause=function(i){return Le(qr.prototype,function(l,h,c){this.db=i,this._ctx={table:l,index:h===":id"?null:h,or:c};const d=i._deps.indexedDB;if(!d)throw new E.MissingAPI;this._cmp=this._ascending=d.cmp.bind(d),this._descending=(u,p)=>d.cmp(p,u),this._max=(u,p)=>d.cmp(u,p)>0?u:p,this._min=(u,p)=>d.cmp(u,p)<0?u:p,this._IDBKeyRange=i._deps.IDBKeyRange})}(this),this.on("versionchange",i=>{i.newVersion>0?console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`):console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`),this.close()}),this.on("blocked",i=>{!i.newVersion||i.newVersion<i.oldVersion?console.warn(`Dexie.delete('${this.name}') was blocked`):console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${i.oldVersion/10}`)}),this._maxKey=rs(a.IDBKeyRange),this._createTransaction=(i,l,h,c)=>new this.Transaction(i,l,h,this._options.chromeTransactionDurability,c),this._fireOnBlocked=i=>{this.on("blocked").fire(i),He.filter(l=>l.name===this.name&&l!==this&&!l._state.vcFired).map(l=>l.on("versionchange").fire(i))},this.use(qt),this.use(Et),this.use(At),this.use(Pt),this.vip=Object.create(this,{_vip:{value:!0}}),t.forEach(i=>i(this))}version(e){if(isNaN(e)||e<.1)throw new E.Type("Given version is not a positive number");if(e=Math.round(10*e)/10,this.idbdb||this._state.isBeingOpened)throw new E.Schema("Cannot add version when database is open");this.verno=Math.max(this.verno,e);const a=this._versions;var r=a.filter(t=>t._cfg.version===e)[0];return r||(r=new this.Version(e),a.push(r),a.sort(wt),r.stores({}),this._state.autoSchema=!1,r)}_whenReady(e){return this.idbdb&&(this._state.openComplete||q.letThrough||this._vip)?e():new j((a,r)=>{if(this._state.openComplete)return r(new E.DatabaseClosed(this._state.dbOpenError));if(!this._state.isBeingOpened){if(!this._options.autoOpen)return void r(new E.DatabaseClosed);this.open().catch(O)}this._state.dbReadyPromise.then(a,r)}).then(e)}use({stack:e,create:a,level:r,name:t}){t&&this.unuse({stack:e,name:t});const o=this._middlewares[e]||(this._middlewares[e]=[]);return o.push({stack:e,create:a,level:r??10,name:t}),o.sort((n,i)=>n.level-i.level),this}unuse({stack:e,name:a,create:r}){return e&&this._middlewares[e]&&(this._middlewares[e]=this._middlewares[e].filter(t=>r?t.create!==r:!!a&&t.name!==a)),this}open(){return _t(this)}_close(){const e=this._state,a=He.indexOf(this);if(a>=0&&He.splice(a,1),this.idbdb){try{this.idbdb.close()}catch{}this._novip.idbdb=null}e.dbReadyPromise=new j(r=>{e.dbReadyResolve=r}),e.openCanceller=new j((r,t)=>{e.cancelOpen=t})}close(){this._close();const e=this._state;this._options.autoOpen=!1,e.dbOpenError=new E.DatabaseClosed,e.isBeingOpened&&e.cancelOpen(e.dbOpenError)}delete(){const e=arguments.length>0,a=this._state;return new j((r,t)=>{const o=()=>{this.close();var n=this._deps.indexedDB.deleteDatabase(this.name);n.onsuccess=D(()=>{(function({indexedDB:i,IDBKeyRange:l},h){!Ea(i)&&h!==Ds&&qa(i,l).delete(h).catch(O)})(this._deps,this.name),r()}),n.onerror=ae(t),n.onblocked=this._fireOnBlocked};if(e)throw new E.InvalidArgument("Arguments not allowed in db.delete()");a.isBeingOpened?a.dbReadyPromise.then(o):o()})}backendDB(){return this.idbdb}isOpen(){return this.idbdb!==null}hasBeenClosed(){const e=this._state.dbOpenError;return e&&e.name==="DatabaseClosed"}hasFailed(){return this._state.dbOpenError!==null}dynamicallyOpened(){return this._state.autoSchema}get tables(){return B(this._allTables).map(e=>this._allTables[e])}transaction(){const e=jt.apply(this,arguments);return this._transaction.apply(this,e)}_transaction(e,a,r){let t=q.trans;t&&t.db===this&&e.indexOf("!")===-1||(t=null);const o=e.indexOf("?")!==-1;let n,i;e=e.replace("!","").replace("?","");try{if(i=a.map(h=>{var c=h instanceof this.Table?h.name:h;if(typeof c!="string")throw new TypeError("Invalid table argument to Dexie.transaction(). Only Table or String are allowed");return c}),e=="r"||e===Bs)n=Bs;else{if(e!="rw"&&e!=Rs)throw new E.InvalidArgument("Invalid transaction mode: "+e);n=Rs}if(t){if(t.mode===Bs&&n===Rs){if(!o)throw new E.SubTransaction("Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY");t=null}t&&i.forEach(h=>{if(t&&t.storeNames.indexOf(h)===-1){if(!o)throw new E.SubTransaction("Table "+h+" not included in parent transaction.");t=null}}),o&&t&&!t.active&&(t=null)}}catch(h){return t?t._promise(null,(c,d)=>{d(h)}):R(h)}const l=Ar.bind(null,this,n,i,t,r);return t?t._promise(n,l,"lock"):q.trans?Fe(q.transless,()=>this._whenReady(l)):this._whenReady(l)}table(e){if(!ee(this._allTables,e))throw new E.InvalidTable(`Table ${e} does not exist`);return this._allTables[e]}}const Kt=typeof Symbol<"u"&&"observable"in Symbol?Symbol.observable:"@@observable";class Ot{constructor(e){this._subscribe=e}subscribe(e,a,r){return this._subscribe(e&&typeof e!="function"?e:{next:e,error:a,complete:r})}[Kt](){return this}}function Or(s,e){return B(e).forEach(a=>{Os(s[a]||(s[a]=new oe),e[a])}),s}function Cr(s){let e,a=!1;const r=new Ot(t=>{const o=ka(s);let n=!1,i={},l={};const h={get closed(){return n},unsubscribe:()=>{n=!0,fe.storagemutated.unsubscribe(p)}};t.start&&t.start(h);let c=!1,d=!1;function u(){return B(l).some(y=>i[y]&&St(i[y],l[y]))}const p=y=>{Or(i,y),u()&&m()},m=()=>{if(c||n)return;i={};const y={},b=function(f){o&&Me();const g=()=>ge(s,{subscr:f,trans:null}),v=q.trans?Fe(q.transless,g):g();return o&&v.then(ce,ce),v}(y);d||(fe(as,p),d=!0),c=!0,Promise.resolve(b).then(f=>{a=!0,e=f,c=!1,n||(u()?m():(i={},l=y,t.next&&t.next(f)))},f=>{c=!1,a=!1,t.error&&t.error(f),h.unsubscribe()})};return m(),h});return r.hasValue=()=>a,r.getValue=()=>e,r}let pa;try{pa={indexedDB:C.indexedDB||C.mozIndexedDB||C.webkitIndexedDB||C.msIndexedDB,IDBKeyRange:C.IDBKeyRange||C.webkitIDBKeyRange}}catch{pa={indexedDB:null,IDBKeyRange:null}}const we=qe;function xs(s){let e=ie;try{ie=!0,fe.storagemutated.fire(s)}finally{ie=e}}Ne(we,{...gs,delete:s=>new we(s,{addons:[]}).delete(),exists:s=>new we(s,{addons:[]}).open().then(e=>(e.close(),!0)).catch("NoSuchDatabaseError",()=>!1),getDatabaseNames(s){try{return function({indexedDB:e,IDBKeyRange:a}){return Ea(e)?Promise.resolve(e.databases()).then(r=>r.map(t=>t.name).filter(t=>t!==Ds)):qa(e,a).toCollection().primaryKeys()}(we.dependencies).then(s)}catch{return R(new E.MissingAPI)}},defineClass:()=>function(s){Y(this,s)},ignoreTransaction:s=>q.trans?Fe(q.transless,s):s(),vip:ca,async:function(s){return function(){try{var e=da(s.apply(this,arguments));return e&&typeof e.then=="function"?e:j.resolve(e)}catch(a){return R(a)}}},spawn:function(s,e,a){try{var r=da(s.apply(a,e||[]));return r&&typeof r.then=="function"?r:j.resolve(r)}catch(t){return R(t)}},currentTransaction:{get:()=>q.trans||null},waitFor:function(s,e){const a=j.resolve(typeof s=="function"?we.ignoreTransaction(s):s).timeout(e||6e4);return q.trans?q.trans.waitFor(a):a},Promise:j,debug:{get:()=>re,set:s=>{ur(s,s==="dexie"?()=>!0:zr)}},derive:Te,extend:Y,props:Ne,override:rr,Events:Qe,on:fe,liveQuery:Cr,extendObservabilitySet:Or,getByKeyPath:ue,setByKeyPath:se,delByKeyPath:function(s,e){typeof e=="string"?se(s,e,void 0):"length"in e&&[].map.call(e,function(a){se(s,a,void 0)})},shallowClone:nr,deepClone:os,getObjectDiff:Pa,cmp:W,asap:tr,minKey:aa,addons:[],connections:He,errnames:va,dependencies:pa,semVer:Ta,version:Ta.split(".").map(s=>parseInt(s)).reduce((s,e,a)=>s+e/Math.pow(10,2*a))}),we.maxKey=rs(we.dependencies.IDBKeyRange),typeof dispatchEvent<"u"&&typeof addEventListener<"u"&&(fe(as,s=>{if(!ie){let e;Cs?(e=document.createEvent("CustomEvent"),e.initCustomEvent(ye,!0,!0,s)):e=new CustomEvent(ye,{detail:s}),ie=!0,dispatchEvent(e),ie=!1}}),addEventListener(ye,({detail:s})=>{ie||xs(s)}));let ie=!1;if(typeof BroadcastChannel<"u"){const s=new BroadcastChannel(ye);typeof s.unref=="function"&&s.unref(),fe(as,e=>{ie||s.postMessage(e)}),s.onmessage=e=>{e.data&&xs(e.data)}}else if(typeof self<"u"&&typeof navigator<"u"){fe(as,e=>{try{ie||(typeof localStorage<"u"&&localStorage.setItem(ye,JSON.stringify({trig:Math.random(),changedParts:e})),typeof self.clients=="object"&&[...self.clients.matchAll({includeUncontrolled:!0})].forEach(a=>a.postMessage({type:ye,changedParts:e})))}catch{}}),typeof addEventListener<"u"&&addEventListener("storage",e=>{if(e.key===ye){const a=JSON.parse(e.newValue);a&&xs(a.changedParts)}});const s=self.document&&navigator.serviceWorker;s&&s.addEventListener("message",function({data:e}){e&&e.type===ye&&xs(e.changedParts)})}j.rejectionMapper=function(s,e){if(!s||s instanceof Be||s instanceof TypeError||s instanceof SyntaxError||!s.name||!Oa[s.name])return s;var a=new Oa[s.name](e||s.message,s);return"stack"in s&&le(a,"stack",{get:function(){return this.inner.stack}}),a},ur(re,zr);class Ct extends qe{constructor(){super("statsdb");Ka(this,"data");this.version(1).stores({data:"&id, value"})}}const $a=new Ct,Dt=["aahed","aalii","aapas","aargh","aarti","abaca","abaci","abacs","abaft","abaht","abaka","abamp","aband","abash","abask","abaya","abbas","abbed","abbes","abcee","abeam","abear","abeat","abeer","abele","abeng","abers","abets","abeys","abies","abius","abjad","abjud","abler","ables","ablet","ablow","abmho","abnet","abohm","aboil","aboma","aboon","abord","abore","aborn","abram","abray","abrim","abrin","abris","absey","absit","abuna","abune","abura","aburn","abuts","abuzz","abyes","abysm","acais","acara","acari","accas","accha","accoy","accra","acedy","acene","acerb","acers","aceta","achar","ached","acher","aches","achey","achoo","acids","acidy","acies","acing","acini","ackee","acker","acmes","acmic","acned","acnes","acock","acoel","acold","acone","acral","acred","acres","acron","acros","acryl","actas","acted","actin","acton","actus","acyls","adats","adawn","adaws","adays","adbot","addas","addax","added","adder","addin","addio","addle","addra","adead","adeem","adhan","adhoc","adieu","adios","adits","adlib","adman","admen","admix","adnex","adobo","adoon","adorb","adown","adoze","adrad","adraw","adred","adret","adrip","adsum","aduki","adunc","adust","advew","advts","adyta","adyts","adzed","adzes","aecia","aedes","aeger","aegis","aeons","aerie","aeros","aesir","aevum","afald","afanc","afara","afars","afear","affly","afion","afizz","aflaj","aflap","aflow","afoam","afore","afret","afrit","afros","aftos","agals","agama","agami","agamy","agars","agasp","agast","agaty","agave","agaze","agbas","agene","agers","aggag","agger","aggie","aggri","aggro","aggry","aghas","agidi","agila","agios","agism","agist","agita","aglee","aglet","agley","agloo","aglus","agmas","agoge","agogo","agone","agons","agood","agora","agria","agrin","agros","agrum","agued","agues","aguey","aguna","agush","aguti","aheap","ahent","ahigh","ahind","ahing","ahint","ahold","ahole","ahull","ahuru","aidas","aided","aides","aidoi","aidos","aiery","aigas","aight","ailed","aimag","aimak","aimed","aimer","ainee","ainga","aioli","aired","airer","airns","airth","airts","aitch","aitus","aiver","aixes","aiyah","aiyee","aiyoh","aiyoo","aizle","ajies","ajiva","ajuga","ajupa","ajwan","akara","akees","akela","akene","aking","akita","akkas","akker","akoia","akoja","akoya","aksed","akses","alaap","alack","alala","alamo","aland","alane","alang","alans","alant","alapa","alaps","alary","alata","alate","alays","albas","albee","albid","alcea","alces","alcid","alcos","aldea","alder","aldol","aleak","aleck","alecs","aleem","alefs","aleft","aleph","alews","aleye","alfas","algal","algas","algid","algin","algor","algos","algum","alias","alick","alifs","alims","aline","alios","alist","aliya","alkie","alkin","alkos","alkyd","alkyl","allan","allee","allel","allen","aller","allin","allis","allod","allus","allyl","almah","almas","almeh","almes","almud","almug","alods","aloed","aloes","aloha","aloin","aloos","alose","alowe","altho","altos","alula","alums","alumy","alure","alurk","alvar","alway","amahs","amain","amari","amaro","amate","amaut","amban","ambit","ambos","ambry","ameba","ameer","amene","amens","ament","amias","amice","amici","amide","amido","amids","amies","amiga","amigo","amine","amino","amins","amirs","amlas","amman","ammas","ammon","ammos","amnia","amnic","amnio","amoks","amole","amore","amort","amour","amove","amowt","amped","ampul","amrit","amuck","amyls","anana","anata","ancho","ancle","ancon","andic","andro","anear","anele","anent","angas","anglo","anigh","anile","anils","anima","animi","anion","anise","anker","ankhs","ankus","anlas","annal","annan","annas","annat","annum","annus","anoas","anole","anomy","ansae","ansas","antae","antar","antas","anted","antes","antis","antra","antre","antsy","anura","anyon","apace","apage","apaid","apayd","apays","apeak","apeek","apers","apert","apery","apgar","aphis","apian","apiol","apish","apism","apode","apods","apols","apoop","aport","appal","appam","appay","appel","appro","appts","appui","appuy","apres","apses","apsis","apsos","apted","apter","aquae","aquas","araba","araks","arame","arars","arbah","arbas","arced","archi","arcos","arcus","ardeb","ardri","aread","areae","areal","arear","areas","areca","aredd","arede","arefy","areic","arene","arepa","arere","arete","arets","arett","argal","argan","argil","argle","argol","argon","argot","argus","arhat","arias","ariel","ariki","arils","ariot","arish","arith","arked","arled","arles","armed","armer","armet","armil","arnas","arnis","arnut","aroba","aroha","aroid","arpas","arpen","arrah","arras","arret","arris","arroz","arsed","arses","arsey","arsis","artal","artel","arter","artic","artis","artly","aruhe","arums","arval","arvee","arvos","aryls","asada","asana","ascon","ascus","asdic","ashed","ashes","ashet","asity","askar","asked","asker","askoi","askos","aspen","asper","aspic","aspie","aspis","aspro","assai","assam","assed","asses","assez","assot","aster","astir","astun","asura","asway","aswim","asyla","ataps","ataxy","atigi","atilt","atimy","atlas","atman","atmas","atmos","atocs","atoke","atoks","atoms","atomy","atony","atopy","atria","atrip","attap","attar","attas","atter","atuas","aucht","audad","audax","augen","auger","auges","aught","aulas","aulic","auloi","aulos","aumil","aunes","aunts","aurae","aural","aurar","auras","aurei","aures","auric","auris","aurum","autos","auxin","avale","avant","avast","avels","avens","avers","avgas","avine","avion","avise","aviso","avize","avows","avyze","awari","awarn","awato","awave","aways","awdls","aweel","aweto","awing","awkin","awmry","awned","awner","awols","awork","axels","axile","axils","axing","axite","axled","axles","axman","axmen","axoid","axone","axons","ayahs","ayaya","ayelp","aygre","ayins","aymag","ayont","ayres","ayrie","azans","azide","azido","azine","azlon","azoic","azole","azons","azote","azoth","azuki","azurn","azury","azygy","azyme","azyms","baaed","baals","baaps","babas","babby","babel","babes","babka","baboo","babul","babus","bacca","bacco","baccy","bacha","bachs","backs","backy","bacne","badam","baddy","baels","baffs","baffy","bafta","bafts","baghs","bagie","bagsy","bagua","bahts","bahus","bahut","baiks","baile","bails","bairn","baisa","baith","baits","baiza","baize","bajan","bajra","bajri","bajus","baked","baken","bakes","bakra","balas","balds","baldy","baled","bales","balks","balky","ballo","balls","bally","balms","baloi","balon","baloo","balot","balsa","balti","balun","balus","balut","bamas","bambi","bamma","bammy","banak","banco","bancs","banda","bandh","bands","bandy","baned","banes","bangs","bania","banks","banky","banns","bants","bantu","banty","bantz","banya","baons","baozi","bappu","bapus","barbe","barbs","barby","barca","barde","bardo","bards","bardy","bared","barer","bares","barfi","barfs","barfy","baric","barks","barky","barms","barmy","barns","barny","barps","barra","barre","barro","barry","barye","basan","basas","based","basen","baser","bases","basha","basho","basij","basks","bason","basse","bassi","basso","bassy","basta","basti","basto","basts","bated","bates","baths","batik","batos","batta","batts","battu","bauds","bauks","baulk","baurs","bavin","bawds","bawks","bawls","bawns","bawrs","bawty","bayas","bayed","bayer","bayes","bayle","bayts","bazar","bazas","bazoo","bball","bdays","beads","beaks","beaky","beals","beams","beamy","beano","beans","beany","beare","bears","beath","beats","beaty","beaus","beaut","beaux","bebop","becap","becke","becks","bedad","bedel","bedes","bedew","bedim","bedye","beedi","beefs","beeps","beers","beery","beets","befog","begad","begar","begem","begob","begot","begum","beige","beigy","beins","beira","beisa","bekah","belah","belar","belay","belee","belga","belit","belli","bello","bells","belon","belts","belve","bemad","bemas","bemix","bemud","bends","bendy","benes","benet","benga","benis","benji","benne","benni","benny","bento","bents","benty","bepat","beray","beres","bergs","berko","berks","berme","berms","berob","beryl","besat","besaw","besee","beses","besit","besom","besot","besti","bests","betas","beted","betes","beths","betid","beton","betta","betty","bevan","bever","bevor","bevue","bevvy","bewdy","bewet","bewig","bezes","bezil","bezzy","bhais","bhaji","bhang","bhats","bhava","bhels","bhoot","bhuna","bhuts","biach","biali","bialy","bibbs","bibes","bibis","biccy","bices","bicky","bided","bider","bides","bidet","bidis","bidon","bidri","bield","biers","biffo","biffs","biffy","bifid","bigae","biggs","biggy","bigha","bight","bigly","bigos","bihon","bijou","biked","biker","bikes","bikie","bikky","bilal","bilat","bilbo","bilby","biled","biles","bilgy","bilks","bills","bimah","bimas","bimbo","binal","bindi","binds","biner","bines","bings","bingy","binit","binks","binky","bints","biogs","bions","biont","biose","biota","biped","bipod","bippy","birdo","birds","biris","birks","birle","birls","biros","birrs","birse","birsy","birze","birzz","bises","bisks","bisom","bitch","biter","bites","bitey","bitos","bitou","bitsy","bitte","bitts","bivia","bivvy","bizes","bizzo","bizzy","blabs","blads","blady","blaer","blaes","blaff","blags","blahs","blain","blams","blanc","blart","blase","blash","blate","blats","blatt","blaud","blawn","blaws","blays","bleah","blear","blebs","blech","blees","blent","blert","blest","blets","bleys","blimy","bling","blini","blins","bliny","blips","blist","blite","blits","blive","blobs","blocs","blogs","blonx","blook","bloop","blore","blots","blows","blowy","blubs","blude","bluds","bludy","blued","blues","bluet","bluey","bluid","blume","blunk","blurs","blype","boabs","boaks","boars","boart","boats","boaty","bobac","bobak","bobas","bobol","bobos","bocca","bocce","bocci","boche","bocks","boded","bodes","bodge","bodgy","bodhi","bodle","bodoh","boeps","boers","boeti","boets","boeuf","boffo","boffs","bogan","bogey","boggy","bogie","bogle","bogue","bogus","bohea","bohos","boils","boing","boink","boite","boked","bokeh","bokes","bokos","bolar","bolas","boldo","bolds","boles","bolet","bolix","bolks","bolls","bolos","bolts","bolus","bomas","bombe","bombo","bombs","bomoh","bomor","bonce","bonds","boned","boner","bones","bongs","bonie","bonks","bonne","bonny","bonum","bonza","bonze","booai","booay","boobs","boody","booed","boofy","boogy","boohs","books","booky","bools","booms","boomy","boong","boons","boord","boors","boose","boots","boppy","borak","boral","boras","borde","bords","bored","boree","borek","borel","borer","bores","borgo","boric","borks","borms","borna","boron","borts","borty","bortz","bosey","bosie","bosks","bosky","boson","bossa","bosun","botas","boteh","botel","botes","botew","bothy","botos","botte","botts","botty","bouge","bouks","boult","bouns","bourd","bourg","bourn","bouse","bousy","bouts","boutu","bovid","bowat","bowed","bower","bowes","bowet","bowie","bowls","bowne","bowrs","bowse","boxed","boxen","boxes","boxla","boxty","boyar","boyau","boyed","boyey","boyfs","boygs","boyla","boyly","boyos","boysy","bozos","braai","brach","brack","bract","brads","braes","brags","brahs","brail","braks","braky","brame","brane","brank","brans","brant","brast","brats","brava","bravi","braws","braxy","brays","braza","braze","bream","brede","breds","breem","breer","brees","breid","breis","breme","brens","brent","brere","brers","breve","brews","breys","brier","bries","brigs","briki","briks","brill","brims","brins","brios","brise","briss","brith","brits","britt","brize","broch","brock","brods","brogh","brogs","brome","bromo","bronc","brond","brool","broos","brose","brosy","brows","bruck","brugh","bruhs","bruin","bruit","bruja","brujo","brule","brume","brung","brusk","brust","bruts","bruvs","buats","buaze","bubal","bubas","bubba","bubbe","bubby","bubus","buchu","bucko","bucks","bucku","budas","buded","budes","budis","budos","buena","buffa","buffe","buffi","buffo","buffs","buffy","bufos","bufty","bugan","buhls","buhrs","buiks","buist","bukes","bukos","bulbs","bulgy","bulks","bulla","bulls","bulse","bumbo","bumfs","bumph","bumps","bumpy","bunas","bunce","bunco","bunde","bundh","bunds","bundt","bundu","bundy","bungs","bungy","bunia","bunje","bunjy","bunko","bunks","bunns","bunts","bunty","bunya","buoys","buppy","buran","buras","burbs","burds","buret","burfi","burgh","burgs","burin","burka","burke","burks","burls","burns","buroo","burps","burqa","burra","burro","burrs","burry","bursa","burse","busby","buses","busks","busky","bussu","busti","busts","busty","buteo","butes","butle","butoh","butts","butty","butut","butyl","buyin","buzzy","bwana","bwazi","byded","bydes","byked","bykes","byres","byrls","byssi","bytes","byway","caaed","cabas","caber","cabob","caboc","cabre","cacas","cacks","cacky","cadee","cades","cadge","cadgy","cadie","cadis","cadre","caeca","caese","cafes","caffe","caffs","caged","cager","cages","cagot","cahow","caids","cains","caird","cajon","cajun","caked","cakes","cakey","calfs","calid","calif","calix","calks","calla","calle","calls","calms","calmy","calos","calpa","calps","calve","calyx","caman","camas","cames","camis","camos","campi","campo","camps","campy","camus","cando","caned","caneh","caner","canes","cangs","canid","canna","canns","canso","canst","canti","canto","cants","canty","capas","capax","caped","capes","capex","caphs","capiz","caple","capon","capos","capot","capri","capul","carap","carbo","carbs","carby","cardi","cards","cardy","cared","carer","cares","caret","carex","carks","carle","carls","carne","carns","carny","carob","carom","caron","carpe","carpi","carps","carrs","carse","carta","carte","carts","carvy","casas","casco","cased","caser","cases","casks","casky","casts","casus","cates","cauda","cauks","cauld","cauls","caums","caups","cauri","causa","cavas","caved","cavel","caver","caves","cavie","cavus","cawed","cawks","caxon","ceaze","cebid","cecal","cecum","ceded","ceder","cedes","cedis","ceiba","ceili","ceils","celeb","cella","celli","cells","celly","celom","celts","cense","cento","cents","centu","ceorl","cepes","cerci","cered","ceres","cerge","ceria","ceric","cerne","ceroc","ceros","certs","certy","cesse","cesta","cesti","cetes","cetyl","cezve","chaap","chaat","chace","chack","chaco","chado","chads","chaft","chais","chals","chams","chana","chang","chank","chape","chaps","chapt","chara","chare","chark","charr","chars","chary","chats","chava","chave","chavs","chawk","chawl","chaws","chaya","chays","cheba","chedi","cheeb","cheep","cheet","chefs","cheka","chela","chelp","chemo","chems","chere","chert","cheth","chevy","chews","chewy","chiao","chias","chiba","chibs","chica","chich","chico","chics","chiel","chiko","chiks","chile","chimb","chimo","chimp","chine","ching","chink","chino","chins","chips","chirk","chirl","chirm","chiro","chirr","chirt","chiru","chiti","chits","chiva","chive","chivs","chivy","chizz","choco","chocs","chode","chogs","choil","choko","choky","chola","choli","cholo","chomp","chons","choof","chook","choom","choon","chops","choss","chota","chott","chout","choux","chowk","chows","chubs","chufa","chuff","chugs","chums","churl","churr","chuse","chuts","chyle","chyme","chynd","cibol","cided","cides","ciels","ciggy","cilia","cills","cimar","cimex","cinct","cines","cinqs","cions","cippi","circs","cires","cirls","cirri","cisco","cissy","cists","cital","cited","citee","citer","cites","cives","civet","civie","civvy","clach","clade","clads","claes","clags","clair","clame","clams","clans","claps","clapt","claro","clart","clary","clast","clats","claut","clave","clavi","claws","clays","cleck","cleek","cleep","clefs","clegs","cleik","clems","clepe","clept","cleve","clews","clied","clies","clift","clime","cline","clint","clipe","clips","clipt","clits","cloam","clods","cloff","clogs","cloke","clomb","clomp","clonk","clons","cloop","cloot","clops","clote","clots","clour","clous","clows","cloye","cloys","cloze","clubs","clues","cluey","clunk","clype","cnida","coact","coady","coala","coals","coaly","coapt","coarb","coate","coati","coats","cobbs","cobby","cobia","coble","cobot","cobza","cocas","cocci","cocco","cocks","cocky","cocos","cocus","codas","codec","coded","coden","coder","codes","codex","codon","coeds","coffs","cogie","cogon","cogue","cohab","cohen","cohoe","cohog","cohos","coifs","coign","coils","coins","coirs","coits","coked","cokes","cokey","colas","colby","colds","coled","coles","coley","colic","colin","colle","colls","colly","colog","colts","colza","comae","comal","comas","combe","combi","combo","combs","comby","comer","comes","comix","comme","commo","comms","commy","compo","comps","compt","comte","comus","coned","cones","conex","coney","confs","conga","conge","congo","conia","conin","conks","conky","conne","conns","conte","conto","conus","convo","cooch","cooed","cooee","cooer","cooey","coofs","cooks","cooky","cools","cooly","coomb","cooms","coomy","coons","coops","coopt","coost","coots","cooty","cooze","copal","copay","coped","copen","coper","copes","copha","coppy","copra","copsy","coqui","coram","corbe","corby","corda","cords","cored","cores","corey","corgi","coria","corks","corky","corms","corni","corno","corns","cornu","corps","corse","corso","cosec","cosed","coses","coset","cosey","cosie","costa","coste","costs","cotan","cotch","coted","cotes","coths","cotta","cotts","coude","coups","courb","courd","coure","cours","couta","couth","coved","coves","covin","cowal","cowan","cowed","cowks","cowls","cowps","cowry","coxae","coxal","coxed","coxes","coxib","coyau","coyed","coyer","coypu","cozed","cozen","cozes","cozey","cozie","craal","crabs","crags","craic","craig","crake","crame","crams","crans","crape","craps","crapy","crare","craws","crays","creds","creel","crees","crein","crema","crems","crena","creps","crepy","crewe","crews","crias","cribo","cribs","cries","crims","crine","crink","crins","crios","cripe","crips","crise","criss","crith","crits","croci","crocs","croft","crogs","cromb","crome","cronk","crons","crool","croon","crops","crore","crost","crout","crowl","crows","croze","cruck","crudo","cruds","crudy","crues","cruet","cruft","crunk","cruor","crura","cruse","crusy","cruve","crwth","cryer","cryne","ctene","cubby","cubeb","cubed","cuber","cubes","cubit","cucks","cudda","cuddy","cueca","cuffo","cuffs","cuifs","cuing","cuish","cuits","cukes","culch","culet","culex","culls","cully","culms","culpa","culti","cults","culty","cumec","cundy","cunei","cunit","cunny","cunts","cupel","cupid","cuppa","cuppy","cupro","curat","curbs","curch","curds","curdy","cured","curer","cures","curet","curfs","curia","curie","curli","curls","curns","curny","currs","cursi","curst","cusec","cushy","cusks","cusps","cuspy","cusso","cusum","cutch","cuter","cutes","cutey","cutin","cutis","cutto","cutty","cutup","cuvee","cuzes","cwtch","cyano","cyans","cycad","cycas","cyclo","cyder","cylix","cymae","cymar","cymas","cymes","cymol","cysts","cytes","cyton","czars","daals","dabba","daces","dacha","dacks","dadah","dadas","dadis","dadla","dados","daffs","daffy","dagga","daggy","dagos","dahis","dahls","daiko","daine","daint","daker","daled","dalek","dales","dalis","dalle","dalts","daman","damar","dames","damme","damna","damns","damps","dampy","dancy","danda","dangs","danio","danks","danny","danse","dants","dappy","daraf","darbs","darcy","dared","darer","dares","darga","dargs","daric","daris","darks","darky","darls","darns","darre","darts","darzi","dashi","dashy","datal","dated","dater","dates","datil","datos","datto","daube","daubs","dauby","dauds","dault","daurs","dauts","daven","davit","dawah","dawds","dawed","dawen","dawgs","dawks","dawns","dawts","dayal","dayan","daych","daynt","dazed","dazer","dazes","dbags","deads","deair","deals","deans","deare","dearn","dears","deary","deash","deave","deaws","deawy","debag","debby","debel","debes","debts","debud","debur","debus","debye","decad","decaf","decan","decim","decko","decks","decos","decyl","dedal","deeds","deedy","deely","deems","deens","deeps","deere","deers","deets","deeve","deevs","defat","deffo","defis","defog","degas","degum","degus","deice","deids","deify","deils","deink","deism","deist","deked","dekes","dekko","deled","deles","delfs","delft","delis","della","dells","delly","delos","delph","delts","deman","demes","demic","demit","demob","demoi","demos","demot","dempt","denar","denay","dench","denes","denet","denis","dente","dents","deoch","deoxy","derat","deray","dered","deres","derig","derma","derms","derns","derny","deros","derpy","derro","derry","derth","dervs","desex","deshi","desis","desks","desse","detag","devas","devel","devis","devon","devos","devot","dewan","dewar","dewax","dewed","dexes","dexie","dexys","dhaba","dhaks","dhals","dhikr","dhobi","dhole","dholl","dhols","dhoni","dhoti","dhows","dhuti","diact","dials","diana","diane","diazo","dibbs","diced","dicer","dices","dicht","dicks","dicky","dicot","dicta","dicto","dicts","dictu","dicty","diddy","didie","didis","didos","didst","diebs","diels","diene","diets","diffs","dight","dikas","diked","diker","dikes","dikey","dildo","dilli","dills","dimbo","dimer","dimes","dimps","dinar","dined","dines","dinge","dings","dinic","dinks","dinky","dinlo","dinna","dinos","dints","dioch","diols","diota","dippy","dipso","diram","direr","dirke","dirks","dirls","dirts","disas","disci","discs","dishy","disks","disme","dital","ditas","dited","dites","ditsy","ditts","ditzy","divan","divas","dived","dives","divey","divis","divna","divos","divot","divvy","diwan","dixie","dixit","diyas","dizen","djinn","djins","doabs","doats","dobby","dobes","dobie","dobla","doble","dobra","dobro","docht","docks","docos","docus","doddy","dodos","doeks","doers","doest","doeth","doffs","dogal","dogan","doges","dogey","doggo","doggy","dogie","dogly","dohyo","doilt","doily","doits","dojos","dolce","dolci","doled","dolee","doles","doley","dolia","dolie","dolls","dolma","dolor","dolos","dolts","domal","domed","domes","domic","donah","donas","donee","doner","donga","dongs","donko","donna","donne","donny","donsy","doobs","dooce","doody","doofs","dooks","dooky","doole","dools","dooly","dooms","doomy","doona","doorn","doors","doozy","dopas","doped","doper","dopes","doppe","dorad","dorba","dorbs","doree","dores","doric","doris","dorje","dorks","dorky","dorms","dormy","dorps","dorrs","dorsa","dorse","dorts","dorty","dosai","dosas","dosed","doseh","doser","doses","dosha","dotal","doted","doter","dotes","dotty","douar","douce","doucs","douks","doula","douma","doums","doups","doura","douse","douts","doved","doven","dover","doves","dovie","dowak","dowar","dowds","dowed","dower","dowfs","dowie","dowle","dowls","dowly","downa","downs","dowps","dowse","dowts","doxed","doxes","doxie","doyen","doyly","dozed","dozer","dozes","drabs","drack","draco","draff","drags","drail","drams","drant","draps","drapy","drats","drave","draws","drays","drear","dreck","dreed","dreer","drees","dregs","dreks","drent","drere","drest","dreys","dribs","drice","dries","drily","drips","dript","drock","droid","droil","droke","drole","drome","drony","droob","droog","drook","drops","dropt","drouk","drows","drubs","drugs","drums","drupe","druse","drusy","druxy","dryad","dryas","dsobo","dsomo","duads","duals","duans","duars","dubbo","dubby","ducal","ducat","duces","ducks","ducky","ducti","ducts","duddy","duded","dudes","duels","duets","duett","duffs","dufus","duing","duits","dukas","duked","dukes","dukka","dukun","dulce","dules","dulia","dulls","dulse","dumas","dumbo","dumbs","dumka","dumky","dumps","dunam","dunch","dunes","dungs","dungy","dunks","dunno","dunny","dunsh","dunts","duomi","duomo","duped","duper","dupes","duple","duply","duppy","dural","duras","dured","dures","durgy","durns","duroc","duros","duroy","durra","durrs","durry","durst","durum","durzi","dusks","dusts","duxes","dwaal","dwale","dwalm","dwams","dwamy","dwang","dwaum","dweeb","dwile","dwine","dyads","dyers","dyked","dykes","dykey","dykon","dynel","dynes","dynos","dzhos","eagly","eagre","ealed","eales","eaned","eards","eared","earls","earns","earnt","earst","eased","easer","eases","easle","easts","eathe","eatin","eaved","eaver","eaves","ebank","ebbed","ebbet","ebena","ebene","ebike","ebons","ebook","ecads","ecard","ecash","eched","eches","echos","ecigs","ecole","ecrus","edema","edged","edger","edges","edile","edits","educe","educt","eejit","eensy","eeven","eever","eevns","effed","effer","efits","egads","egers","egest","eggar","egged","egger","egmas","ehing","eider","eidos","eigne","eiked","eikon","eilds","eiron","eisel","ejido","ekdam","ekkas","elain","eland","elans","elchi","eldin","eleet","elemi","elfed","eliad","elint","elmen","eloge","elogy","eloin","elops","elpee","elsin","elute","elvan","elven","elver","elves","emacs","embar","embay","embog","embow","embox","embus","emeer","emend","emerg","emery","emeus","emics","emirs","emits","emmas","emmer","emmet","emmew","emmys","emoji","emong","emote","emove","empts","emule","emure","emyde","emyds","enarm","enate","ended","ender","endew","endue","enews","enfix","eniac","enlit","enmew","ennog","enoki","enols","enorm","enows","enrol","ensew","ensky","entia","entre","enure","enurn","envoi","enzym","eolid","eorls","eosin","epact","epees","epena","epene","ephah","ephas","ephod","ephor","epics","epode","epopt","eppie","epris","eques","equid","erbia","erevs","ergon","ergos","ergot","erhus","erica","erick","erics","ering","erned","ernes","erose","erred","erses","eruct","erugo","eruvs","erven","ervil","escar","escot","esile","eskar","esker","esnes","esrog","esses","estoc","estop","estro","etage","etape","etats","etens","ethal","ethne","ethyl","etics","etnas","etrog","ettin","ettle","etuis","etwee","etyma","eughs","euked","eupad","euros","eusol","evegs","evens","evert","evets","evhoe","evils","evite","evohe","ewers","ewest","ewhow","ewked","exams","exeat","execs","exeem","exeme","exfil","exier","exies","exine","exing","exite","exits","exode","exome","exons","expat","expos","exude","exuls","exurb","eyass","eyers","eyots","eyras","eyres","eyrie","eyrir","ezine","fabbo","fabby","faced","facer","faces","facey","facia","facie","facta","facto","facts","facty","faddy","faded","fader","fades","fadge","fados","faena","faery","faffs","faffy","faggy","fagin","fagot","faiks","fails","faine","fains","faire","fairs","faked","faker","fakes","fakey","fakie","fakir","falaj","fales","falls","falsy","famed","fames","fanal","fands","fanes","fanga","fango","fangs","fanks","fanon","fanos","fanum","faqir","farad","farci","farcy","fards","fared","farer","fares","farle","farls","farms","faros","farro","farse","farts","fasci","fasti","fasts","fated","fates","fatly","fatso","fatwa","fauch","faugh","fauld","fauns","faurd","faute","fauts","fauve","favas","favel","faver","faves","favus","fawns","fawny","faxed","faxes","fayed","fayer","fayne","fayre","fazed","fazes","feals","feard","feare","fears","feart","fease","feats","feaze","feces","fecht","fecit","fecks","fedai","fedex","feebs","feeds","feels","feely","feens","feers","feese","feeze","fehme","feint","feist","felch","felid","felix","fells","felly","felts","felty","femal","femes","femic","femmy","fends","fendy","fenis","fenks","fenny","fents","feods","feoff","ferer","feres","feria","ferly","fermi","ferms","ferns","ferny","ferox","fesse","festa","fests","festy","fetas","feted","fetes","fetor","fetta","fetts","fetwa","feuar","feuds","feued","feyed","feyer","feyly","fezes","fezzy","fiars","fiats","fibre","fibro","fices","fiche","fichu","ficin","ficos","ficta","fides","fidge","fidos","fidus","fiefs","fient","fiere","fieri","fiers","fiest","fifed","fifer","fifes","fifis","figgy","figos","fiked","fikes","filar","filch","filed","files","filii","filks","fille","fillo","fills","filmi","films","filon","filos","filum","finca","finds","fined","fines","finis","finks","finny","finos","fiord","fiqhs","fique","fired","firer","fires","firie","firks","firma","firms","firni","firns","firry","firth","fiscs","fisho","fisks","fists","fisty","fitch","fitly","fitna","fitte","fitts","fiver","fives","fixed","fixes","fixie","fixit","fjeld","flabs","flaff","flags","flaks","flamm","flams","flamy","flane","flans","flaps","flary","flats","flava","flawn","flaws","flawy","flaxy","flays","fleam","fleas","fleek","fleer","flees","flegs","fleme","fleur","flews","flexi","flexo","fleys","flics","flied","flies","flimp","flims","flips","flirs","flisk","flite","flits","flitt","flobs","flocs","floes","flogs","flong","flops","flore","flors","flory","flosh","flota","flote","flows","flowy","flubs","flued","flues","fluey","fluky","flump","fluor","flurr","fluty","fluyt","flyby","flyin","flype","flyte","fnarr","foals","foams","foehn","fogey","fogie","fogle","fogos","fogou","fohns","foids","foils","foins","folds","foley","folia","folic","folie","folks","folky","fomes","fonda","fonds","fondu","fones","fonio","fonly","fonts","foods","foody","fools","foots","footy","foram","forbs","forby","fordo","fords","forel","fores","forex","forks","forky","forma","forme","forms","forts","forza","forze","fossa","fosse","fouat","fouds","fouer","fouet","foule","fouls","fount","fours","fouth","fovea","fowls","fowth","foxed","foxes","foxie","foyle","foyne","frabs","frack","fract","frags","fraim","frais","franc","frape","fraps","frass","frate","frati","frats","fraus","frays","frees","freet","freit","fremd","frena","freon","frere","frets","fribs","frier","fries","frigs","frise","frist","frita","frite","frith","frits","fritt","frize","frizz","froes","frogs","fromm","frons","froom","frore","frorn","frory","frosh","frows","frowy","froyo","frugs","frump","frush","frust","fryer","fubar","fubby","fubsy","fucks","fucus","fuddy","fudgy","fuels","fuero","fuffs","fuffy","fugal","fuggy","fugie","fugio","fugis","fugle","fugly","fugus","fujis","fulla","fulls","fulth","fulwa","fumed","fumer","fumes","fumet","funda","fundi","fundo","funds","fundy","fungo","fungs","funic","funis","funks","funsy","funts","fural","furan","furca","furls","furol","furos","furrs","furth","furze","furzy","fused","fusee","fusel","fuses","fusil","fusks","fusts","fusty","futon","fuzed","fuzee","fuzes","fuzil","fyces","fyked","fykes","fyles","fyrds","fytte","gabba","gabby","gable","gaddi","gades","gadge","gadgy","gadid","gadis","gadje","gadjo","gadso","gaffs","gaged","gager","gages","gaids","gains","gairs","gaita","gaits","gaitt","gajos","galah","galas","galax","galea","galed","gales","galia","galis","galls","gally","galop","galut","galvo","gamas","gamay","gamba","gambe","gambo","gambs","gamed","games","gamey","gamic","gamin","gamme","gammy","gamps","ganch","gandy","ganef","ganev","gangs","ganja","ganks","ganof","gants","gaols","gaped","gaper","gapes","gapos","gappy","garam","garba","garbe","garbo","garbs","garda","garde","gares","garis","garms","garni","garre","garri","garth","garum","gases","gashy","gasps","gaspy","gasts","gatch","gated","gater","gates","gaths","gator","gauch","gaucy","gauds","gauje","gault","gaums","gaumy","gaups","gaurs","gauss","gauzy","gavot","gawcy","gawds","gawks","gawps","gawsy","gayal","gazal","gazar","gazed","gazes","gazon","gazoo","geals","geans","geare","gears","geasa","geats","gebur","gecks","geeks","geeps","geest","geist","geits","gelds","gelee","gelid","gelly","gelts","gemel","gemma","gemmy","gemot","genae","genal","genas","genes","genet","genic","genii","genin","genio","genip","genny","genoa","genom","genro","gents","genty","genua","genus","geode","geoid","gerah","gerbe","geres","gerle","germs","germy","gerne","gesse","gesso","geste","gests","getas","getup","geums","geyan","geyer","ghast","ghats","ghaut","ghazi","ghees","ghest","ghusl","ghyll","gibed","gibel","giber","gibes","gibli","gibus","gifts","gigas","gighe","gigot","gigue","gilas","gilds","gilet","gilia","gills","gilly","gilpy","gilts","gimel","gimme","gimps","gimpy","ginch","ginga","ginge","gings","ginks","ginny","ginzo","gipon","gippo","gippy","girds","girlf","girls","girns","giron","giros","girrs","girsh","girts","gismo","gisms","gists","gitch","gites","giust","gived","gives","gizmo","glace","glads","glady","glaik","glair","glamp","glams","glans","glary","glatt","glaum","glaur","glazy","gleba","glebe","gleby","glede","gleds","gleed","gleek","glees","gleet","gleis","glens","glent","gleys","glial","glias","glibs","gliff","glift","glike","glime","glims","glisk","glits","glitz","gloam","globi","globs","globy","glode","glogg","gloms","gloop","glops","glost","glout","glows","glowy","gloze","glued","gluer","glues","gluey","glugg","glugs","glume","glums","gluon","glute","gluts","gnapi","gnarl","gnarr","gnars","gnats","gnawn","gnaws","gnows","goads","goafs","goaft","goals","goary","goats","goaty","goave","goban","gobar","gobbe","gobbi","gobbo","gobby","gobis","gobos","godet","godso","goels","goers","goest","goeth","goety","gofer","goffs","gogga","gogos","goier","gojis","gokes","golds","goldy","goles","golfs","golpe","golps","gombo","gomer","gompa","gonch","gonef","gongs","gonia","gonif","gonks","gonna","gonof","gonys","gonzo","gooby","goodo","goods","goofs","googs","gooks","gooky","goold","gools","gooly","goomy","goons","goony","goops","goopy","goors","goory","goosy","gopak","gopik","goral","goras","goray","gorbs","gordo","gored","gores","goris","gorms","gormy","gorps","gorse","gorsy","gosht","gosse","gotch","goths","gothy","gotta","gouch","gouks","goura","gouts","gouty","goved","goves","gowan","gowds","gowfs","gowks","gowls","gowns","goxes","goyim","goyle","graal","grabs","grads","graff","graip","grama","grame","gramp","grams","grana","grano","grans","grapy","grata","grats","gravs","grays","grebe","grebo","grece","greek","grees","grege","grego","grein","grens","greps","grese","greve","grews","greys","grice","gride","grids","griff","grift","grigs","grike","grins","griot","grips","gript","gripy","grise","grist","grisy","grith","grits","grize","groat","grody","grogs","groks","groma","groms","grone","groof","grosz","grots","grouf","grovy","grows","grrls","grrrl","grubs","grued","grues","grufe","grume","grump","grund","gryce","gryde","gryke","grype","grypt","guaco","guana","guano","guans","guars","gubba","gucks","gucky","gudes","guffs","gugas","guggl","guido","guids","guimp","guiro","gulab","gulag","gular","gulas","gules","gulet","gulfs","gulfy","gulls","gulph","gulps","gulpy","gumma","gummi","gumps","gunas","gundi","gundy","gunge","gungy","gunks","gunky","gunny","guqin","gurdy","gurge","gurks","gurls","gurly","gurns","gurry","gursh","gurus","gushy","gusla","gusle","gusli","gussy","gusts","gutsy","gutta","gutty","guyed","guyle","guyot","guyse","gwine","gyals","gyans","gybed","gybes","gyeld","gymps","gynae","gynie","gynny","gynos","gyoza","gypes","gypos","gyppo","gyppy","gyral","gyred","gyres","gyron","gyros","gyrus","gytes","gyved","gyver","gyves","haafs","haars","haats","hable","habus","hacek","hacks","hacky","hadal","haded","hades","hadji","hadst","haems","haere","haets","haffs","hafiz","hafta","hafts","haggs","haham","hahas","haick","haika","haiks","haiku","hails","haily","hains","haint","hairs","haith","hajes","hajis","hajji","hakam","hakas","hakea","hakes","hakim","hakus","halal","haldi","haled","haler","hales","halfa","halfs","halid","hallo","halls","halma","halms","halon","halos","halse","halsh","halts","halva","halwa","hamal","hamba","hamed","hamel","hames","hammy","hamza","hanap","hance","hanch","handi","hands","hangi","hangs","hanks","hanky","hansa","hanse","hants","haole","haoma","hapas","hapax","haply","happi","hapus","haram","hards","hared","hares","harim","harks","harls","harms","harns","haros","harps","harts","hashy","hasks","hasps","hasta","hated","hates","hatha","hathi","hatty","hauds","haufs","haugh","haugo","hauld","haulm","hauls","hault","hauns","hause","havan","havel","haver","haves","hawed","hawks","hawms","hawse","hayed","hayer","hayey","hayle","hazan","hazed","hazer","hazes","hazle","heads","heald","heals","heame","heaps","heapy","heare","hears","heast","heats","heaty","heben","hebes","hecht","hecks","heder","hedgy","heeds","heedy","heels","heeze","hefte","hefts","heiau","heids","heigh","heils","heirs","hejab","hejra","heled","heles","helio","hella","hells","helly","helms","helos","helot","helps","helve","hemal","hemes","hemic","hemin","hemps","hempy","hench","hends","henge","henna","henny","henry","hents","hepar","herbs","herby","herds","heres","herls","herma","herms","herns","heros","herps","herry","herse","hertz","herye","hesps","hests","hetes","heths","heuch","heugh","hevea","hevel","hewed","hewer","hewgh","hexad","hexed","hexer","hexes","hexyl","heyed","hiant","hibas","hicks","hided","hider","hides","hiems","hifis","highs","hight","hijab","hijra","hiked","hiker","hikes","hikoi","hilar","hilch","hillo","hills","hilsa","hilts","hilum","hilus","himbo","hinau","hinds","hings","hinky","hinny","hints","hiois","hiped","hiper","hipes","hiply","hired","hiree","hirer","hires","hissy","hists","hithe","hived","hiver","hives","hizen","hoach","hoaed","hoagy","hoars","hoary","hoast","hobos","hocks","hocus","hodad","hodja","hoers","hogan","hogen","hoggs","hoghs","hogoh","hogos","hohed","hoick","hoied","hoiks","hoing","hoise","hokas","hoked","hokes","hokey","hokis","hokku","hokum","holds","holed","holes","holey","holks","holla","hollo","holme","holms","holon","holos","holts","homas","homed","homes","homey","homie","homme","homos","honan","honda","honds","honed","honer","hones","hongi","hongs","honks","honky","hooch","hoods","hoody","hooey","hoofs","hoogo","hooha","hooka","hooks","hooky","hooly","hoons","hoops","hoord","hoors","hoosh","hoots","hooty","hoove","hopak","hoped","hoper","hopes","hoppy","horah","horal","horas","horis","horks","horme","horns","horst","horsy","hosed","hosel","hosen","hoser","hoses","hosey","hosta","hosts","hotch","hoten","hotis","hotte","hotty","houff","houfs","hough","houri","hours","houts","hovea","hoved","hoven","hoves","howay","howbe","howes","howff","howfs","howks","howls","howre","howso","howto","hoxed","hoxes","hoyas","hoyed","hoyle","hubba","hubby","hucks","hudna","hudud","huers","huffs","huffy","huger","huggy","huhus","huias","huies","hukou","hulas","hules","hulks","hulky","hullo","hulls","hully","humas","humfs","humic","humps","humpy","hundo","hunks","hunts","hurds","hurls","hurly","hurra","hurst","hurts","hurty","hushy","husks","husos","hutia","huzza","huzzy","hwyls","hydel","hydra","hyens","hygge","hying","hykes","hylas","hyleg","hyles","hylic","hymns","hynde","hyoid","hyped","hypes","hypha","hyphy","hypos","hyrax","hyson","hythe","iambi","iambs","ibrik","icers","iched","iches","ichor","icier","icker","ickle","icons","ictal","ictic","ictus","idant","iddah","iddat","iddut","ideas","idees","ident","idled","idles","idlis","idola","idols","idyls","iftar","igapo","igged","iglus","ignis","ihram","iiwis","ikans","ikats","ikons","ileac","ileal","ileum","ileus","iliad","ilial","ilium","iller","illth","imago","imagy","imams","imari","imaum","imbar","imbed","imbos","imide","imido","imids","imine","imino","imlis","immew","immit","immix","imped","impis","impot","impro","imshi","imshy","inapt","inarm","inbye","incas","incel","incle","incog","incus","incut","indew","india","indie","indol","indow","indri","indue","inerm","infix","infos","infra","ingan","ingle","inion","inked","inker","inkle","inned","innie","innit","inorb","inros","inrun","insee","inset","inspo","intel","intil","intis","intra","inula","inure","inurn","inust","invar","inver","inwit","iodic","iodid","iodin","ioras","iotas","ippon","irade","irids","iring","irked","iroko","irone","irons","isbas","ishes","isled","isles","isnae","issei","istle","items","ither","ivied","ivies","ixias","ixnay","ixora","ixtle","izard","izars","izzat","jaaps","jabot","jacal","jacet","jacks","jacky","jaded","jades","jafas","jaffa","jagas","jager","jaggs","jaggy","jagir","jagra","jails","jaker","jakes","jakey","jakie","jalap","jaleo","jalop","jambe","jambo","jambs","jambu","james","jammy","jamon","jamun","janes","janky","janns","janny","janty","japan","japed","japer","japes","jarks","jarls","jarps","jarta","jarul","jasey","jaspe","jasps","jatha","jatis","jatos","jauks","jaune","jaups","javas","javel","jawan","jawed","jawns","jaxie","jeans","jeats","jebel","jedis","jeels","jeely","jeeps","jeera","jeers","jeeze","jefes","jeffs","jehad","jehus","jelab","jello","jells","jembe","jemmy","jenny","jeons","jerid","jerks","jerry","jesse","jessy","jests","jesus","jetee","jetes","jeton","jeune","jewed","jewie","jhala","jheel","jhils","jiaos","jibba","jibbs","jibed","jiber","jibes","jiffs","jiggy","jigot","jihad","jills","jilts","jimmy","jimpy","jingo","jings","jinks","jinne","jinni","jinns","jirds","jirga","jirre","jisms","jitis","jitty","jived","jiver","jives","jivey","jnana","jobed","jobes","jocko","jocks","jocky","jocos","jodel","joeys","johns","joins","joked","jokes","jokey","jokol","joled","joles","jolie","jollo","jolls","jolts","jolty","jomon","jomos","jones","jongs","jonty","jooks","joram","jorts","jorum","jotas","jotty","jotun","joual","jougs","jouks","joule","jours","jowar","jowed","jowls","jowly","joyed","jubas","jubes","jucos","judas","judgy","judos","jugal","jugum","jujus","juked","jukes","jukus","julep","julia","jumar","jumby","jumps","junco","junks","junky","jupes","jupon","jural","jurat","jurel","jures","juris","juste","justs","jutes","jutty","juves","juvie","kaama","kabab","kabar","kabob","kacha","kacks","kadai","kades","kadis","kafir","kagos","kagus","kahal","kaiak","kaids","kaies","kaifs","kaika","kaiks","kails","kaims","kaing","kains","kajal","kakas","kakis","kalam","kalas","kales","kalif","kalis","kalpa","kalua","kamas","kames","kamik","kamis","kamme","kanae","kanal","kanas","kanat","kandy","kaneh","kanes","kanga","kangs","kanji","kants","kanzu","kaons","kapai","kapas","kapha","kaphs","kapok","kapow","kapur","kapus","kaput","karai","karas","karat","karee","karez","karks","karns","karoo","karos","karri","karst","karsy","karts","karzy","kasha","kasme","katal","katas","katis","katti","kaugh","kauri","kauru","kaury","kaval","kavas","kawas","kawau","kawed","kayle","kayos","kazis","kazoo","kbars","kcals","keaki","kebar","kebob","kecks","kedge","kedgy","keech","keefs","keeks","keels","keema","keeno","keens","keeps","keets","keeve","kefir","kehua","keirs","kelep","kelim","kells","kelly","kelps","kelpy","kelts","kelty","kembo","kembs","kemps","kempt","kempy","kenaf","kench","kendo","kenos","kente","kents","kepis","kerbs","kerel","kerfs","kerky","kerma","kerne","kerns","keros","kerry","kerve","kesar","kests","ketas","ketch","ketes","ketol","kevel","kevil","kexes","keyed","keyer","khadi","khads","khafs","khana","khans","khaph","khats","khaya","khazi","kheda","kheer","kheth","khets","khirs","khoja","khors","khoum","khuds","khula","khyal","kiaat","kiack","kiaki","kiang","kiasu","kibbe","kibbi","kibei","kibes","kibla","kicks","kicky","kiddo","kiddy","kidel","kideo","kidge","kiefs","kiers","kieve","kievs","kight","kikay","kikes","kikoi","kiley","kilig","kilim","kills","kilns","kilos","kilps","kilts","kilty","kimbo","kimet","kinas","kinda","kinds","kindy","kines","kings","kingy","kinin","kinks","kinos","kiore","kipah","kipas","kipes","kippa","kipps","kipsy","kirby","kirks","kirns","kirri","kisan","kissy","kists","kitab","kited","kiter","kites","kithe","kiths","kitke","kitul","kivas","kiwis","klang","klaps","klett","klick","klieg","kliks","klong","kloof","kluge","klutz","knags","knaps","knarl","knars","knaur","knawe","knees","knell","knick","knish","knits","knive","knobs","knoop","knops","knosp","knots","knoud","knout","knowd","knowe","knows","knubs","knule","knurl","knurr","knurs","knuts","koans","koaps","koban","kobos","koels","koffs","kofta","kogal","kohas","kohen","kohls","koine","koiwi","kojis","kokam","kokas","koker","kokra","kokum","kolas","kolos","kombi","kombu","konbu","kondo","konks","kooks","kooky","koori","kopek","kophs","kopje","koppa","korai","koran","koras","korat","kores","koris","korma","koros","korun","korus","koses","kotch","kotos","kotow","koura","kraal","krabs","kraft","krais","krait","krang","krans","kranz","kraut","krays","kreef","kreen","kreep","kreng","krewe","kriol","krona","krone","kroon","krubi","krump","krunk","ksars","kubie","kudos","kudus","kudzu","kufis","kugel","kuias","kukri","kukus","kulak","kulan","kulas","kulfi","kumis","kumys","kunas","kunds","kuris","kurre","kurta","kurus","kusso","kusti","kutai","kutas","kutch","kutis","kutus","kuyas","kuzus","kvass","kvell","kwaai","kwela","kwink","kwirl","kyack","kyaks","kyang","kyars","kyats","kybos","kydst","kyles","kylie","kylin","kylix","kyloe","kynde","kynds","kypes","kyrie","kytes","kythe","kyudo","laarf","laari","labda","labia","labis","labne","labra","laccy","laced","lacer","laces","lacet","lacey","lacis","lacka","lacks","lacky","laddu","laddy","laded","ladee","lader","lades","ladoo","laers","laevo","lagan","lagar","laggy","lahal","lahar","laich","laics","laide","laids","laigh","laika","laiks","laird","lairs","lairy","laith","laity","laked","laker","lakes","lakhs","lakin","laksa","laldy","lalls","lamas","lambs","lamby","lamed","lamer","lames","lamia","lammy","lamps","lanai","lanas","lanch","lande","lands","laned","lanes","lanks","lants","lapas","lapin","lapis","lapje","lappa","lappy","larch","lards","lardy","laree","lares","larfs","larga","largo","laris","larks","larky","larns","larnt","larum","lased","laser","lases","lassi","lassu","lassy","lasts","latah","lated","laten","latex","lathi","laths","lathy","latke","latus","lauan","lauch","laude","lauds","laufs","laund","laura","laval","lavas","laved","laver","laves","lavra","lavvy","lawed","lawer","lawin","lawks","lawns","lawny","lawsy","laxed","laxer","laxes","laxly","layby","layed","layin","layup","lazar","lazed","lazes","lazos","lazzi","lazzo","leads","leady","leafs","leaks","leams","leans","leany","leaps","leare","lears","leary","leats","leavy","leaze","leben","leccy","leche","ledes","ledgy","ledum","leear","leeks","leeps","leers","leese","leets","leeze","lefte","lefts","leger","leges","legge","leggo","legit","legno","lehrs","lehua","leirs","leish","leman","lemed","lemel","lemes","lemma","lemme","lends","lenes","lengs","lenis","lenos","lense","lenti","lento","leone","lepak","lepid","lepra","lepta","lered","leres","lerps","lesbo","leses","lesos","lests","letch","lethe","letty","letup","leuch","leuco","leuds","leugh","levas","levee","leves","levin","levis","lewis","lexes","lexis","lezes","lezza","lezzo","lezzy","liana","liane","liang","liard","liars","liart","liber","libor","libra","libre","libri","licet","lichi","licht","licit","licks","lidar","lidos","liefs","liens","liers","lieus","lieve","lifer","lifes","lifey","lifts","ligan","liger","ligge","ligne","liked","liker","likes","likin","lills","lilos","lilts","lilty","liman","limas","limax","limba","limbi","limbs","limby","limed","limen","limes","limey","limma","limns","limos","limpa","limps","linac","linch","linds","lindy","lined","lines","liney","linga","lings","lingy","linin","links","linky","linns","linny","linos","lints","linty","linum","linux","lions","lipas","lipes","lipin","lipos","lippy","liras","lirks","lirot","lises","lisks","lisle","lisps","lists","litai","litas","lited","litem","liter","lites","litho","liths","litie","litre","lived","liven","lives","livor","livre","liwaa","liwas","llano","loach","loads","loafs","loams","loans","loast","loave","lobar","lobed","lobes","lobos","lobus","loche","lochs","lochy","locie","locis","locks","locky","locos","locum","loden","lodes","loess","lofts","logan","loges","loggy","logia","logie","logoi","logon","logos","lohan","loids","loins","loipe","loirs","lokes","lokey","lokum","lolas","loled","lollo","lolls","lolly","lolog","lolos","lomas","lomed","lomes","loner","longa","longe","longs","looby","looed","looey","loofa","loofs","looie","looks","looky","looms","loons","loony","loops","loord","loots","loped","loper","lopes","loppy","loral","loran","lords","lordy","lorel","lores","loric","loris","losed","losel","losen","loses","lossy","lotah","lotas","lotes","lotic","lotos","lotsa","lotta","lotte","lotto","lotus","loued","lough","louie","louis","louma","lound","louns","loupe","loups","loure","lours","loury","louts","lovat","loved","lovee","loves","lovey","lovie","lowan","lowed","lowen","lowes","lownd","lowne","lowns","lowps","lowry","lowse","lowth","lowts","loxed","loxes","lozen","luach","luaus","lubed","lubes","lubra","luces","lucks","lucre","ludes","ludic","ludos","luffa","luffs","luged","luger","luges","lulls","lulus","lumas","lumbi","lumme","lummy","lumps","lunas","lunes","lunet","lungi","lungs","lunks","lunts","lupin","lured","lurer","lures","lurex","lurgi","lurgy","lurks","lurry","lurve","luser","lushy","lusks","lusts","lusus","lutea","luted","luter","lutes","luvvy","luxed","luxer","luxes","lweis","lyams","lyard","lyart","lyase","lycea","lycee","lycra","lymes","lynch","lynes","lyres","lysed","lyses","lysin","lysis","lysol","lyssa","lyted","lytes","lythe","lytic","lytta","maaed","maare","maars","maban","mabes","macas","macca","maced","macer","maces","mache","machi","machs","macka","macks","macle","macon","macte","madal","madar","maddy","madge","madid","mados","madre","maedi","maerl","mafic","mafts","magas","mages","maggs","magna","magot","magus","mahal","mahem","mahis","mahoe","mahrs","mahua","mahwa","maids","maiko","maiks","maile","maill","mailo","mails","maims","mains","maire","mairs","maise","maist","majas","majat","majoe","majos","makaf","makai","makan","makar","makee","makes","makie","makis","makos","malae","malai","malam","malar","malas","malax","maleo","males","malic","malik","malis","malky","malls","malms","malmy","malts","malty","malus","malva","malwa","mamak","mamas","mamba","mambu","mamee","mamey","mamie","mamil","manas","manat","mandi","mands","mandy","maneb","maned","maneh","manes","manet","mangi","mangs","manie","manis","manks","manky","manna","manny","manoa","manos","manse","manso","manta","mante","manto","mants","manty","manul","manus","manzo","mapau","mapes","mapou","mappy","maqam","maqui","marae","marah","maral","maran","maras","maray","marcs","mards","mardy","mares","marga","marge","margo","margs","maria","marid","maril","marka","marks","marle","marls","marly","marma","marms","maron","maror","marra","marri","marse","marts","marua","marvy","masas","mased","maser","mases","masha","mashy","masks","massa","massy","masts","masty","masur","masus","masut","matai","mated","mater","mates","mathe","maths","matin","matlo","matra","matsu","matte","matts","matty","matza","matzo","mauby","mauds","mauka","maula","mauls","maums","maumy","maund","maunt","mauri","mausy","mauts","mauvy","mauzy","maven","mavie","mavin","mavis","mawed","mawks","mawky","mawla","mawns","mawps","mawrs","maxed","maxes","maxis","mayan","mayas","mayed","mayos","mayst","mazac","mazak","mazar","mazas","mazed","mazel","mazer","mazes","mazet","mazey","mazut","mbari","mbars","mbila","mbira","mbret","mbube","mbuga","meads","meake","meaks","meals","meane","means","meany","meare","mease","meath","meats","mebbe","mebos","mecha","mechs","mecks","mecum","medii","medin","medle","meech","meeds","meeja","meeps","meers","meets","meffs","meids","meiko","meils","meins","meint","meiny","meism","meith","mekka","melam","melas","melba","melch","melds","meles","melic","melik","mells","meloe","melos","melts","melty","memes","memic","memos","menad","mence","mends","mened","menes","menge","mengs","menil","mensa","mense","mensh","menta","mento","ments","menus","meous","meows","merch","mercs","merde","merds","mered","merel","merer","meres","meril","meris","merks","merle","merls","merse","mersk","mesad","mesal","mesas","mesca","mesel","mesem","meses","meshy","mesia","mesic","mesne","meson","messy","mesto","mesyl","metas","meted","meteg","metel","metes","methi","metho","meths","methy","metic","metif","metis","metol","metre","metta","meums","meuse","meved","meves","mewed","mewls","meynt","mezes","mezza","mezze","mezzo","mgals","mhorr","miais","miaou","miaow","miasm","miaul","micas","miche","michi","micht","micks","micky","micos","micra","middy","midgy","midis","miens","mieux","mieve","miffs","miffy","mifty","miggs","migma","migod","mihas","mihis","mikan","miked","mikes","mikos","mikra","mikva","milch","milds","miler","miles","milfs","milia","milko","milks","mille","mills","milly","milor","milos","milpa","milts","milty","miltz","mimed","mimeo","mimer","mimes","mimis","mimsy","minae","minar","minas","mincy","mindi","minds","mined","mines","minge","mingi","mings","mingy","minis","minke","minks","minny","minos","minse","mints","minxy","miraa","mirah","mirch","mired","mires","mirex","mirid","mirin","mirkn","mirks","mirky","mirls","mirly","miros","mirrl","mirrs","mirvs","mirza","misal","misch","misdo","mises","misgo","misky","misls","misos","missa","misto","mists","misty","mitas","mitch","miter","mites","mitey","mitie","mitis","mitre","mitry","mitta","mitts","mivey","mivvy","mixed","mixen","mixer","mixes","mixie","mixis","mixte","mixup","miyas","mizen","mizes","mizzy","mmkay","mneme","moais","moaky","moals","moana","moans","moany","moars","moats","mobby","mobed","mobee","mobes","mobey","mobie","moble","mobos","mocap","mochi","mochs","mochy","mocks","mocky","mocos","mocus","moder","modes","modge","modii","modin","modoc","modom","modus","moeni","moers","mofos","mogar","mogas","moggy","mogos","mogra","mogue","mohar","mohel","mohos","mohrs","mohua","mohur","moile","moils","moira","moire","moits","moity","mojos","moker","mokes","mokey","mokis","mokky","mokos","mokus","molal","molas","molds","moled","moler","moles","moley","molie","molla","molle","mollo","molls","molly","moloi","molos","molto","molts","molue","molvi","molys","momes","momie","momma","momme","mommy","momos","mompe","momus","monad","monal","monas","monde","mondo","moner","mongo","mongs","monic","monie","monks","monos","monpe","monte","monty","moobs","mooch","moods","mooed","mooey","mooks","moola","mooli","mools","mooly","moong","mooni","moons","moony","moops","moors","moory","mooth","moots","moove","moped","moper","mopes","mopey","moppy","mopsy","mopus","morae","morah","moran","moras","morat","moray","moree","morel","mores","morgy","moria","morin","mormo","morna","morne","morns","moror","morra","morro","morse","morts","moruk","mosed","moses","mosey","mosks","mosso","moste","mosto","mosts","moted","moten","motes","motet","motey","moths","mothy","motis","moton","motte","motts","motty","motus","motza","mouch","moues","moufs","mould","moule","mouls","mouly","moups","moust","mousy","moved","moves","mowas","mowed","mowie","mowra","moxas","moxie","moyas","moyle","moyls","mozed","mozes","mozos","mpret","mrads","msasa","mtepe","mucho","mucic","mucid","mucin","mucko","mucks","mucor","mucro","mudar","mudge","mudif","mudim","mudir","mudra","muffs","muffy","mufti","mugga","muggs","muggy","mugho","mugil","mugos","muhly","muids","muils","muirs","muiry","muist","mujik","mukim","mukti","mulai","mulct","muled","mules","muley","mulga","mulie","mulla","mulls","mulse","mulsh","mumbo","mumms","mumph","mumps","mumsy","mumus","munds","mundu","munga","munge","mungi","mungo","mungs","mungy","munia","munis","munja","munjs","munts","muntu","muons","muras","mured","mures","murex","murgh","murgi","murid","murks","murls","murly","murra","murre","murri","murrs","murry","murth","murti","muruk","murva","musar","musca","mused","musee","muser","muses","muset","musha","musit","musks","musos","musse","mussy","musta","musth","musts","mutas","mutch","muted","muter","mutes","mutha","mutic","mutis","muton","mutti","mutts","mutum","muvva","muxed","muxes","muzak","muzzy","mvula","mvule","mvuli","myall","myals","mylar","mynah","mynas","myoid","myoma","myons","myope","myops","myopy","mysid","mysie","mythi","myths","mythy","myxos","mzees","naams","naans","naats","nabam","nabby","nabes","nabis","nabks","nabla","nabob","nache","nacho","nacre","nadas","naeve","naevi","naffs","nagar","nagas","nages","naggy","nagor","nahal","naiad","naibs","naice","naids","naieo","naifs","naiks","nails","naily","nains","naios","naira","nairu","najib","nakas","naked","naker","nakfa","nalas","naled","nalla","namad","namak","namaz","named","namer","names","namma","namus","nanas","nance","nancy","nandu","nanna","nanos","nante","nanti","nanto","nants","nanty","nanua","napas","naped","napes","napoh","napoo","nappa","nappe","nappy","naras","narco","narcs","nards","nares","naric","naris","narks","narky","narod","narra","narre","nashi","nasho","nasis","nason","nasus","natak","natch","nates","natis","natto","natty","natya","nauch","naunt","navar","naved","naves","navew","navvy","nawab","nawal","nazar","nazes","nazir","nazis","nazzy","nduja","neafe","neals","neant","neaps","nears","neath","neato","neats","nebby","nebek","nebel","neche","necks","neddy","neebs","needs","neefs","neeld","neele","neemb","neems","neeps","neese","neeze","nefie","negri","negro","negus","neifs","neist","neive","nelia","nelis","nelly","nemas","nemic","nemns","nempt","nenes","nenta","neons","neosa","neoza","neper","nepit","neral","neram","nerds","nerfs","nerka","nerks","nerol","nerts","nertz","nervy","neski","nests","nesty","netas","netes","netop","netta","netts","netty","neuks","neume","neums","nevel","neves","nevis","nevus","nevvy","newbs","newed","newel","newie","newsy","newts","nexal","nexin","nexts","nexum","nexus","ngaio","ngaka","ngana","ngapi","ngati","ngege","ngoma","ngoni","ngram","ngwee","nibby","nicad","niced","nicey","nicht","nicks","nicky","nicol","nidal","nided","nides","nidor","nidus","niefs","niess","nieve","nifes","niffs","niffy","nifle","nifty","niger","nigga","nighs","nigre","nigua","nihil","nikab","nikah","nikau","nilas","nills","nimbi","nimbs","nimby","nimps","niner","nines","ninon","ninta","niopo","nioza","nipas","nipet","nippy","niqab","nirls","nirly","nisei","nisin","nisse","nisus","nital","niter","nites","nitid","niton","nitre","nitro","nitry","nitta","nitto","nitty","nival","nivas","nivel","nixed","nixer","nixes","nixie","nizam","njirl","nkosi","nmoli","nmols","noahs","nobby","nocks","nodal","noddy","noded","nodes","nodum","nodus","noels","noema","noeme","nogal","noggs","noggy","nohow","noias","noils","noily","noint","noire","noirs","nokes","noles","nolle","nolls","nolos","nomas","nomen","nomes","nomic","nomoi","nomos","nonan","nonas","nonce","noncy","nonda","nondo","nones","nonet","nongs","nonic","nonis","nonna","nonno","nonny","nonyl","noobs","noois","nooit","nooks","nooky","noone","noons","noops","noove","nopal","noria","norie","noris","norks","norma","norms","nosed","noser","noses","noshi","nosir","notal","notam","noted","noter","notes","notum","nougs","nouja","nould","noule","nouls","nouns","nouny","noups","noust","novae","novas","novia","novio","novum","noway","nowds","nowed","nowls","nowts","nowty","noxal","noxas","noxes","noyau","noyed","noyes","nrtta","nrtya","nsima","nubby","nubia","nucha","nucin","nuddy","nuder","nudes","nudgy","nudie","nudzh","nuevo","nuffs","nugae","nujol","nuked","nukes","nulla","nullo","nulls","nully","numbs","numen","nummy","numps","nunks","nunky","nunny","nunus","nuque","nurds","nurdy","nurls","nurrs","nurts","nurtz","nused","nuses","nutso","nutsy","nyaff","nyala","nyams","nying","nyong","nyssa","nyung","nyuse","nyuze","oafos","oaked","oaker","oakum","oared","oarer","oasal","oases","oasis","oasts","oaten","oater","oaths","oaves","obang","obbos","obeah","obeli","obeys","obias","obied","obiit","obits","objet","oboes","obole","oboli","obols","occam","ocher","oches","ochre","ochry","ocker","ocote","ocrea","octad","octan","octas","octic","octli","octyl","oculi","odahs","odals","odeon","odeum","odism","odist","odium","odoom","odors","odour","odums","odyle","odyls","ofays","offed","offie","oflag","ofter","ofuro","ogams","ogeed","ogees","oggin","ogham","ogive","ogled","ogler","ogles","ogmic","ogres","ohelo","ohias","ohing","ohmic","ohone","oicks","oidia","oiled","oiler","oilet","oinks","oints","oiran","ojime","okapi","okays","okehs","okies","oking","okole","okras","okrug","oktas","olate","oldie","oldly","olehs","oleic","olein","olent","oleos","oleum","oleyl","oligo","olios","oliva","ollas","ollav","oller","ollie","ology","olona","olpae","olpes","omasa","omber","ombus","omdah","omdas","omdda","omdeh","omees","omens","omers","omiai","omits","omlah","ommel","ommin","omnes","omovs","omrah","omuls","oncer","onces","oncet","oncus","ondes","ondol","onely","oners","onery","ongon","onium","onkus","onlap","onlay","onmun","onned","onsen","ontal","ontic","ooaas","oobit","oohed","ooids","oojah","oomph","oonts","oopak","ooped","oopsy","oorie","ooses","ootid","ooyah","oozed","oozes","oozie","oozle","opahs","opals","opens","opepe","opery","opgaf","opihi","oping","oppos","opsat","opsin","opsit","opted","opter","opzit","orach","oracy","orals","orang","orans","orant","orate","orbat","orbed","orbic","orcas","orcin","ordie","ordos","oread","orfes","orful","orgia","orgic","orgue","oribi","oriel","origo","orixa","orles","orlon","orlop","ormer","ornee","ornis","orped","orpin","orris","ortet","ortho","orval","orzos","osars","oscar","osetr","oseys","oshac","osier","oskin","oslin","osmic","osmol","osone","ossia","ostia","otaku","otary","othyl","otium","ottar","ottos","oubit","ouche","oucht","oueds","ouens","ouija","oulks","oumas","oundy","oupas","ouped","ouphe","ouphs","ourey","ourie","ousel","ousia","ousts","outby","outed","outen","outie","outre","outro","outta","ouzel","ouzos","ovals","ovels","ovens","overs","ovism","ovist","ovoli","ovolo","ovule","oware","owari","owche","owers","owies","owled","owler","owlet","owned","ownio","owres","owrie","owsen","oxbow","oxeas","oxers","oxeye","oxids","oxies","oxime","oxims","oxine","oxlip","oxman","oxmen","oxter","oyama","oyers","ozeki","ozena","ozzie","paaho","paals","paans","pacai","pacas","pacay","paced","pacer","paces","pacey","pacha","packs","packy","pacos","pacta","pacts","padam","padas","paddo","padis","padle","padma","padou","padre","padri","paean","paedo","paeon","paged","pager","pages","pagle","pagne","pagod","pagri","pahit","pahos","pahus","paiks","pails","pains","paipe","paips","paire","pairs","paisa","paise","pakay","pakka","pakki","pakua","pakul","palak","palar","palas","palay","palea","paled","pales","palet","palis","palki","palla","palls","pallu","pally","palms","palmy","palpi","palps","palsa","palus","pamby","pampa","panax","pance","panch","panda","pands","pandy","paned","panes","panga","pangs","panim","panir","panko","panks","panna","panne","panni","panny","panto","pants","panty","paoli","paolo","papad","papas","papaw","papes","papey","pappi","pappy","papri","parae","paras","parch","parcs","pardi","pards","pardy","pared","paren","pareo","pares","pareu","parev","parge","pargo","parid","paris","parki","parks","parky","parle","parly","parma","parmo","parms","parol","parps","parra","parrs","parte","parti","parts","parve","parvo","pasag","pasar","pasch","paseo","pases","pasha","pashm","paska","pasmo","paspy","passe","passu","pasts","patas","pated","patee","patel","paten","pater","pates","paths","patia","patin","patka","patly","patta","patte","pattu","patus","pauas","pauls","pauxi","pavan","pavas","paved","paven","paver","paves","pavid","pavie","pavin","pavis","pavon","pavvy","pawas","pawaw","pawed","pawer","pawks","pawky","pawls","pawns","paxes","payed","payor","paysd","peage","peags","peake","peaks","peaky","peals","peans","peare","pears","peart","pease","peasy","peats","peaty","peavy","peaze","pebas","pechs","pecia","pecke","pecks","pecky","pects","pedes","pedis","pedon","pedos","pedro","peece","peeks","peeky","peels","peely","peens","peent","peeoy","peepe","peeps","peepy","peers","peery","peeve","peevo","peggy","peghs","pegma","pegos","peine","peins","peise","peisy","peize","pekan","pekau","pekea","pekes","pekid","pekin","pekoe","pelas","pelau","pelch","peles","pelfs","pells","pelma","pelog","pelon","pelsh","pelta","pelts","pelus","pends","pendu","pened","penes","pengo","penie","penis","penks","penna","penni","pense","pensy","pents","peola","peons","peony","pepla","peple","pepon","pepos","peppy","pepsi","pequi","perae","perai","perce","percs","perdu","perdy","perea","peres","perfs","peris","perks","perle","perls","perms","permy","perne","perns","perog","perps","perry","perse","persp","perst","perts","perve","pervo","pervs","pervy","pesch","pesos","pesta","pests","pesty","petar","peter","petit","petos","petre","petri","petti","petto","pewed","pewee","pewit","peyse","pfftt","phage","phang","phare","pharm","phasm","pheer","pheme","phene","pheon","phese","phial","phies","phish","phizz","phlox","phobe","phoca","phono","phons","phooh","phooo","phota","phots","photy","phpht","phubs","phuts","phutu","phwat","phyla","phyle","phyma","phynx","physa","piais","piani","pians","pibal","pical","picas","piccy","picey","pichi","picks","picon","picot","picra","picul","pieds","piend","piers","piert","pieta","piets","piezo","pight","pigly","pigmy","piing","pikas","pikau","piked","pikel","piker","pikes","pikey","pikis","pikul","pilae","pilaf","pilao","pilar","pilau","pilaw","pilch","pilea","piled","pilei","piler","piles","piley","pilin","pilis","pills","pilon","pilow","pilum","pilus","pimas","pimps","pinas","pinax","pince","pinda","pinds","pined","piner","pines","pinga","pinge","pingo","pings","pinko","pinks","pinna","pinny","pinol","pinon","pinot","pinta","pints","pinup","pions","piony","pious","pioye","pioys","pipal","pipas","piped","pipes","pipet","pipid","pipis","pipit","pippy","pipul","piqui","pirai","pirks","pirls","pirns","pirog","pirre","pirri","pirrs","pisco","pises","pisky","pisos","pissy","piste","pitas","piths","piton","pitot","pitso","pitsu","pitta","pittu","piuma","piums","pivos","pixes","piyut","pized","pizer","pizes","plaas","plack","plaga","plage","plaig","planc","planh","plans","plaps","plash","plasm","plast","plats","platt","platy","plaud","plaur","plavs","playa","plays","pleas","plebe","plebs","pleck","pleep","plein","plena","plene","pleno","pleon","plesh","plets","plews","plexi","plica","plies","pligs","plims","pling","plink","plips","plish","ploat","ploce","plock","plods","ploit","plomb","plong","plonk","plook","ploot","plops","plore","plots","plotz","plouk","plout","plows","plowt","ploye","ploys","pluds","plues","pluff","plugs","pluke","plums","plumy","plung","pluot","plups","plute","pluto","pluty","plyer","pneus","poach","poaka","poake","poalo","pobby","poboy","pocan","poche","pocho","pocks","pocky","podal","poddy","podex","podge","podgy","podia","podos","podus","poems","poena","poeps","poete","poets","pogey","pogge","poggy","pogos","pogue","pohed","poilu","poind","poire","pokal","poked","pokes","pokey","pokie","pokit","poled","poler","poles","poley","polio","polis","polje","polks","pollo","polls","polly","polos","polts","polys","pomas","pombe","pomes","pomme","pommy","pomos","pompa","pomps","ponce","poncy","ponds","pondy","pones","poney","ponga","pongo","pongs","pongy","ponks","ponor","ponto","ponts","ponty","ponzu","pooay","poods","pooed","pooey","poofs","poofy","poohs","poohy","pooja","pooka","pooks","pools","pooly","poons","poopa","poops","poopy","poori","poort","poots","pooty","poove","poovy","popes","popia","popos","poppa","popsy","popup","porae","poral","pored","porer","pores","porey","porge","porgy","porin","porks","porky","porno","porns","porny","porta","porte","porth","ports","porty","porus","posca","posed","poses","poset","posey","posho","posol","poste","posts","potae","potai","potch","poted","potes","potin","potoo","potro","potsy","potto","potts","potty","pouce","pouff","poufs","poufy","pouis","pouke","pouks","poule","poulp","poult","poupe","poupt","pours","pousy","pouts","povos","powan","powie","powin","powis","powlt","pownd","powns","powny","powre","powsy","poxed","poxes","poyas","poynt","poyou","poyse","pozzy","praam","prads","prags","prahu","prams","prana","prang","praos","praps","prase","prate","prats","pratt","praty","praus","prays","preak","predy","preed","preem","prees","preif","preke","prems","premy","prent","preon","preop","preps","presa","prese","prest","preta","preux","preve","prexy","preys","prial","prian","pricy","pridy","prief","prier","pries","prigs","prill","prima","primi","primp","prims","primy","pring","prink","prion","prise","priss","prius","proal","proas","probs","proby","prodd","prods","proem","profs","progs","proin","proke","prole","proll","promo","proms","pronk","prook","proot","props","prora","prore","proso","pross","prost","prosy","proto","proul","prowk","prows","proyn","pruno","prunt","pruny","pruta","pryan","pryer","pryse","pseud","pshaw","pshut","psias","psion","psoae","psoai","psoas","psora","psych","psyop","ptish","ptype","pubby","pubco","pubes","pubis","pubsy","pucan","pucer","puces","pucka","pucks","puddy","pudge","pudic","pudor","pudsy","pudus","puers","puffa","puffs","puggy","pugil","puhas","pujah","pujas","pukas","puked","puker","pukes","pukey","pukka","pukus","pulao","pulas","puled","puler","pules","pulik","pulis","pulka","pulks","pulli","pulls","pully","pulmo","pulps","pulus","pulut","pumas","pumie","pumps","pumpy","punas","punce","punga","pungi","pungo","pungs","pungy","punim","punji","punka","punks","punky","punny","punto","punts","punty","pupae","pupal","pupas","puppa","pupus","purao","purau","purda","purdy","pured","pures","purga","purin","puris","purls","puros","purps","purpy","purre","purrs","purry","pursy","purty","puses","pusle","pussy","putas","puter","putid","putin","puton","putos","putti","putto","putts","puttu","putza","puuko","puyas","puzel","puzta","pwned","pyats","pyets","pygal","pyins","pylon","pyned","pynes","pyoid","pyots","pyral","pyran","pyres","pyrex","pyric","pyros","pyrus","pyuff","pyxed","pyxes","pyxie","pyxis","pzazz","qadis","qaids","qajaq","qanat","qapik","qibla","qilas","qipao","qophs","qorma","quabs","quads","quaff","quags","quair","quais","quaky","quale","qualy","quank","quant","quare","quarl","quass","quate","quats","quawk","quaws","quayd","quays","qubit","quean","queck","queek","queem","queme","quena","quern","queso","quete","queyn","queys","queyu","quibs","quich","quids","quies","quiff","quila","quims","quina","quine","quink","quino","quins","quint","quipo","quips","quipu","quire","quirl","quirt","quist","quits","quoad","quods","quoif","quoin","quois","quoit","quoll","quonk","quops","quork","quorl","quouk","quoys","quran","qursh","quyte","raads","raake","rabat","rabic","rabis","raced","races","rache","racks","racon","raddi","raddy","radge","radgy","radif","radix","radon","rafee","raffs","raffy","rafik","rafiq","rafts","rafty","ragas","ragde","raged","ragee","rager","rages","ragga","raggs","raggy","ragis","ragus","rahed","rahui","raiah","raias","raids","raike","raiks","raile","rails","raine","rains","raird","raita","raith","raits","rajas","rajes","raked","rakee","raker","rakes","rakhi","rakia","rakis","rakki","raksi","rakus","rales","ralli","ramal","ramee","rames","ramet","ramie","ramin","ramis","rammy","ramon","ramps","ramse","ramsh","ramus","ranas","rance","rando","rands","raned","ranee","ranes","ranga","rangi","rangs","rangy","ranid","ranis","ranke","ranks","ranns","ranny","ranse","rants","ranty","raped","rapee","raper","rapes","raphe","rapin","rappe","rapso","rared","raree","rares","rarks","rasam","rasas","rased","raser","rases","rasps","rasse","rasta","ratal","ratan","ratas","ratch","rated","ratel","rater","rates","ratha","rathe","raths","ratoo","ratos","ratti","ratus","rauli","rauns","raupo","raved","ravel","raver","raves","ravey","ravin","rawdy","rawer","rawin","rawks","rawly","rawns","raxed","raxes","rayah","rayas","rayed","rayle","rayls","rayne","razai","razed","razee","razer","razes","razet","razoo","readd","reads","reais","reaks","realo","reals","reame","reams","reamy","reans","reaps","reard","rears","reast","reata","reate","reave","rebab","rebbe","rebec","rebid","rebit","rebop","rebud","rebuy","recal","recce","recco","reccy","recep","recit","recks","recon","recta","recte","recti","recto","recue","redan","redds","reddy","reded","redes","redia","redid","redif","redig","redip","redly","redon","redos","redox","redry","redub","redug","redux","redye","reeaf","reech","reede","reeds","reefs","reefy","reeks","reeky","reels","reely","reems","reens","reerd","reest","reeve","reeze","refan","refed","refel","reffo","refis","refix","refly","refry","regar","reges","reget","regex","reggo","regia","regie","regle","regma","regna","regos","regot","regur","rehem","reifs","reify","reiki","reiks","reine","reing","reink","reins","reird","reist","reive","rejas","rejig","rejon","reked","rekes","rekey","relet","relie","relit","rello","relos","reman","remap","remen","remet","remex","remix","remou","renay","rends","rendu","reney","renga","rengs","renig","renin","renks","renne","renos","rente","rents","reoil","reorg","repas","repat","repeg","repen","repin","repla","repos","repot","repps","repro","repun","reput","reran","rerig","resam","resat","resaw","resay","resee","reses","resew","resid","resit","resod","resol","resow","resto","rests","resty","resue","resus","retag","retam","retax","retem","retia","retie","retin","retip","retox","reune","reups","revet","revie","revow","rewan","rewax","rewed","rewet","rewin","rewon","rewth","rexes","rezes","rhabd","rheas","rheid","rheme","rheum","rhies","rhime","rhine","rhody","rhomb","rhone","rhumb","rhymy","rhyne","rhyta","riads","rials","riant","riata","riato","ribas","ribby","ribes","riced","ricer","rices","ricey","riche","richt","ricin","ricks","rides","ridgy","ridic","riels","riems","rieve","rifer","riffs","riffy","rifte","rifts","rifty","riggs","rigmo","rigol","rikka","rikwa","riled","riles","riley","rille","rills","rilly","rimae","rimed","rimer","rimes","rimon","rimus","rince","rinds","rindy","rines","ringe","rings","ringy","rinks","rioja","rione","riots","rioty","riped","ripes","ripps","riqqs","rises","rishi","risks","risps","rists","risus","rites","rithe","ritts","ritzy","rivas","rived","rivel","riven","rives","riyal","rizas","roads","roady","roake","roaky","roams","roans","roany","roars","roary","roate","robbo","robed","rober","robes","roble","robug","robur","roche","rocks","roded","rodes","rodny","roers","rogan","roguy","rohan","rohes","rohun","rohus","roids","roils","roily","roins","roist","rojak","rojis","roked","roker","rokes","rokey","rokos","rolag","roleo","roles","rolfs","rolls","rolly","romal","roman","romeo","romer","romps","rompu","rompy","ronde","rondo","roneo","rones","ronin","ronne","ronte","ronts","ronuk","roods","roofs","roofy","rooks","rooky","rooms","roons","roops","roopy","roosa","roose","roots","rooty","roped","roper","ropes","ropey","roque","roral","rores","roric","rorid","rorie","rorts","rorty","rosal","rosco","rosed","roses","roset","rosha","roshi","rosin","rosit","rosps","rossa","rosso","rosti","rosts","rotal","rotan","rotas","rotch","roted","rotes","rotis","rotls","roton","rotos","rotta","rotte","rotto","rotty","rouen","roues","rouet","roufs","rougy","rouks","rouky","roule","rouls","roums","roups","roupy","roust","routh","routs","roved","roven","roves","rowan","rowed","rowel","rowen","rowet","rowie","rowme","rownd","rowns","rowth","rowts","royet","royne","royst","rozes","rozet","rozit","ruach","ruana","rubai","ruban","rubby","rubel","rubes","rubin","rubio","ruble","rubli","rubor","rubus","ruche","ruchy","rucks","rudas","rudds","rudes","rudie","rudis","rueda","ruers","ruffe","ruffs","ruffy","rufus","rugae","rugal","rugas","ruggy","ruice","ruing","ruins","rukhs","ruled","rules","rully","rumal","rumbo","rumen","rumes","rumly","rummy","rumpo","rumps","rumpy","runce","runch","runds","runed","runer","runes","rungs","runic","runny","runos","runts","runty","runup","ruote","rupia","rurps","rurus","rusas","ruses","rushy","rusks","rusky","rusma","russe","rusts","ruths","rutin","rutty","ruvid","ryals","rybat","ryiji","ryijy","ryked","rykes","rymer","rymme","rynds","ryoti","ryots","ryper","rypin","rythe","ryugi","saags","sabal","sabed","saber","sabes","sabha","sabin","sabir","sabji","sable","sabos","sabot","sabra","sabre","sabzi","sacks","sacra","sacre","saddo","saddy","sades","sadhe","sadhu","sadic","sadis","sados","sadza","saeta","safed","safes","sagar","sagas","sager","sages","saggy","sagos","sagum","sahab","saheb","sahib","saice","saick","saics","saids","saiga","sails","saims","saine","sains","sairs","saist","saith","sajou","sakai","saker","sakes","sakia","sakis","sakti","salal","salas","salat","salep","sales","salet","salic","salis","salix","salle","salmi","salol","salop","salpa","salps","salse","salto","salts","salud","salue","salut","saman","samas","samba","sambo","samek","samel","samen","sames","samey","samfi","samfu","sammy","sampi","samps","sanad","sands","saned","sanes","sanga","sangh","sango","sangs","sanko","sansa","santo","sants","saola","sapan","sapid","sapor","saran","sards","sared","saree","sarge","sargo","sarin","sarir","saris","sarks","sarky","sarod","saros","sarus","sarvo","saser","sasin","sasse","satai","satay","sated","satem","sater","sates","satis","sauba","sauch","saugh","sauls","sault","saunf","saunt","saury","sauts","sauve","saved","saver","saves","savey","savin","sawah","sawed","sawer","saxes","sayas","sayed","sayee","sayer","sayid","sayne","sayon","sayst","sazes","scabs","scads","scaff","scags","scail","scala","scall","scams","scand","scans","scapa","scape","scapi","scarp","scars","scart","scath","scats","scatt","scaud","scaup","scaur","scaws","sceat","scena","scend","schav","schif","schmo","schul","schwa","scifi","scind","scire","sclim","scobe","scody","scogs","scoog","scoot","scopa","scops","scorp","scote","scots","scoug","scoup","scowp","scows","scrab","scrae","scrag","scran","scrat","scraw","scray","scrim","scrip","scrob","scrod","scrog","scroo","scrow","scudi","scudo","scuds","scuff","scuft","scugs","sculk","scull","sculp","sculs","scums","scups","scurf","scurs","scuse","scuta","scute","scuts","scuzz","scyes","sdayn","sdein","seals","seame","seams","seamy","seans","seare","sears","sease","seats","seaze","sebum","secco","sechs","sects","seder","sedes","sedge","sedgy","sedum","seeds","seeks","seeld","seels","seely","seems","seeps","seepy","seers","sefer","segar","segas","segni","segno","segol","segos","sehri","seifs","seils","seine","seirs","seise","seism","seity","seiza","sekos","sekts","selah","seles","selfs","selfy","selky","sella","selle","sells","selva","semas","semee","semes","semie","semis","senas","sends","senes","senex","sengi","senna","senor","sensa","sensi","sensu","sente","senti","sents","senvy","senza","sepad","sepal","sepic","sepoy","seppo","septa","septs","serac","serai","seral","sered","serer","seres","serfs","serge","seria","seric","serin","serir","serks","seron","serow","serra","serre","serrs","serry","servo","sesey","sessa","setae","setal","seter","seths","seton","setts","sevak","sevir","sewan","sewar","sewed","sewel","sewen","sewin","sexed","sexer","sexes","sexor","sexto","sexts","seyen","sezes","shads","shags","shahs","shaka","shako","shakt","shalm","shaly","shama","shams","shand","shans","shaps","sharn","shart","shash","shaul","shawm","shawn","shaws","shaya","shays","shchi","sheaf","sheal","sheas","sheds","sheel","shend","sheng","shent","sheol","sherd","shere","shero","shets","sheva","shewn","shews","shiai","shiel","shier","shies","shill","shily","shims","shins","shiok","ships","shirr","shirs","shish","shiso","shist","shite","shits","shiur","shiva","shive","shivs","shlep","shlub","shmek","shmoe","shoat","shoed","shoer","shoes","shogi","shogs","shoji","shojo","shola","shonk","shool","shoon","shoos","shope","shops","shorl","shote","shots","shott","shoud","showd","shows","shoyu","shred","shris","shrow","shtar","shtik","shtum","shtup","shuba","shule","shuln","shuls","shuns","shura","shute","shuts","shwas","shyer","sials","sibbs","sibia","sibyl","sices","sicht","sicko","sicks","sicky","sidas","sided","sider","sides","sidey","sidha","sidhe","sidle","sield","siens","sient","sieth","sieur","sifts","sighs","sigil","sigla","signa","signs","sigri","sijos","sikas","siker","sikes","silds","siled","silen","siler","siles","silex","silks","sills","silos","silts","silty","silva","simar","simas","simba","simis","simps","simul","sinds","sined","sines","sings","sinhs","sinks","sinky","sinsi","sinus","siped","sipes","sippy","sired","siree","sires","sirih","siris","siroc","sirra","sirup","sisal","sises","sista","sists","sitar","sitch","sited","sites","sithe","sitka","situp","situs","siver","sixer","sixes","sixmo","sixte","sizar","sized","sizel","sizer","sizes","skags","skail","skald","skank","skarn","skart","skats","skatt","skaws","skean","skear","skeds","skeed","skeef","skeen","skeer","skees","skeet","skeev","skeez","skegg","skegs","skein","skelf","skell","skelm","skelp","skene","skens","skeos","skeps","skerm","skers","skets","skews","skids","skied","skies","skiey","skimo","skims","skink","skins","skint","skios","skips","skirl","skirr","skite","skits","skive","skivy","sklim","skoal","skobe","skody","skoff","skofs","skogs","skols","skool","skort","skosh","skran","skrik","skroo","skuas","skugs","skyed","skyer","skyey","skyfs","skyre","skyrs","skyte","slabs","slade","slaes","slags","slaid","slake","slams","slane","slank","slaps","slart","slats","slaty","slave","slaws","slays","slebs","sleds","sleer","slews","sleys","slier","slily","slims","slipe","slips","slipt","slish","slits","slive","sloan","slobs","sloes","slogs","sloid","slojd","sloka","slomo","sloom","sloot","slops","slopy","slorm","slots","slove","slows","sloyd","slubb","slubs","slued","slues","sluff","slugs","sluit","slums","slurb","slurs","sluse","sluts","slyer","slype","smaak","smaik","smalm","smalt","smarm","smaze","smeek","smees","smeik","smeke","smerk","smews","smick","smily","smirr","smirs","smits","smize","smogs","smoko","smolt","smoor","smoot","smore","smorg","smout","smowt","smugs","smurs","smush","smuts","snabs","snafu","snags","snaps","snarf","snark","snars","snary","snash","snath","snaws","snead","sneap","snebs","sneck","sneds","sneed","snees","snell","snibs","snick","snied","snies","snift","snigs","snips","snipy","snirt","snits","snive","snobs","snods","snoek","snoep","snogs","snoke","snood","snook","snool","snoot","snots","snowk","snows","snubs","snugs","snush","snyes","soaks","soaps","soare","soars","soave","sobas","socas","soces","socia","socko","socks","socle","sodas","soddy","sodic","sodom","sofar","sofas","softa","softs","softy","soger","sohur","soils","soily","sojas","sojus","sokah","soken","sokes","sokol","solah","solan","solas","solde","soldi","soldo","solds","soled","solei","soler","soles","solon","solos","solum","solus","soman","somas","sonce","sonde","sones","songo","songs","songy","sonly","sonne","sonny","sonse","sonsy","sooey","sooks","sooky","soole","sools","sooms","soops","soote","soots","sophs","sophy","sopor","soppy","sopra","soral","soras","sorbi","sorbo","sorbs","sorda","sordo","sords","sored","soree","sorel","sorer","sores","sorex","sorgo","sorns","sorra","sorta","sorts","sorus","soths","sotol","sotto","souce","souct","sough","souks","souls","souly","soums","soups","soupy","sours","souse","souts","sowar","sowce","sowed","sowff","sowfs","sowle","sowls","sowms","sownd","sowne","sowps","sowse","sowth","soxes","soyas","soyle","soyuz","sozin","spack","spacy","spado","spads","spaed","spaer","spaes","spags","spahi","spail","spain","spait","spake","spald","spale","spall","spalt","spams","spane","spang","spans","spard","spars","spart","spate","spats","spaul","spawl","spaws","spayd","spays","spaza","spazz","speal","spean","speat","specs","spect","speel","speer","speil","speir","speks","speld","spelk","speos","spesh","spets","speug","spews","spewy","spial","spica","spick","spics","spide","spier","spies","spiff","spifs","spiks","spile","spims","spina","spink","spins","spirt","spiry","spits","spitz","spivs","splay","splog","spode","spods","spoom","spoor","spoot","spork","sposa","sposh","sposo","spots","sprad","sprag","sprat","spred","sprew","sprit","sprod","sprog","sprue","sprug","spuds","spued","spuer","spues","spugs","spule","spume","spumy","spurs","sputa","spyal","spyre","squab","squaw","squee","squeg","squid","squit","squiz","srsly","stabs","stade","stags","stagy","staig","stane","stang","stans","staph","staps","starn","starr","stars","stary","stats","statu","staun","staws","stays","stean","stear","stedd","stede","steds","steek","steem","steen","steez","steik","steil","stela","stele","stell","steme","stems","stend","steno","stens","stent","steps","stept","stere","stets","stews","stewy","steys","stich","stied","sties","stilb","stile","stime","stims","stimy","stipa","stipe","stire","stirk","stirp","stirs","stive","stivy","stoae","stoai","stoas","stoat","stobs","stoep","stogs","stogy","stoit","stoln","stoma","stond","stong","stonk","stonn","stook","stoor","stope","stops","stopt","stoss","stots","stott","stoun","stoup","stour","stown","stowp","stows","strad","strae","strag","strak","strep","strew","stria","strig","strim","strop","strow","stroy","strum","stubs","stucs","stude","studs","stull","stulm","stumm","stums","stuns","stupa","stupe","sture","sturt","stush","styed","styes","styli","stylo","styme","stymy","styre","styte","subah","subak","subas","subby","suber","subha","succi","sucks","sucky","sucre","sudan","sudds","sudor","sudsy","suede","suent","suers","suete","suets","suety","sugan","sughs","sugos","suhur","suids","suint","suits","sujee","sukhs","sukis","sukuk","sulci","sulfa","sulfo","sulks","sulls","sulph","sulus","sumis","summa","sumos","sumph","sumps","sunis","sunks","sunna","sunns","sunts","sunup","suona","suped","supes","supra","surah","sural","suras","surat","surds","sured","sures","surfs","surfy","surgy","surra","sused","suses","susus","sutor","sutra","sutta","swabs","swack","swads","swage","swags","swail","swain","swale","swaly","swamy","swang","swank","swans","swaps","swapt","sward","sware","swarf","swart","swats","swayl","sways","sweal","swede","sweed","sweel","sweer","swees","sweir","swelt","swerf","sweys","swies","swigs","swile","swims","swink","swipe","swire","swiss","swith","swits","swive","swizz","swobs","swole","swoll","swoln","swops","swopt","swots","swoun","sybbe","sybil","syboe","sybow","sycee","syces","sycon","syeds","syens","syker","sykes","sylis","sylph","sylva","symar","synch","syncs","synds","syned","synes","synth","syped","sypes","syphs","syrah","syren","sysop","sythe","syver","taals","taata","tabac","taber","tabes","tabid","tabis","tabla","tabls","tabor","tabos","tabun","tabus","tacan","taces","tacet","tache","tachi","tacho","tachs","tacks","tacos","tacts","tadah","taels","tafia","taggy","tagma","tagua","tahas","tahrs","taiga","taigs","taiko","tails","tains","taira","taish","taits","tajes","takas","takes","takhi","takht","takin","takis","takky","talak","talaq","talar","talas","talcs","talcy","talea","taler","tales","talik","talks","talky","talls","talma","talpa","taluk","talus","tamal","tamas","tamed","tames","tamin","tamis","tammy","tamps","tanas","tanga","tangi","tangs","tanhs","tania","tanka","tanks","tanky","tanna","tansu","tansy","tante","tanti","tanto","tanty","tapas","taped","tapen","tapes","tapet","tapis","tappa","tapus","taras","tardo","tards","tared","tares","targa","targe","tarka","tarns","taroc","tarok","taros","tarps","tarre","tarry","tarse","tarsi","tarte","tarts","tarty","tarzy","tasar","tasca","tased","taser","tases","tasks","tassa","tasse","tasso","tasto","tatar","tater","tates","taths","tatie","tatou","tatts","tatus","taube","tauld","tauon","taupe","tauts","tauty","tavah","tavas","taver","tawaf","tawai","tawas","tawed","tawer","tawie","tawse","tawts","taxed","taxer","taxes","taxis","taxol","taxon","taxor","taxus","tayra","tazza","tazze","teade","teads","teaed","teaks","teals","teams","tears","teats","teaze","techs","techy","tecta","tecum","teels","teems","teend","teene","teens","teeny","teers","teets","teffs","teggs","tegua","tegus","tehee","tehrs","teiid","teils","teind","teins","tekke","telae","telco","teles","telex","telia","telic","tells","telly","teloi","telos","temed","temes","tempi","temps","tempt","temse","tench","tends","tendu","tenes","tenge","tenia","tenne","tenno","tenny","tenon","tents","tenty","tenue","tepal","tepas","tepoy","terai","teras","terce","terek","teres","terfe","terfs","terga","terms","terne","terns","terre","terry","terts","terza","tesla","testa","teste","tests","tetes","teths","tetra","tetri","teuch","teugh","tewed","tewel","tewit","texas","texes","texta","texts","thack","thagi","thaim","thale","thali","thana","thane","thang","thans","thanx","tharm","thars","thaws","thawt","thawy","thebe","theca","theed","theek","thees","thegn","theic","thein","thelf","thema","thens","theor","theow","therm","thesp","thete","thews","thewy","thigs","thilk","thill","thine","thins","thiol","thirl","thoft","thole","tholi","thoro","thorp","thots","thous","thowl","thrae","thraw","thrid","thrip","throe","thuds","thugs","thuja","thunk","thurl","thuya","thymi","thymy","tians","tiare","tiars","tical","ticca","ticed","tices","tichy","ticks","ticky","tiddy","tided","tides","tiefs","tiers","tiffs","tifos","tifts","tiges","tigon","tikas","tikes","tikia","tikis","tikka","tilak","tiled","tiler","tiles","tills","tilly","tilth","tilts","timbo","timed","times","timon","timps","tinas","tinct","tinds","tinea","tined","tines","tinge","tings","tinks","tinny","tinto","tints","tinty","tipis","tippy","tipup","tired","tires","tirls","tiros","tirrs","tirth","titar","titas","titch","titer","tithi","titin","titir","titis","titre","titty","titup","tiyin","tiyns","tizes","tizzy","toads","toady","toaze","tocks","tocky","tocos","todde","todea","todos","toeas","toffs","toffy","tofts","tofus","togae","togas","toged","toges","togue","tohos","toidy","toile","toils","toing","toise","toits","toity","tokay","toked","toker","tokes","tokos","tolan","tolar","tolas","toled","toles","tolls","tolly","tolts","tolus","tolyl","toman","tombo","tombs","tomen","tomes","tomia","tomin","tomme","tommy","tomos","tomoz","tondi","tondo","toned","toner","tones","toney","tongs","tonka","tonks","tonne","tonus","tools","tooms","toons","toots","toped","topee","topek","toper","topes","tophe","tophi","tophs","topis","topoi","topos","toppy","toque","torah","toran","toras","torcs","tores","toric","torii","toros","torot","torrs","torse","torsi","torsk","torta","torte","torts","tosas","tosed","toses","toshy","tossy","tosyl","toted","toter","totes","totty","touks","touns","tours","touse","tousy","touts","touze","touzy","towai","towed","towie","towno","towns","towny","towse","towsy","towts","towze","towzy","toyed","toyer","toyon","toyos","tozed","tozes","tozie","trabs","trads","trady","traga","tragi","trags","tragu","traik","trams","trank","tranq","trans","trant","trape","trapo","traps","trapt","trass","trats","tratt","trave","trayf","trays","treck","treed","treen","trees","trefa","treif","treks","trema","trems","tress","trest","trets","trews","treyf","treys","triac","tride","trier","tries","trifa","triff","trigo","trigs","trike","trild","trill","trims","trine","trins","triol","trior","trios","trips","tripy","trist","troad","troak","troat","trock","trode","trods","trogs","trois","troke","tromp","trona","tronc","trone","tronk","trons","trooz","tropo","troth","trots","trows","troys","trued","trues","trugo","trugs","trull","tryer","tryke","tryma","tryps","tsade","tsadi","tsars","tsked","tsuba","tsubo","tuans","tuart","tuath","tubae","tubar","tubas","tubby","tubed","tubes","tucks","tufas","tuffe","tuffs","tufts","tufty","tugra","tuile","tuina","tuism","tuktu","tules","tulpa","tulps","tulsi","tumid","tummy","tumps","tumpy","tunas","tunds","tuned","tuner","tunes","tungs","tunny","tupek","tupik","tuple","tuque","turds","turfs","turfy","turks","turme","turms","turns","turnt","turon","turps","turrs","tushy","tusks","tusky","tutee","tutes","tutti","tutty","tutus","tuxes","tuyer","twaes","twain","twals","twank","twats","tways","tweel","tween","tweep","tweer","twerk","twerp","twier","twigs","twill","twilt","twink","twins","twiny","twire","twirk","twirp","twite","twits","twocs","twoer","twonk","twyer","tyees","tyers","tyiyn","tykes","tyler","tymps","tynde","tyned","tynes","typal","typed","types","typey","typic","typos","typps","typto","tyran","tyred","tyres","tyros","tythe","tzars","ubacs","ubity","udals","udons","udyog","ugali","ugged","uhlan","uhuru","ukase","ulama","ulans","ulema","ulmin","ulmos","ulnad","ulnae","ulnar","ulnas","ulpan","ulvas","ulyie","ulzie","umami","umbel","umber","umble","umbos","umbre","umiac","umiak","umiaq","ummah","ummas","ummed","umped","umphs","umpie","umpty","umrah","umras","unagi","unais","unapt","unarm","unary","unaus","unbag","unban","unbar","unbed","unbid","unbox","uncap","unces","uncia","uncos","uncoy","uncus","undam","undee","undos","undug","uneth","unfix","ungag","unget","ungod","ungot","ungum","unhat","unhip","unica","unios","units","unjam","unked","unket","unkey","unkid","unkut","unlap","unlaw","unlay","unled","unleg","unlet","unlid","unmad","unman","unmew","unmix","unode","unold","unown","unpay","unpeg","unpen","unpin","unply","unpot","unput","unred","unrid","unrig","unrip","unsaw","unsay","unsee","unsew","unsex","unsod","unsub","untag","untax","untin","unwet","unwit","unwon","upbow","upbye","updos","updry","upend","upful","upjet","uplay","upled","uplit","upped","upran","uprun","upsee","upsey","uptak","upter","uptie","uraei","urali","uraos","urare","urari","urase","urate","urbex","urbia","urdee","ureal","ureas","uredo","ureic","ureid","urena","urent","urged","urger","urges","urial","urite","urman","urnal","urned","urped","ursae","ursid","urson","urubu","urupa","urvas","usens","users","useta","usnea","usnic","usque","ustad","uster","usure","usury","uteri","utero","uveal","uveas","uvula","vacas","vacay","vacua","vacui","vacuo","vadas","vaded","vades","vadge","vagal","vagus","vaids","vails","vaire","vairs","vairy","vajra","vakas","vakil","vales","valis","valli","valse","vamps","vampy","vanda","vaned","vanes","vanga","vangs","vants","vaped","vaper","vapes","varan","varas","varda","vardo","vardy","varec","vares","varia","varix","varna","varus","varve","vasal","vases","vasts","vasty","vatas","vatha","vatic","vatje","vatos","vatus","vauch","vaute","vauts","vawte","vaxes","veale","veals","vealy","veena","veeps","veers","veery","vegas","veges","veggo","vegie","vegos","vehme","veils","veily","veins","veiny","velar","velds","veldt","veles","vells","velum","venae","venal","venas","vends","vendu","veney","venge","venin","venti","vents","venus","verba","verbs","verde","verra","verre","verry","versa","verst","verte","verts","vertu","vespa","vesta","vests","vetch","veuve","veves","vexed","vexer","vexes","vexil","vezir","vials","viand","vibed","vibes","vibex","vibey","viced","vices","vichy","vicus","viers","vieux","views","viewy","vifda","viffs","vigas","vigia","vilde","viler","ville","villi","vills","vimen","vinal","vinas","vinca","vined","viner","vines","vinew","vinho","vinic","vinny","vinos","vints","viold","viols","vired","vireo","vires","virga","virge","virgo","virid","virls","virtu","visas","vised","vises","visie","visna","visne","vison","visto","vitae","vitas","vitex","vitro","vitta","vivas","vivat","vivda","viver","vives","vivos","vivre","vizir","vizor","vlast","vleis","vlies","vlogs","voars","vobla","vocab","voces","voddy","vodou","vodun","voema","vogie","voici","voids","voile","voips","volae","volar","voled","voles","volet","volke","volks","volta","volte","volti","volts","volva","volve","vomer","voted","votes","vouge","voulu","vowed","vower","voxel","voxes","vozhd","vraic","vrils","vroom","vrous","vrouw","vrows","vuggs","vuggy","vughs","vughy","vulgo","vulns","vulva","vutty","vygie","waacs","wacke","wacko","wacks","wadas","wadds","waddy","waded","wader","wades","wadge","wadis","wadts","waffs","wafts","waged","wages","wagga","wagyu","wahay","wahey","wahoo","waide","waifs","waift","wails","wains","wairs","waite","waits","wakas","waked","waken","waker","wakes","wakfs","waldo","walds","waled","waler","wales","walie","walis","walks","walla","walls","wally","walty","wamed","wames","wamus","wands","waned","wanes","waney","wangs","wanks","wanky","wanle","wanly","wanna","wanta","wants","wanty","wanze","waqfs","warbs","warby","wards","wared","wares","warez","warks","warms","warns","warps","warre","warst","warts","wases","washi","washy","wasms","wasps","waspy","wasts","watap","watts","wauff","waugh","wauks","waulk","wauls","waurs","waved","waves","wavey","wawas","wawes","wawls","waxed","waxer","waxes","wayed","wazir","wazoo","weald","weals","weamb","weans","wears","webby","weber","wecht","wedel","wedgy","weeds","weeis","weeke","weeks","weels","weems","weens","weeny","weeps","weepy","weest","weete","weets","wefte","wefts","weids","weils","weirs","weise","weize","wekas","welds","welke","welks","welkt","wells","welly","welts","wembs","wench","wends","wenge","wenny","wents","werfs","weros","wersh","wests","wetas","wetly","wexed","wexes","whamo","whams","whang","whaps","whare","whata","whats","whaup","whaur","wheal","whear","wheek","wheen","wheep","wheft","whelk","whelm","whens","whets","whews","wheys","whids","whies","whift","whigs","whilk","whims","whins","whios","whips","whipt","whirr","whirs","whish","whiss","whist","whits","whity","whizz","whomp","whoof","whoot","whops","whore","whorl","whort","whoso","whows","whump","whups","whyda","wicca","wicks","wicky","widdy","wides","wiels","wifed","wifes","wifey","wifie","wifts","wifty","wigan","wigga","wiggy","wikis","wilco","wilds","wiled","wiles","wilga","wilis","wilja","wills","wilts","wimps","winds","wined","wines","winey","winge","wings","wingy","winks","winky","winna","winns","winos","winze","wiped","wiper","wipes","wired","wirer","wires","wirra","wirri","wised","wises","wisha","wisht","wisps","wists","witan","wited","wites","withe","withs","withy","wived","wiver","wives","wizen","wizes","wizzo","woads","woady","woald","wocks","wodge","wodgy","woful","wojus","woker","wokka","wolds","wolfs","wolly","wolve","womas","wombs","womby","womyn","wonga","wongi","wonks","wonky","wonts","woods","wooed","woofs","woofy","woold","wools","woons","woops","woopy","woose","woosh","wootz","words","works","worky","worms","wormy","worts","wowed","wowee","wowse","woxen","wrang","wraps","wrapt","wrast","wrate","wrawl","wrens","wrick","wried","wrier","wries","writs","wroke","wroot","wroth","wryer","wuddy","wudus","wuffs","wulls","wunga","wurst","wuses","wushu","wussy","wuxia","wyled","wyles","wynds","wynns","wyted","wytes","wythe","xebec","xenia","xenic","xenon","xeric","xerox","xerus","xoana","xolos","xrays","xviii","xylan","xylem","xylic","xylol","xylyl","xysti","xysts","yaars","yaass","yabas","yabba","yabby","yacca","yacka","yacks","yadda","yaffs","yager","yages","yagis","yagna","yahoo","yaird","yajna","yakka","yakow","yales","yamen","yampa","yampy","yamun","yandy","yangs","yanks","yapok","yapon","yapps","yappy","yarak","yarco","yards","yarer","yarfa","yarks","yarns","yarra","yarrs","yarta","yarto","yates","yatra","yauds","yauld","yaups","yawed","yawey","yawls","yawns","yawny","yawps","yayas","ybore","yclad","ycled","ycond","ydrad","ydred","yeads","yeahs","yealm","yeans","yeard","years","yecch","yechs","yechy","yedes","yeeds","yeeek","yeesh","yeggs","yelks","yells","yelms","yelps","yelts","yenta","yente","yerba","yerds","yerks","yeses","yesks","yests","yesty","yetis","yetts","yeuch","yeuks","yeuky","yeven","yeves","yewen","yexed","yexes","yfere","yiked","yikes","yills","yince","yipes","yippy","yirds","yirks","yirrs","yirth","yites","yitie","ylems","ylide","ylids","ylike","ylkes","ymolt","ympes","yobbo","yobby","yocks","yodel","yodhs","yodle","yogas","yogee","yoghs","yogic","yogin","yogis","yohah","yohay","yoick","yojan","yokan","yoked","yokeg","yokel","yoker","yokes","yokul","yolks","yolky","yolps","yomim","yomps","yonic","yonis","yonks","yonny","yoofs","yoops","yopos","yoppo","yores","yorga","yorks","yorps","youks","yourn","yours","yourt","youse","yowed","yowes","yowie","yowls","yowsa","yowza","yoyos","yrapt","yrent","yrivd","yrneh","ysame","ytost","yuans","yucas","yucca","yucch","yucko","yucks","yucky","yufts","yugas","yuked","yukes","yukky","yukos","yulan","yules","yummo","yummy","yumps","yupon","yuppy","yurta","yurts","yuzus","zabra","zacks","zaida","zaide","zaidy","zaire","zakat","zamac","zamak","zaman","zambo","zamia","zamis","zanja","zante","zanza","zanze","zappy","zarda","zarfs","zaris","zatis","zawns","zaxes","zayde","zayin","zazen","zeals","zebec","zebub","zebus","zedas","zeera","zeins","zendo","zerda","zerks","zeros","zests","zetas","zexes","zezes","zhomo","zhush","zhuzh","zibet","ziffs","zigan","zikrs","zilas","zilch","zilla","zills","zimbi","zimbs","zinco","zincs","zincy","zineb","zines","zings","zingy","zinke","zinky","zinos","zippo","zippy","ziram","zitis","zitty","zizel","zizit","zlote","zloty","zoaea","zobos","zobus","zocco","zoeae","zoeal","zoeas","zoism","zoist","zokor","zolle","zombi","zonae","zonda","zoned","zoner","zones","zonks","zooea","zooey","zooid","zooks","zooms","zoomy","zoons","zooty","zoppa","zoppo","zoril","zoris","zorro","zorse","zouks","zowee","zowie","zulus","zupan","zupas","zuppa","zurfs","zuzim","zygal","zygon","zymes","zymic","cigar","rebut","sissy","humph","awake","blush","focal","evade","naval","serve","heath","dwarf","model","karma","stink","grade","quiet","bench","abate","feign","major","death","fresh","crust","stool","colon","abase","marry","react","batty","pride","floss","helix","croak","staff","paper","unfed","whelp","trawl","outdo","adobe","crazy","sower","repay","digit","crate","cluck","spike","mimic","pound","maxim","linen","unmet","flesh","booby","forth","first","stand","belly","ivory","seedy","print","yearn","drain","bribe","stout","panel","crass","flume","offal","agree","error","swirl","argue","bleed","delta","flick","totem","wooer","front","shrub","parry","biome","lapel","start","greet","goner","golem","lusty","loopy","round","audit","lying","gamma","labor","islet","civic","forge","corny","moult","basic","salad","agate","spicy","spray","essay","fjord","spend","kebab","guild","aback","motor","alone","hatch","hyper","thumb","dowry","ought","belch","dutch","pilot","tweed","comet","jaunt","enema","steed","abyss","growl","fling","dozen","boozy","erode","world","gouge","click","briar","great","altar","pulpy","blurt","coast","duchy","groin","fixer","group","rogue","badly","smart","pithy","gaudy","chill","heron","vodka","finer","surer","radio","rouge","perch","retch","wrote","clock","tilde","store","prove","bring","solve","cheat","grime","exult","usher","epoch","triad","break","rhino","viral","conic","masse","sonic","vital","trace","using","peach","champ","baton","brake","pluck","craze","gripe","weary","picky","acute","ferry","aside","tapir","troll","unify","rebus","boost","truss","siege","tiger","banal","slump","crank","gorge","query","drink","favor","abbey","tangy","panic","solar","shire","proxy","point","robot","prick","wince","crimp","knoll","sugar","whack","mount","perky","could","wrung","light","those","moist","shard","pleat","aloft","skill","elder","frame","humor","pause","ulcer","ultra","robin","cynic","aroma","caulk","shake","dodge","swill","tacit","other","thorn","trove","bloke","vivid","spill","chant","choke","rupee","nasty","mourn","ahead","brine","cloth","hoard","sweet","month","lapse","watch","today","focus","smelt","tease","cater","movie","saute","allow","renew","their","slosh","purge","chest","depot","epoxy","nymph","found","shall","stove","lowly","snout","trope","fewer","shawl","natal","comma","foray","scare","stair","black","squad","royal","chunk","mince","shame","cheek","ample","flair","foyer","cargo","oxide","plant","olive","inert","askew","heist","shown","zesty","trash","larva","forgo","story","hairy","train","homer","badge","midst","canny","shine","gecko","farce","slung","tipsy","metal","yield","delve","being","scour","glass","gamer","scrap","money","hinge","album","vouch","asset","tiara","crept","bayou","atoll","manor","creak","showy","phase","froth","depth","gloom","flood","trait","girth","piety","goose","float","donor","atone","primo","apron","blown","cacao","loser","input","gloat","awful","brink","smite","beady","rusty","retro","droll","gawky","hutch","pinto","egret","lilac","sever","field","fluff","agape","voice","stead","berth","madam","night","bland","liver","wedge","roomy","wacky","flock","angry","trite","aphid","tryst","midge","power","elope","cinch","motto","stomp","upset","bluff","cramp","quart","coyly","youth","rhyme","buggy","alien","smear","unfit","patty","cling","glean","label","hunky","khaki","poker","gruel","twice","twang","shrug","treat","waste","merit","woven","needy","clown","irony","ruder","gauze","chief","onset","prize","fungi","charm","gully","inter","whoop","taunt","leery","class","theme","lofty","tibia","booze","alpha","thyme","doubt","parer","chute","stick","trice","alike","recap","saint","glory","grate","admit","brisk","soggy","usurp","scald","scorn","leave","twine","sting","bough","marsh","sloth","dandy","vigor","howdy","enjoy","valid","ionic","equal","floor","catch","spade","stein","exist","quirk","denim","grove","spiel","mummy","fault","foggy","flout","carry","sneak","libel","waltz","aptly","piney","inept","aloud","photo","dream","stale","unite","snarl","baker","there","glyph","pooch","hippy","spell","folly","louse","gulch","vault","godly","threw","fleet","grave","inane","shock","crave","spite","valve","skimp","claim","rainy","musty","pique","daddy","quasi","arise","aging","valet","opium","avert","stuck","recut","mulch","genre","plume","rifle","count","incur","total","wrest","mocha","deter","study","lover","safer","rivet","funny","smoke","mound","undue","sedan","pagan","swine","guile","gusty","equip","tough","canoe","chaos","covet","human","udder","lunch","blast","stray","manga","melee","lefty","quick","paste","given","octet","risen","groan","leaky","grind","carve","loose","sadly","spilt","apple","slack","honey","final","sheen","eerie","minty","slick","derby","wharf","spelt","coach","erupt","singe","price","spawn","fairy","jiffy","filmy","stack","chose","sleep","ardor","nanny","niece","woozy","handy","grace","ditto","stank","cream","usual","diode","valor","angle","ninja","muddy","chase","reply","prone","spoil","heart","shade","diner","arson","onion","sleet","dowel","couch","palsy","bowel","smile","evoke","creek","lance","eagle","idiot","siren","built","embed","award","dross","annul","goody","frown","patio","laden","humid","elite","lymph","edify","might","reset","visit","gusto","purse","vapor","crock","write","sunny","loath","chaff","slide","queer","venom","stamp","sorry","still","acorn","aping","pushy","tamer","hater","mania","awoke","brawn","swift","exile","birch","lucky","freer","risky","ghost","plier","lunar","winch","snare","nurse","house","borax","nicer","lurch","exalt","about","savvy","toxin","tunic","pried","inlay","chump","lanky","cress","eater","elude","cycle","kitty","boule","moron","tenet","place","lobby","plush","vigil","index","blink","clung","qualm","croup","clink","juicy","stage","decay","nerve","flier","shaft","crook","clean","china","ridge","vowel","gnome","snuck","icing","spiny","rigor","snail","flown","rabid","prose","thank","poppy","budge","fiber","moldy","dowdy","kneel","track","caddy","quell","dumpy","paler","swore","rebar","scuba","splat","flyer","horny","mason","doing","ozone","amply","molar","ovary","beset","queue","cliff","magic","truce","sport","fritz","edict","twirl","verse","llama","eaten","range","whisk","hovel","rehab","macaw","sigma","spout","verve","sushi","dying","fetid","brain","buddy","thump","scion","candy","chord","basin","march","crowd","arbor","gayly","musky","stain","dally","bless","bravo","stung","title","ruler","kiosk","blond","ennui","layer","fluid","tatty","score","cutie","zebra","barge","matey","bluer","aider","shook","river","privy","betel","frisk","bongo","begun","azure","weave","genie","sound","glove","braid","scope","wryly","rover","assay","ocean","bloom","irate","later","woken","silky","wreck","dwelt","slate","smack","solid","amaze","hazel","wrist","jolly","globe","flint","rouse","civil","vista","relax","cover","alive","beech","jetty","bliss","vocal","often","dolly","eight","joker","since","event","ensue","shunt","diver","poser","worst","sweep","alley","creed","anime","leafy","bosom","dunce","stare","pudgy","waive","choir","stood","spoke","outgo","delay","bilge","ideal","clasp","seize","hotly","laugh","sieve","block","meant","grape","noose","hardy","shied","drawl","daisy","putty","strut","burnt","tulip","crick","idyll","vixen","furor","geeky","cough","naive","shoal","stork","bathe","aunty","check","prime","brass","outer","furry","razor","elect","evict","imply","demur","quota","haven","cavil","swear","crump","dough","gavel","wagon","salon","nudge","harem","pitch","sworn","pupil","excel","stony","cabin","unzip","queen","trout","polyp","earth","storm","until","taper","enter","child","adopt","minor","fatty","husky","brave","filet","slime","glint","tread","steal","regal","guest","every","murky","share","spore","hoist","buxom","inner","otter","dimly","level","sumac","donut","stilt","arena","sheet","scrub","fancy","slimy","pearl","silly","porch","dingo","sepia","amble","shady","bread","friar","reign","dairy","quill","cross","brood","tuber","shear","posit","blank","villa","shank","piggy","freak","which","among","fecal","shell","would","algae","large","rabbi","agony","amuse","bushy","copse","swoon","knife","pouch","ascot","plane","crown","urban","snide","relay","abide","viola","rajah","straw","dilly","crash","amass","third","trick","tutor","woody","blurb","grief","disco","where","sassy","beach","sauna","comic","clued","creep","caste","graze","snuff","frock","gonad","drunk","prong","lurid","steel","halve","buyer","vinyl","utile","smell","adage","worry","tasty","local","trade","finch","ashen","modal","gaunt","clove","enact","adorn","roast","speck","sheik","missy","grunt","snoop","party","touch","mafia","emcee","array","south","vapid","jelly","skulk","angst","tubal","lower","crest","sweat","cyber","adore","tardy","swami","notch","groom","roach","hitch","young","align","ready","frond","strap","puree","realm","venue","swarm","offer","seven","dryer","diary","dryly","drank","acrid","heady","theta","junto","pixie","quoth","bonus","shalt","penne","amend","datum","build","piano","shelf","lodge","suing","rearm","coral","ramen","worth","psalm","infer","overt","mayor","ovoid","glide","usage","poise","randy","chuck","prank","fishy","tooth","ether","drove","idler","swath","stint","while","begat","apply","slang","tarot","radar","credo","aware","canon","shift","timer","bylaw","serum","three","steak","iliac","shirk","blunt","puppy","penal","joist","bunny","shape","beget","wheel","adept","stunt","stole","topaz","chore","fluke","afoot","bloat","bully","dense","caper","sneer","boxer","jumbo","lunge","space","avail","short","slurp","loyal","flirt","pizza","conch","tempo","droop","plate","bible","plunk","afoul","savoy","steep","agile","stake","dwell","knave","beard","arose","motif","smash","broil","glare","shove","baggy","mammy","swamp","along","rugby","wager","quack","squat","snaky","debit","mange","skate","ninth","joust","tramp","spurn","medal","micro","rebel","flank","learn","nadir","maple","comfy","remit","gruff","ester","least","mogul","fetch","cause","oaken","aglow","meaty","gaffe","shyly","racer","prowl","thief","stern","poesy","rocky","tweet","waist","spire","grope","havoc","patsy","truly","forty","deity","uncle","swish","giver","preen","bevel","lemur","draft","slope","annoy","lingo","bleak","ditty","curly","cedar","dirge","grown","horde","drool","shuck","crypt","cumin","stock","gravy","locus","wider","breed","quite","chafe","cache","blimp","deign","fiend","logic","cheap","elide","rigid","false","renal","pence","rowdy","shoot","blaze","envoy","posse","brief","never","abort","mouse","mucky","sulky","fiery","media","trunk","yeast","clear","skunk","scalp","bitty","cider","koala","duvet","segue","creme","super","grill","after","owner","ember","reach","nobly","empty","speed","gipsy","recur","smock","dread","merge","burst","kappa","amity","shaky","hover","carol","snort","synod","faint","haunt","flour","chair","detox","shrew","tense","plied","quark","burly","novel","waxen","stoic","jerky","blitz","beefy","lyric","hussy","towel","quilt","below","bingo","wispy","brash","scone","toast","easel","saucy","value","spice","honor","route","sharp","bawdy","radii","skull","phony","issue","lager","swell","urine","gassy","trial","flora","upper","latch","wight","brick","retry","holly","decal","grass","shack","dogma","mover","defer","sober","optic","crier","vying","nomad","flute","hippo","shark","drier","obese","bugle","tawny","chalk","feast","ruddy","pedal","scarf","cruel","bleat","tidal","slush","semen","windy","dusty","sally","igloo","nerdy","jewel","shone","whale","hymen","abuse","fugue","elbow","crumb","pansy","welsh","syrup","terse","suave","gamut","swung","drake","freed","afire","shirt","grout","oddly","tithe","plaid","dummy","broom","blind","torch","enemy","again","tying","pesky","alter","gazer","noble","ethos","bride","extol","decor","hobby","beast","idiom","utter","these","sixth","alarm","erase","elegy","spunk","piper","scaly","scold","hefty","chick","sooty","canal","whiny","slash","quake","joint","swept","prude","heavy","wield","femme","lasso","maize","shale","screw","spree","smoky","whiff","scent","glade","spent","prism","stoke","riper","orbit","cocoa","guilt","humus","shush","table","smirk","wrong","noisy","alert","shiny","elate","resin","whole","hunch","pixel","polar","hotel","sword","cleat","mango","rumba","puffy","filly","billy","leash","clout","dance","ovate","facet","chili","paint","liner","curio","salty","audio","snake","fable","cloak","navel","spurt","pesto","balmy","flash","unwed","early","churn","weedy","stump","lease","witty","wimpy","spoof","saner","blend","salsa","thick","warty","manic","blare","squib","spoon","probe","crepe","knack","force","debut","order","haste","teeth","agent","widen","icily","slice","ingot","clash","juror","blood","abode","throw","unity","pivot","slept","troop","spare","sewer","parse","morph","cacti","tacky","spool","demon","moody","annex","begin","fuzzy","patch","water","lumpy","admin","omega","limit","tabby","macho","aisle","skiff","basis","plank","verge","botch","crawl","lousy","slain","cubic","raise","wrack","guide","foist","cameo","under","actor","revue","fraud","harpy","scoop","climb","refer","olden","clerk","debar","tally","ethic","cairn","tulle","ghoul","hilly","crude","apart","scale","older","plain","sperm","briny","abbot","rerun","quest","crisp","bound","befit","drawn","suite","itchy","cheer","bagel","guess","broad","axiom","chard","caput","leant","harsh","curse","proud","swing","opine","taste","lupus","gumbo","miner","green","chasm","lipid","topic","armor","brush","crane","mural","abled","habit","bossy","maker","dusky","dizzy","lithe","brook","jazzy","fifty","sense","giant","surly","legal","fatal","flunk","began","prune","small","slant","scoff","torus","ninny","covey","viper","taken","moral","vogue","owing","token","entry","booth","voter","chide","elfin","ebony","neigh","minim","melon","kneed","decoy","voila","ankle","arrow","mushy","tribe","cease","eager","birth","graph","odder","terra","weird","tried","clack","color","rough","weigh","uncut","ladle","strip","craft","minus","dicey","titan","lucid","vicar","dress","ditch","gypsy","pasta","taffy","flame","swoop","aloof","sight","broke","teary","chart","sixty","wordy","sheer","leper","nosey","bulge","savor","clamp","funky","foamy","toxic","brand","plumb","dingy","butte","drill","tripe","bicep","tenor","krill","worse","drama","hyena","think","ratio","cobra","basil","scrum","bused","phone","court","camel","proof","heard","angel","petal","pouty","throb","maybe","fetal","sprig","spine","shout","cadet","macro","dodgy","satyr","rarer","binge","trend","nutty","leapt","amiss","split","myrrh","width","sonar","tower","baron","fever","waver","spark","belie","sloop","expel","smote","baler","above","north","wafer","scant","frill","awash","snack","scowl","frail","drift","limbo","fence","motel","ounce","wreak","revel","talon","prior","knelt","cello","flake","debug","anode","crime","salve","scout","imbue","pinky","stave","vague","chock","fight","video","stone","teach","cleft","frost","prawn","booty","twist","apnea","stiff","plaza","ledge","tweak","board","grant","medic","bacon","cable","brawl","slunk","raspy","forum","drone","women","mucus","boast","toddy","coven","tumor","truer","wrath","stall","steam","axial","purer","daily","trail","niche","mealy","juice","nylon","plump","merry","flail","papal","wheat","berry","cower","erect","brute","leggy","snipe","sinew","skier","penny","jumpy","rally","umbra","scary","modem","gross","avian","greed","satin","tonic","parka","sniff","livid","stark","trump","giddy","reuse","taboo","avoid","quote","devil","liken","gloss","gayer","beret","noise","gland","dealt","sling","rumor","opera","thigh","tonga","flare","wound","white","bulky","etude","horse","circa","paddy","inbox","fizzy","grain","exert","surge","gleam","belle","salvo","crush","fruit","sappy","taker","tract","ovine","spiky","frank","reedy","filth","spasm","heave","mambo","right","clank","trust","lumen","borne","spook","sauce","amber","lathe","carat","corer","dirty","slyly","affix","alloy","taint","sheep","kinky","wooly","mauve","flung","yacht","fried","quail","brunt","grimy","curvy","cagey","rinse","deuce","state","grasp","milky","bison","graft","sandy","baste","flask","hedge","girly","swash","boney","coupe","endow","abhor","welch","blade","tight","geese","miser","mirth","cloud","cabal","leech","close","tenth","pecan","droit","grail","clone","guise","ralph","tango","biddy","smith","mower","payee","serif","drape","fifth","spank","glaze","allot","truck","kayak","virus","testy","tepee","fully","zonal","metro","curry","grand","banjo","axion","bezel","occur","chain","nasal","gooey","filer","brace","allay","pubic","raven","plead","gnash","flaky","munch","dully","eking","thing","slink","hurry","theft","shorn","pygmy","ranch","wring","lemon","shore","mamma","froze","newer","style","moose","antic","drown","vegan","chess","guppy","union","lever","lorry","image","cabby","druid","exact","truth","dopey","spear","cried","chime","crony","stunk","timid","batch","gauge","rotor","crack","curve","latte","witch","bunch","repel","anvil","soapy","meter","broth","madly","dried","scene","known","magma","roost","woman","thong","punch","pasty","downy","knead","whirl","rapid","clang","anger","drive","goofy","email","music","stuff","bleep","rider","mecca","folio","setup","verso","quash","fauna","gummy","happy","newly","fussy","relic","guava","ratty","fudge","femur","chirp","forte","alibi","whine","petty","golly","plait","fleck","felon","gourd","brown","thrum","ficus","stash","decry","wiser","junta","visor","daunt","scree","impel","await","press","whose","turbo","stoop","speak","mangy","eying","inlet","crone","pulse","mossy","staid","hence","pinch","teddy","sully","snore","ripen","snowy","attic","going","leach","mouth","hound","clump","tonal","bigot","peril","piece","blame","haute","spied","undid","intro","basal","rodeo","guard","steer","loamy","scamp","scram","manly","hello","vaunt","organ","feral","knock","extra","condo","adapt","willy","polka","rayon","skirt","faith","torso","match","mercy","tepid","sleek","riser","twixt","peace","flush","catty","login","eject","roger","rival","untie","refit","aorta","adult","judge","rower","artsy","rural","shave","bobby","eclat","fella","gaily","harry","hasty","hydro","liege","octal","ombre","payer","sooth","unset","unlit","vomit","fanny","fetus","butch","stalk","flack","widow","augur"],It=["aback","abase","abate","abbey","abbot","abhor","abide","abled","abode","abort","about","above","abuse","abyss","acorn","acrid","actor","acute","adage","adapt","adept","admin","admit","adobe","adopt","adore","adorn","adult","affix","afire","afoot","afoul","after","again","agape","agate","agent","agile","aging","aglow","agony","agree","ahead","aider","aisle","alarm","album","alert","algae","alibi","alien","align","alike","alive","allay","alley","allot","allow","alloy","aloft","alone","along","aloof","aloud","alpha","altar","alter","amass","amaze","amber","amble","amend","amiss","amity","among","ample","amply","amuse","angel","anger","angle","angry","angst","anime","ankle","annex","annoy","annul","anode","antic","anvil","aorta","apart","aphid","aping","apnea","apple","apply","apron","aptly","arbor","ardor","arena","argue","arise","armor","aroma","arose","array","arrow","arson","artsy","ascot","ashen","aside","askew","assay","asset","atoll","atone","attic","audio","audit","augur","aunty","avail","avert","avian","avoid","await","awake","award","aware","awash","awful","awoke","axial","axiom","axion","azure","bacon","badge","badly","bagel","baggy","baker","baler","balmy","banal","banjo","barge","baron","basal","basic","basil","basin","basis","baste","batch","bathe","baton","batty","bawdy","bayou","beach","beady","beard","beast","beech","beefy","befit","began","begat","beget","begin","begun","being","belch","belie","belle","belly","below","bench","beret","berry","berth","beset","betel","bevel","bezel","bible","bicep","biddy","bigot","bilge","billy","binge","bingo","biome","birch","birth","bison","bitty","black","blade","blame","bland","blank","blare","blast","blaze","bleak","bleat","bleed","bleep","blend","bless","blimp","blind","blink","bliss","blitz","bloat","block","bloke","blond","blood","bloom","blown","bluer","bluff","blunt","blurb","blurt","blush","board","boast","bobby","boney","bongo","bonus","booby","boost","booth","booty","booze","boozy","borax","borne","bosom","bossy","botch","bough","boule","bound","bowel","boxer","brace","braid","brain","brake","brand","brash","brass","brave","bravo","brawl","brawn","bread","break","breed","briar","bribe","brick","bride","brief","brine","bring","brink","briny","brisk","broad","broil","broke","brood","brook","broom","broth","brown","brunt","brush","brute","buddy","budge","buggy","bugle","build","built","bulge","bulky","bully","bunch","bunny","burly","burnt","burst","bused","bushy","butch","butte","buxom","buyer","bylaw","cabal","cabby","cabin","cable","cacao","cache","cacti","caddy","cadet","cagey","cairn","camel","cameo","canal","candy","canny","canoe","canon","caper","caput","carat","cargo","carol","carry","carve","caste","catch","cater","catty","caulk","cause","cavil","cease","cedar","cello","chafe","chaff","chain","chair","chalk","champ","chant","chaos","chard","charm","chart","chase","chasm","cheap","cheat","check","cheek","cheer","chess","chest","chick","chide","chief","child","chili","chill","chime","china","chirp","chock","choir","choke","chord","chore","chose","chuck","chump","chunk","churn","chute","cider","cigar","cinch","circa","civic","civil","clack","claim","clamp","clang","clank","clash","clasp","class","clean","clear","cleat","cleft","clerk","click","cliff","climb","cling","clink","cloak","clock","clone","close","cloth","cloud","clout","clove","clown","cluck","clued","clump","clung","coach","coast","cobra","cocoa","colon","color","comet","comfy","comic","comma","conch","condo","conic","copse","coral","corer","corny","couch","cough","could","count","coupe","court","coven","cover","covet","covey","cower","coyly","crack","craft","cramp","crane","crank","crash","crass","crate","crave","crawl","craze","crazy","creak","cream","credo","creed","creek","creep","creme","crepe","crept","cress","crest","crick","cried","crier","crime","crimp","crisp","croak","crock","crone","crony","crook","cross","croup","crowd","crown","crude","cruel","crumb","crump","crush","crust","crypt","cubic","cumin","curio","curly","curry","curse","curve","curvy","cutie","cyber","cycle","cynic","daddy","daily","dairy","daisy","dally","dance","dandy","datum","daunt","dealt","death","debar","debit","debug","debut","decal","decay","decor","decoy","decry","defer","deign","deity","delay","delta","delve","demon","demur","denim","dense","depot","depth","derby","deter","detox","deuce","devil","diary","dicey","digit","dilly","dimly","diner","dingo","dingy","diode","dirge","dirty","disco","ditch","ditto","ditty","diver","dizzy","dodge","dodgy","dogma","doing","dolly","donor","donut","dopey","doubt","dough","dowdy","dowel","downy","dowry","dozen","draft","drain","drake","drama","drank","drape","drawl","drawn","dread","dream","dress","dried","drier","drift","drill","drink","drive","droit","droll","drone","drool","droop","dross","drove","drown","druid","drunk","dryer","dryly","duchy","dully","dummy","dumpy","dunce","dusky","dusty","dutch","duvet","dwarf","dwell","dwelt","dying","eager","eagle","early","earth","easel","eaten","eater","ebony","eclat","edict","edify","eerie","egret","eight","eject","eking","elate","elbow","elder","elect","elegy","elfin","elide","elite","elope","elude","email","embed","ember","emcee","empty","enact","endow","enema","enemy","enjoy","ennui","ensue","enter","entry","envoy","epoch","epoxy","equal","equip","erase","erect","erode","error","erupt","essay","ester","ether","ethic","ethos","etude","evade","event","every","evict","evoke","exact","exalt","excel","exert","exile","exist","expel","extol","extra","exult","eying","fable","facet","faint","fairy","faith","false","fancy","fanny","farce","fatal","fatty","fault","fauna","favor","feast","fecal","feign","fella","felon","femme","femur","fence","feral","ferry","fetal","fetch","fetid","fetus","fever","fewer","fiber","ficus","field","fiend","fiery","fifth","fifty","fight","filer","filet","filly","filmy","filth","final","finch","finer","first","fishy","fixer","fizzy","fjord","flack","flail","flair","flake","flaky","flame","flank","flare","flash","flask","fleck","fleet","flesh","flick","flier","fling","flint","flirt","float","flock","flood","floor","flora","floss","flour","flout","flown","fluff","fluid","fluke","flume","flung","flunk","flush","flute","flyer","foamy","focal","focus","foggy","foist","folio","folly","foray","force","forge","forgo","forte","forth","forty","forum","found","foyer","frail","frame","frank","fraud","freak","freed","freer","fresh","friar","fried","frill","frisk","fritz","frock","frond","front","frost","froth","frown","froze","fruit","fudge","fugue","fully","fungi","funky","funny","furor","furry","fussy","fuzzy","gaffe","gaily","gamer","gamma","gamut","gassy","gaudy","gauge","gaunt","gauze","gavel","gawky","gayer","gayly","gazer","gecko","geeky","geese","genie","genre","ghost","ghoul","giant","giddy","gipsy","girly","girth","given","giver","glade","gland","glare","glass","glaze","gleam","glean","glide","glint","gloat","globe","gloom","glory","gloss","glove","glyph","gnash","gnome","godly","going","golem","golly","gonad","goner","goody","gooey","goofy","goose","gorge","gouge","gourd","grace","grade","graft","grail","grain","grand","grant","grape","graph","grasp","grass","grate","grave","gravy","graze","great","greed","green","greet","grief","grill","grime","grimy","grind","gripe","groan","groin","groom","grope","gross","group","grout","grove","growl","grown","gruel","gruff","grunt","guard","guava","guess","guest","guide","guild","guile","guilt","guise","gulch","gully","gumbo","gummy","guppy","gusto","gusty","gypsy","habit","hairy","halve","handy","happy","hardy","harem","harpy","harry","harsh","haste","hasty","hatch","hater","haunt","haute","haven","havoc","hazel","heady","heard","heart","heath","heave","heavy","hedge","hefty","heist","helix","hello","hence","heron","hilly","hinge","hippo","hippy","hitch","hoard","hobby","hoist","holly","homer","honey","honor","horde","horny","horse","hotel","hotly","hound","house","hovel","hover","howdy","human","humid","humor","humph","humus","hunch","hunky","hurry","husky","hussy","hutch","hydro","hyena","hymen","hyper","icily","icing","ideal","idiom","idiot","idler","idyll","igloo","iliac","image","imbue","impel","imply","inane","inbox","incur","index","inept","inert","infer","ingot","inlay","inlet","inner","input","inter","intro","ionic","irate","irony","islet","issue","itchy","ivory","jaunt","jazzy","jelly","jerky","jetty","jewel","jiffy","joint","joist","joker","jolly","joust","judge","juice","juicy","jumbo","jumpy","junta","junto","juror","kappa","karma","kayak","kebab","khaki","kinky","kiosk","kitty","knack","knave","knead","kneed","kneel","knelt","knife","knock","knoll","known","koala","krill","label","labor","laden","ladle","lager","lance","lanky","lapel","lapse","large","larva","lasso","latch","later","lathe","latte","laugh","layer","leach","leafy","leaky","leant","leapt","learn","lease","leash","least","leave","ledge","leech","leery","lefty","legal","leggy","lemon","lemur","leper","level","lever","libel","liege","light","liken","lilac","limbo","limit","linen","liner","lingo","lipid","lithe","liver","livid","llama","loamy","loath","lobby","local","locus","lodge","lofty","logic","login","loopy","loose","lorry","loser","louse","lousy","lover","lower","lowly","loyal","lucid","lucky","lumen","lumpy","lunar","lunch","lunge","lupus","lurch","lurid","lusty","lying","lymph","lyric","macaw","macho","macro","madam","madly","mafia","magic","magma","maize","major","maker","mambo","mamma","mammy","manga","mange","mango","mangy","mania","manic","manly","manor","maple","march","marry","marsh","mason","masse","match","matey","mauve","maxim","maybe","mayor","mealy","meant","meaty","mecca","medal","media","medic","melee","melon","mercy","merge","merit","merry","metal","meter","metro","micro","midge","midst","might","milky","mimic","mince","miner","minim","minor","minty","minus","mirth","miser","missy","mocha","modal","model","modem","mogul","moist","molar","moldy","money","month","moody","moose","moral","moron","morph","mossy","motel","motif","motor","motto","moult","mound","mount","mourn","mouse","mouth","mover","movie","mower","mucky","mucus","muddy","mulch","mummy","munch","mural","murky","mushy","music","musky","musty","myrrh","nadir","naive","nanny","nasal","nasty","natal","naval","navel","needy","neigh","nerdy","nerve","never","newer","newly","nicer","niche","niece","night","ninja","ninny","ninth","noble","nobly","noise","noisy","nomad","noose","north","nosey","notch","novel","nudge","nurse","nutty","nylon","nymph","oaken","obese","occur","ocean","octal","octet","odder","oddly","offal","offer","often","olden","older","olive","ombre","omega","onion","onset","opera","opine","opium","optic","orbit","order","organ","other","otter","ought","ounce","outdo","outer","outgo","ovary","ovate","overt","ovine","ovoid","owing","owner","oxide","ozone","paddy","pagan","paint","paler","palsy","panel","panic","pansy","papal","paper","parer","parka","parry","parse","party","pasta","paste","pasty","patch","patio","patsy","patty","pause","payee","payer","peace","peach","pearl","pecan","pedal","penal","pence","penne","penny","perch","peril","perky","pesky","pesto","petal","petty","phase","phone","phony","photo","piano","picky","piece","piety","piggy","pilot","pinch","piney","pinky","pinto","piper","pique","pitch","pithy","pivot","pixel","pixie","pizza","place","plaid","plain","plait","plane","plank","plant","plate","plaza","plead","pleat","plied","plier","pluck","plumb","plume","plump","plunk","plush","poesy","point","poise","poker","polar","polka","polyp","pooch","poppy","porch","poser","posit","posse","pouch","pound","pouty","power","prank","prawn","preen","press","price","prick","pride","pried","prime","primo","print","prior","prism","privy","prize","probe","prone","prong","proof","prose","proud","prove","prowl","proxy","prude","prune","psalm","pubic","pudgy","puffy","pulpy","pulse","punch","pupil","puppy","puree","purer","purge","purse","pushy","putty","pygmy","quack","quail","quake","qualm","quark","quart","quash","quasi","queen","queer","quell","query","quest","queue","quick","quiet","quill","quilt","quirk","quite","quota","quote","quoth","rabbi","rabid","racer","radar","radii","radio","rainy","raise","rajah","rally","ralph","ramen","ranch","randy","range","rapid","rarer","raspy","ratio","ratty","raven","rayon","razor","reach","react","ready","realm","rearm","rebar","rebel","rebus","rebut","recap","recur","recut","reedy","refer","refit","regal","rehab","reign","relax","relay","relic","remit","renal","renew","repay","repel","reply","rerun","reset","resin","retch","retro","retry","reuse","revel","revue","rhino","rhyme","rider","ridge","rifle","right","rigid","rigor","rinse","ripen","riper","risen","riser","risky","rival","river","rivet","roach","roast","robin","robot","rocky","rodeo","roger","rogue","roomy","roost","rotor","rouge","rough","round","rouse","route","rover","rowdy","rower","royal","ruddy","ruder","rugby","ruler","rumba","rumor","rupee","rural","rusty","sadly","safer","saint","salad","sally","salon","salsa","salty","salve","salvo","sandy","saner","sappy","sassy","satin","satyr","sauce","saucy","sauna","saute","savor","savoy","savvy","scald","scale","scalp","scaly","scamp","scant","scare","scarf","scary","scene","scent","scion","scoff","scold","scone","scoop","scope","score","scorn","scour","scout","scowl","scram","scrap","scree","screw","scrub","scrum","scuba","sedan","seedy","segue","seize","semen","sense","sepia","serif","serum","serve","setup","seven","sever","sewer","shack","shade","shady","shaft","shake","shaky","shale","shall","shalt","shame","shank","shape","shard","share","shark","sharp","shave","shawl","shear","sheen","sheep","sheer","sheet","sheik","shelf","shell","shied","shift","shine","shiny","shire","shirk","shirt","shoal","shock","shone","shook","shoot","shore","shorn","short","shout","shove","shown","showy","shrew","shrub","shrug","shuck","shunt","shush","shyly","siege","sieve","sight","sigma","silky","silly","since","sinew","singe","siren","sissy","sixth","sixty","skate","skier","skiff","skill","skimp","skirt","skulk","skull","skunk","slack","slain","slang","slant","slash","slate","sleek","sleep","sleet","slept","slice","slick","slide","slime","slimy","sling","slink","sloop","slope","slosh","sloth","slump","slung","slunk","slurp","slush","slyly","smack","small","smart","smash","smear","smell","smelt","smile","smirk","smite","smith","smock","smoke","smoky","smote","snack","snail","snake","snaky","snare","snarl","sneak","sneer","snide","sniff","snipe","snoop","snore","snort","snout","snowy","snuck","snuff","soapy","sober","soggy","solar","solid","solve","sonar","sonic","sooth","sooty","sorry","sound","south","sower","space","spade","spank","spare","spark","spasm","spawn","speak","spear","speck","speed","spell","spelt","spend","spent","sperm","spice","spicy","spied","spiel","spike","spiky","spill","spilt","spine","spiny","spire","spite","splat","split","spoil","spoke","spoof","spook","spool","spoon","spore","sport","spout","spray","spree","sprig","spunk","spurn","spurt","squad","squat","squib","stack","staff","stage","staid","stain","stair","stake","stale","stalk","stall","stamp","stand","stank","stare","stark","start","stash","state","stave","stead","steak","steal","steam","steed","steel","steep","steer","stein","stern","stick","stiff","still","stilt","sting","stink","stint","stock","stoic","stoke","stole","stomp","stone","stony","stood","stool","stoop","store","stork","storm","story","stout","stove","strap","straw","stray","strip","strut","stuck","study","stuff","stump","stung","stunk","stunt","style","suave","sugar","suing","suite","sulky","sully","sumac","sunny","super","surer","surge","surly","sushi","swami","swamp","swarm","swash","swath","swear","sweat","sweep","sweet","swell","swept","swift","swill","swine","swing","swirl","swish","swoon","swoop","sword","swore","sworn","swung","synod","syrup","tabby","table","taboo","tacit","tacky","taffy","taint","taken","taker","tally","talon","tamer","tango","tangy","taper","tapir","tardy","tarot","taste","tasty","tatty","taunt","tawny","teach","teary","tease","teddy","teeth","tempo","tenet","tenor","tense","tenth","tepee","tepid","terra","terse","testy","thank","theft","their","theme","there","these","theta","thick","thief","thigh","thing","think","third","thong","thorn","those","three","threw","throb","throw","thrum","thumb","thump","thyme","tiara","tibia","tidal","tiger","tight","tilde","timer","timid","tipsy","titan","tithe","title","toast","today","toddy","token","tonal","tonga","tonic","tooth","topaz","topic","torch","torso","torus","total","totem","touch","tough","towel","tower","toxic","toxin","trace","track","tract","trade","trail","train","trait","tramp","trash","trawl","tread","treat","trend","triad","trial","tribe","trice","trick","tried","tripe","trite","troll","troop","trope","trout","trove","truce","truck","truer","truly","trump","trunk","truss","trust","truth","tryst","tubal","tuber","tulip","tulle","tumor","tunic","turbo","tutor","twang","tweak","tweed","tweet","twice","twine","twirl","twist","twixt","tying","udder","ulcer","ultra","umbra","uncle","uncut","under","undid","undue","unfed","unfit","unify","union","unite","unity","unlit","unmet","unset","untie","until","unwed","unzip","upper","upset","urban","urine","usage","usher","using","usual","usurp","utile","utter","vague","valet","valid","valor","value","valve","vapid","vapor","vault","vaunt","vegan","venom","venue","verge","verse","verso","verve","vicar","video","vigil","vigor","villa","vinyl","viola","viper","viral","virus","visit","visor","vista","vital","vivid","vixen","vocal","vodka","vogue","voice","voila","vomit","voter","vouch","vowel","vying","wacky","wafer","wager","wagon","waist","waive","waltz","warty","waste","watch","water","waver","waxen","weary","weave","wedge","weedy","weigh","weird","welch","welsh","whack","whale","wharf","wheat","wheel","whelp","where","which","whiff","while","whine","whiny","whirl","whisk","white","whole","whoop","whose","widen","wider","widow","width","wield","wight","willy","wimpy","wince","winch","windy","wiser","wispy","witch","witty","woken","woman","women","woody","wooer","wooly","woozy","wordy","world","worry","worse","worst","worth","would","wound","woven","wrack","wrath","wreak","wreck","wrest","wring","wrist","write","wrong","wrote","wrung","wryly","yacht","yearn","yeast","yield","young","youth","zebra","zesty","zonal"];var Ee=(s=>(s[s.None=0]="None",s[s.Partial=1]="Partial",s[s.Exact=2]="Exact",s))(Ee||{});function Dr(s){const e=s.length>=3?Dt:s.map(Mt),a=[];for(const r of e){const t=new Map;for(const n of s){const i=Bt(r,n);t.has(i)?t.get(i).push(n):t.set(i,[n])}const o=Array.from(t,([,n])=>n.length);a.push({guess:r,patternAnswerDistribs:t,avg:Ft(o),stdDev:Ut(o)})}return a.sort(Tt)}function Tt(s,e){const a=s.avg-e.avg;if(a!==0)return a;const r=s.stdDev-e.stdDev;return r!==0?r:1}function Bt(s,e){let a=0;const r={};for(let t=0;t<5;t++){const o=s[t],n=r[o]=(r[o]||0)+1;if(o in e){const i=e[o]||[];let l=0;for(let h=n-1;h<i.length;h++)if(l=1,i[h]===t){l=2;break}a+=ya(t,l)}}return a}function Rt(s,e,a){const r=Aa(s,e);if(r===a)return s;const t=ya(e,r),o=ya(e,a);return s-t+o}function ya(s,e){return e*3**s}function Aa(s,e){const a=s%3;return e===0?a:Aa((s-a)/3,e-1)}function Nt(s){const e={};for(let a=0;a<s.length;a++){const r=s[a];(e[r]=e[r]||[]).push(a)}return e}function Mt(s){const e=Array(5).fill("_");for(const a in s)for(const r of s[a])e[r]=a;return e.join("")}function Ft(s){return s.length<1?0:s.reduce((e,a)=>e+a)/s.length}function Ut(s){if(s.length<1)return 0;const e=s.reduce((a,r)=>a+r)/s.length;return Math.sqrt(s.map(a=>(a-e)**2).reduce((a,r)=>a+r)/s.length)}function Lt(s){if(!(!s||s.length===0))return{turns:[{guess:s[0].guess,pattern:0,guessStats:s}]}}function $t(s,e){const a=s.turns[s.turns.length-1],r=[...s.turns.slice(0,-1),{...a,guess:e}];return{...s,turns:r}}function Vt(s,e,a){const r=s.turns[s.turns.length-1],t=Rt(r.pattern,e,a);console.log(t);const o=[...s.turns.slice(0,-1),{...r,pattern:t}];return{...s,turns:o}}function Wt(s){const e=s.turns[s.turns.length-1],a=e.guessStats.find(o=>o.guess===e.guess);if(!a)return s;const r=a.patternAnswerDistribs.get(e.pattern);if(!r||r.length===0)return s;const t=Dr(r);return t.length===0?s:{...s,turns:[...s.turns,{guess:t[0].guess,pattern:0,guessStats:t}]}}function Va(s,e,a){const r=s.slice();return r[13]=e[a],r}function Wa(s,e,a){const r=s.slice();r[16]=e[a],r[20]=a;const t=r[20]===r[0].turns.length-1;r[17]=t;const o=r[0].turns[r[20]];return r[18]=o,r}function Ga(s,e,a){const r=s.slice();return r[21]=e[a],r}function Ya(s,e,a){const r=s.slice();r[21]=e[a];const t=r[18].guess[r[21]];r[24]=t;const o=Aa(r[18].pattern,r[21]);r[25]=o;const n=r[25]===Ee.Exact;r[26]=n;const i=r[25]===Ee.Partial;r[27]=i;const l=r[25]===Ee.None;return r[28]=l,r}function Gt(s){const e=s.slice(),a=e[0].turns[e[0].turns.length-1];e[11]=a;const r=e[11].guessStats.slice(0,e[1]);return e[12]=r,e}function Ha(s){let e,a=[],r=new Map,t,o,n,i='<div class="col col-1 svelte-7d0nf9">Guess</div> <div class="col col-2 svelte-7d0nf9">Expected words remaining</div> <div class="col col-3 svelte-7d0nf9">Standard deviation of remaining word counts</div>',l,h=me(Array(s[0].turns.length));const c=p=>p[20];for(let p=0;p<h.length;p+=1){let m=Wa(s,h,p),y=c(m);r.set(y,a[p]=Za(y,m))}let d=me(s[12]),u=[];for(let p=0;p<d.length;p+=1)u[p]=er(Va(s,d,p));return{c(){e=N("div");for(let p=0;p<a.length;p+=1)a[p].c();t=J(),o=N("ul"),n=N("li"),n.innerHTML=i,l=J();for(let p=0;p<u.length;p+=1)u[p].c();this.h()},l(p){e=M(p,"DIV",{class:!0});var m=X(e);for(let b=0;b<a.length;b+=1)a[b].l(m);m.forEach(A),t=Z(p),o=M(p,"UL",{class:!0});var y=X(o);n=M(y,"LI",{class:!0,"data-svelte-h":!0}),ma(n)!=="svelte-px97gu"&&(n.innerHTML=i),l=Z(y);for(let b=0;b<u.length;b+=1)u[b].l(y);y.forEach(A),this.h()},h(){L(e,"class","grid svelte-7d0nf9"),L(n,"class","table-header svelte-7d0nf9"),L(o,"class","responsive-table svelte-7d0nf9")},m(p,m){G(p,e,m);for(let y=0;y<a.length;y+=1)a[y]&&a[y].m(e,null);G(p,t,m),G(p,o,m),I(o,n),I(o,l);for(let y=0;y<u.length;y+=1)u[y]&&u[y].m(o,null)},p(p,m){if(m&41&&(h=me(Array(p[0].turns.length)),a=ba(a,m,c,1,p,h,r,e,ga,Za,null,Wa)),m&19){d=me(p[12]);let y;for(y=0;y<d.length;y+=1){const b=Va(p,d,y);u[y]?u[y].p(b,m):(u[y]=er(b),u[y].c(),u[y].m(o,null))}for(;y<u.length;y+=1)u[y].d(1);u.length=d.length}},d(p){p&&(A(e),A(t),A(o));for(let m=0;m<a.length;m+=1)a[m].d();Ur(u,p)}}}function Yt(s){let e,a="Loading...";return{c(){e=N("h2"),e.textContent=a},l(r){e=M(r,"H2",{"data-svelte-h":!0}),ma(e)!=="svelte-1ek26yc"&&(e.textContent=a)},m(r,t){G(r,e,t)},p:zs,d(r){r&&A(e)}}}function Ht(s){let e;return{c(){e=xe("(missing)")},l(a){e=ze(a,"(missing)")},m(a,r){G(a,e,r)},d(a){a&&A(e)}}}function Qt(s){let e;return{c(){e=xe("(present)")},l(a){e=ze(a,"(present)")},m(a,r){G(a,e,r)},d(a){a&&A(e)}}}function Xt(s){let e;return{c(){e=xe("(correct)")},l(a){e=ze(a,"(correct)")},m(a,r){G(a,e,r)},d(a){a&&A(e)}}}function Qa(s,e){let a,r=e[24]+"",t,o,n,i,l,h,c;function d(m,y){return m[26]?Xt:m[27]?Qt:Ht}let u=d(e),p=u(e);return{key:s,first:null,c(){a=N("div"),t=xe(r),o=J(),n=N("span"),p.c(),i=J(),l=N("input"),this.h()},l(m){a=M(m,"DIV",{class:!0});var y=X(a);t=ze(y,r),o=Z(y),n=M(y,"SPAN",{class:!0});var b=X(n);p.l(b),b.forEach(A),i=Z(y),l=M(y,"INPUT",{name:!0,type:!0}),y.forEach(A),this.h()},h(){L(n,"class","visually-hidden"),L(l,"name","guess"),l.disabled=h=!e[17],L(l,"type","hidden"),l.value=c=e[24],L(a,"class","letter svelte-7d0nf9"),he(a,"exact",e[26]),he(a,"partial",e[27]),he(a,"missing",e[28]),this.first=a},m(m,y){G(m,a,y),I(a,t),I(a,o),I(a,n),p.m(n,null),I(a,i),I(a,l)},p(m,y){e=m,y&1&&r!==(r=e[24]+"")&&ms(t,r),u!==(u=d(e))&&(p.d(1),p=u(e),p&&(p.c(),p.m(n,null))),y&1&&h!==(h=!e[17])&&(l.disabled=h),y&1&&c!==(c=e[24])&&(l.value=c),y&1&&he(a,"exact",e[26]),y&1&&he(a,"partial",e[27]),y&1&&he(a,"missing",e[28])},d(m){m&&A(a),p.d()}}}function Xa(s){let e,a="Next Word",r,t=[],o=new Map,n,i,l,h=me(Array.from(Array(5).keys()));const c=d=>d[21];for(let d=0;d<h.length;d+=1){let u=Ga(s,h,d),p=c(u);o.set(p,t[d]=Ja(p,u))}return{c(){e=N("button"),e.textContent=a,r=J();for(let d=0;d<t.length;d+=1)t[d].c();n=_s()},l(d){e=M(d,"BUTTON",{"data-svelte-h":!0}),ma(e)!=="svelte-r2d4f4"&&(e.textContent=a),r=Z(d);for(let u=0;u<t.length;u+=1)t[u].l(d);n=_s()},m(d,u){G(d,e,u),G(d,r,u);for(let p=0;p<t.length;p+=1)t[p]&&t[p].m(d,u);G(d,n,u),i||(l=We(e,"click",s[5]),i=!0)},p(d,u){u&8&&(h=me(Array.from(Array(5).keys())),t=ba(t,u,c,1,d,h,o,n.parentNode,ga,Ja,n,Ga))},d(d){d&&(A(e),A(r),A(n));for(let u=0;u<t.length;u+=1)t[u].d(d);i=!1,l()}}}function Ja(s,e){let a,r,t,o,n,i,l,h,c;function d(){return e[7](e[21])}function u(){return e[8](e[21])}function p(){return e[9](e[21])}return{key:s,first:null,c(){a=N("div"),r=N("button"),t=J(),o=N("button"),n=J(),i=N("button"),l=J(),this.h()},l(m){a=M(m,"DIV",{class:!0});var y=X(a);r=M(y,"BUTTON",{class:!0}),X(r).forEach(A),t=Z(y),o=M(y,"BUTTON",{class:!0}),X(o).forEach(A),n=Z(y),i=M(y,"BUTTON",{class:!0}),X(i).forEach(A),l=Z(y),y.forEach(A),this.h()},h(){L(r,"class","missing svelte-7d0nf9"),L(o,"class","partial svelte-7d0nf9"),L(i,"class","exact svelte-7d0nf9"),L(a,"class","matchselector svelte-7d0nf9"),this.first=a},m(m,y){G(m,a,y),I(a,r),I(a,t),I(a,o),I(a,n),I(a,i),I(a,l),h||(c=[We(r,"click",d),We(o,"click",u),We(i,"click",p)],h=!0)},p(m,y){e=m},d(m){m&&A(a),h=!1,sr(c)}}}function Za(s,e){let a,r=[],t=new Map,o,n,i=me(Array.from(Array(5).keys()));const l=c=>c[21];for(let c=0;c<i.length;c+=1){let d=Ya(e,i,c),u=l(d);t.set(u,r[c]=Qa(u,d))}let h=e[17]&&Xa(e);return{key:s,first:null,c(){a=N("div");for(let c=0;c<r.length;c+=1)r[c].c();o=J(),h&&h.c(),n=J(),this.h()},l(c){a=M(c,"DIV",{class:!0});var d=X(a);for(let u=0;u<r.length;u+=1)r[u].l(d);o=Z(d),h&&h.l(d),n=Z(d),d.forEach(A),this.h()},h(){L(a,"class","row svelte-7d0nf9"),he(a,"current",e[17]),this.first=a},m(c,d){G(c,a,d);for(let u=0;u<r.length;u+=1)r[u]&&r[u].m(a,null);I(a,o),h&&h.m(a,null),I(a,n)},p(c,d){e=c,d&1&&(i=me(Array.from(Array(5).keys())),r=ba(r,d,l,1,e,i,t,a,ga,Qa,o,Ya)),e[17]?h?h.p(e,d):(h=Xa(e),h.c(),h.m(a,n)):h&&(h.d(1),h=null),d&1&&he(a,"current",e[17])},d(c){c&&A(a);for(let d=0;d<r.length;d+=1)r[d].d();h&&h.d()}}}function er(s){let e,a,r=s[13].guess+"",t,o,n,i=s[13].avg.toFixed(2)+"",l,h,c,d=s[13].stdDev.toFixed(2)+"",u,p,m,y;function b(){return s[10](s[13])}return{c(){e=N("li"),a=N("div"),t=xe(r),o=J(),n=N("div"),l=xe(i),h=J(),c=N("div"),u=xe(d),p=J(),this.h()},l(f){e=M(f,"LI",{class:!0});var g=X(e);a=M(g,"DIV",{class:!0});var v=X(a);t=ze(v,r),v.forEach(A),o=Z(g),n=M(g,"DIV",{class:!0});var x=X(n);l=ze(x,i),x.forEach(A),h=Z(g),c=M(g,"DIV",{class:!0});var _=X(c);u=ze(_,d),_.forEach(A),p=Z(g),g.forEach(A),this.h()},h(){L(a,"class","col col-1 svelte-7d0nf9"),L(n,"class","col col-2 svelte-7d0nf9"),L(c,"class","col col-3 svelte-7d0nf9"),L(e,"class","table-row svelte-7d0nf9")},m(f,g){G(f,e,g),I(e,a),I(a,t),I(e,o),I(e,n),I(n,l),I(e,h),I(e,c),I(c,u),I(e,p),m||(y=We(e,"click",b),m=!0)},p(f,g){s=f,g&3&&r!==(r=s[13].guess+"")&&ms(t,r),g&3&&i!==(i=s[13].avg.toFixed(2)+"")&&ms(l,i),g&3&&d!==(d=s[13].stdDev.toFixed(2)+"")&&ms(u,d)},d(f){f&&A(e),m=!1,y()}}}function Jt(s){let e;function a(n,i){return n[0]?Ha:Yt}function r(n,i){return i===Ha?Gt(n):n}let t=a(s),o=t(r(s,t));return{c(){o.c(),e=_s()},l(n){o.l(n),e=_s()},m(n,i){o.m(n,i),G(n,e,i)},p(n,[i]){t===(t=a(n))&&o?o.p(r(n,t),i):(o.d(1),o=t(r(n,t)),o&&(o.c(),o.m(e.parentNode,e)))},i:zs,o:zs,d(n){n&&A(e),o.d(n)}}}function Zt(s,e,a){let r,t,o,n,i=zs,l=()=>(i(),i=Rr(r,b=>a(6,n=b)),r);s.$$.on_destroy.push(()=>i());function h(b,f){a(0,o=o&&Vt(o,b,f))}function c(b){a(0,o=o&&$t(o,b.guess))}function d(){a(0,o=o&&Wt(o))}const u=b=>h(b,Ee.None),p=b=>h(b,Ee.Partial),m=b=>h(b,Ee.Exact),y=b=>c(b);return s.$$.update=()=>{s.$$.dirty&64&&a(0,o=Lt(n))},l(a(2,r=Cr(async()=>{let b=await $a.data.get("guesses");if(!b){const f=It.map(Nt);b={id:"guesses",value:Dr(f)},await $a.data.add(b)}return(b==null?void 0:b.value)||[]}))),a(1,t=2e5),[o,t,r,h,c,d,n,u,p,m,y]}class ro extends Mr{constructor(e){super(),Fr(this,e,Zt,Jt,Br,{})}}export{ro as component};
